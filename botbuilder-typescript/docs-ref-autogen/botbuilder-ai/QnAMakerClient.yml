### YamlMime:TSType
name: QnAMakerClient
uid: botbuilder-ai.QnAMakerClient
package: botbuilder-ai
summary: Client to access a QnA Maker knowledge base.
fullName: QnAMakerClient
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: callTrain(FeedbackRecords)
    uid: botbuilder-ai.QnAMakerClient.callTrain
    package: botbuilder-ai
    summary: Send feedback to the knowledge base.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function callTrain(feedbackRecords: FeedbackRecords): Promise<void>'
      parameters:
        - id: feedbackRecords
          type: <xref uid="botbuilder-ai.FeedbackRecords" />
          description: |
            Feedback records.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      getAnswers(TurnContext, QnAMakerOptions, Record<string, string>,
      Record<string, number>)
    uid: botbuilder-ai.QnAMakerClient.getAnswers
    package: botbuilder-ai
    summary: Generates an answer from the knowledge base.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAnswers(turnContext: TurnContext, options?: QnAMakerOptions,
        telemetryProperties?: Record<string, string>, telemetryMetrics?:
        Record<string, number>): Promise<QnAMakerResult[]>
      parameters:
        - id: turnContext
          type: TurnContext
          description: >-
            The Turn Context that contains the user question to be queried
            against your knowledge base.
        - id: options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >-
            The options for the QnA Maker knowledge base. If null, constructor
            option is used for this instance.
        - id: telemetryProperties
          type: 'Record&lt;string, string&gt;'
          description: >-
            Additional properties to be logged to telemetry with the QnaMessage
            event.
        - id: telemetryMetrics
          type: 'Record&lt;string, number&gt;'
          description: >-
            Additional metrics to be logged to telemetry with the QnaMessage
            event.
      return:
        description: >-
          A list of answers for the user query, sorted in decreasing order of
          ranking score.
        type: 'Promise&lt;<xref uid="botbuilder-ai.QnAMakerResult" />[]&gt;'
  - name: >-
      getAnswersRaw(TurnContext, QnAMakerOptions, Record<string, string>,
      Record<string, number>)
    uid: botbuilder-ai.QnAMakerClient.getAnswersRaw
    package: botbuilder-ai
    summary: Generates an answer from the knowledge base.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAnswersRaw(turnContext: TurnContext, options?:
        QnAMakerOptions, telemetryProperties?: Record<string, string>,
        telemetryMetrics?: Record<string, number>): Promise<QnAMakerResults>
      parameters:
        - id: turnContext
          type: TurnContext
          description: >-
            The Turn Context that contains the user question to be queried
            against your knowledge base.
        - id: options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >-
            The options for the QnA Maker knowledge base. If null, constructor
            option is used for this instance.
        - id: telemetryProperties
          type: 'Record&lt;string, string&gt;'
          description: >-
            Additional properties to be logged to telemetry with the QnaMessage
            event.
        - id: telemetryMetrics
          type: 'Record&lt;string, number&gt;'
          description: >-
            Additional metrics to be logged to telemetry with the QnaMessage
            event.
      return:
        description: >-
          A list of answers for the user query, sorted in decreasing order of
          ranking score.
        type: Promise&lt;<xref uid="botbuilder-ai.QnAMakerResults" />&gt;
  - name: 'getLowScoreVariation(QnAMakerResult[])'
    uid: botbuilder-ai.QnAMakerClient.getLowScoreVariation
    package: botbuilder-ai
    summary: Filters the ambiguous question for active learning.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLowScoreVariation(queryResult: QnAMakerResult[]):
        QnAMakerResult[]
      parameters:
        - id: queryResult
          type: '<xref uid="botbuilder-ai.QnAMakerResult" />[]'
          description: User query output.
      return:
        description: Filtered array of ambiguous question.
        type: '<xref uid="botbuilder-ai.QnAMakerResult" />[]'
