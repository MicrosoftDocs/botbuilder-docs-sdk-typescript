### YamlMime:TSType
name: QnATelemetryConstants
uid: botbuilder-ai.QnATelemetryConstants
package: botbuilder-ai
summary: >-
  The BotTelemetryClient event, property and metric names that logged by
  default.
fullName: QnATelemetryConstants
isPreview: false
isDeprecated: false
type: class
properties:
  - name: answerProperty
    uid: botbuilder-ai.QnATelemetryConstants.answerProperty
    package: botbuilder-ai
    summary: ''
    fullName: answerProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static answerProperty: string = "answer"'
      return:
        type: string
        description: ''
  - name: articleFoundProperty
    uid: botbuilder-ai.QnATelemetryConstants.articleFoundProperty
    package: botbuilder-ai
    summary: ''
    fullName: articleFoundProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static articleFoundProperty: string = "articleFound"'
      return:
        type: string
        description: ''
  - name: channelIdProperty
    uid: botbuilder-ai.QnATelemetryConstants.channelIdProperty
    package: botbuilder-ai
    summary: ''
    fullName: channelIdProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static channelIdProperty: string = "channelId"'
      return:
        type: string
        description: ''
  - name: conversationIdProperty
    uid: botbuilder-ai.QnATelemetryConstants.conversationIdProperty
    package: botbuilder-ai
    summary: ''
    fullName: conversationIdProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static conversationIdProperty: string = "conversationId"'
      return:
        type: string
        description: ''
  - name: knowledgeBaseIdProperty
    uid: botbuilder-ai.QnATelemetryConstants.knowledgeBaseIdProperty
    package: botbuilder-ai
    summary: ''
    fullName: knowledgeBaseIdProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static knowledgeBaseIdProperty: string = "knowledgeBaseId"'
      return:
        type: string
        description: ''
  - name: matchedQuestionProperty
    uid: botbuilder-ai.QnATelemetryConstants.matchedQuestionProperty
    package: botbuilder-ai
    summary: ''
    fullName: matchedQuestionProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static matchedQuestionProperty: string = "matchedQuestion"'
      return:
        type: string
        description: ''
  - name: qnaMessageEvent
    uid: botbuilder-ai.QnATelemetryConstants.qnaMessageEvent
    package: botbuilder-ai
    summary: ''
    fullName: qnaMessageEvent
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static qnaMessageEvent: string = "QnaMessage"'
      return:
        type: string
        description: ''
  - name: questionIdProperty
    uid: botbuilder-ai.QnATelemetryConstants.questionIdProperty
    package: botbuilder-ai
    summary: ''
    fullName: questionIdProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static questionIdProperty: string = "questionId"'
      return:
        type: string
        description: ''
  - name: questionProperty
    uid: botbuilder-ai.QnATelemetryConstants.questionProperty
    package: botbuilder-ai
    summary: ''
    fullName: questionProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static questionProperty: string = "question"'
      return:
        type: string
        description: ''
  - name: scoreMetric
    uid: botbuilder-ai.QnATelemetryConstants.scoreMetric
    package: botbuilder-ai
    summary: ''
    fullName: scoreMetric
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static scoreMetric: string = "score"'
      return:
        type: string
        description: ''
  - name: usernameProperty
    uid: botbuilder-ai.QnATelemetryConstants.usernameProperty
    package: botbuilder-ai
    summary: ''
    fullName: usernameProperty
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static usernameProperty: string = "username"'
      return:
        type: string
        description: ''
