### YamlMime:TSType
name: QnACardBuilder
uid: botbuilder-ai.QnACardBuilder
package: botbuilder-ai
summary: >-
  Provides methods to create activities containing hero cards for showing active
  learning or multi-turn prompt options for the QnAMakerDialog.
fullName: QnACardBuilder
remarks: ''
isDeprecated: false
type: class
methods:
  - name: getHeroCard(string, any[])
    uid: botbuilder-ai.QnACardBuilder.getHeroCard
    package: botbuilder-ai
    summary: >-
      Returns a Hero Card attachment containing the text for the card and a
      button list
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function getHeroCard(cardText: string, buttonList: any[]):
        Attachment
      parameters:
        - id: cardText
          type: string
          description: The string to be placed in the card's text field
        - id: buttonList
          type: any[]
          description: >-
            The list of buttons to be converted to imBack buttons and attached
            to the card
      return:
        description: An attachment representing the Hero Card
        type: Attachment
  - name: getQnAAnswerCard(QnAMakerResult, boolean, boolean)
    uid: botbuilder-ai.QnACardBuilder.getQnAAnswerCard
    package: botbuilder-ai
    summary: >-
      Returns an [activity](xref:botframework-schema.Activity) with answer text
      and a card attachment, containing buttons for multi turn prompts.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function getQnAAnswerCard(result: QnAMakerResult,
        displayPreciseAnswerOnly: boolean, useTeamsAdaptiveCard?: boolean):
        Partial<Activity>
      parameters:
        - id: result
          type: <xref uid="botbuilder-ai.QnAMakerResult" />
          description: >-
            QnAMaker result containing the answer text and multi turn prompts to
            be displayed.
        - id: displayPreciseAnswerOnly
          type: boolean
          description: >-
            whether to display PreciseAnswer Only or along with source Answer
            text.
        - id: useTeamsAdaptiveCard
          type: boolean
          description: >-
            whether to use a Microsoft Teams formatted adaptive card instead of
            a hero card. Defaults to false.
             Card width is limited by Teams and long CQA responses should be formatted in the Language Studio to add line breaks. Card payload is specific to MS Teams.
      return:
        description: Activity representing the prompts as a card
        type: Partial&lt;Activity&gt;
  - name: getQnAPromptsCard(QnAMakerResult)
    uid: botbuilder-ai.QnACardBuilder.getQnAPromptsCard
    package: botbuilder-ai
    summary: >-
      Returns an [activity](xref:botframework-schema.Activity) with answer text
      and a hero card attachment, containing buttons for multi turn prompts.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function getQnAPromptsCard(result: QnAMakerResult):
        Partial<Activity>
      parameters:
        - id: result
          type: <xref uid="botbuilder-ai.QnAMakerResult" />
          description: >-
            QnAMaker result containing the answer text and multi turn prompts to
            be displayed.
      return:
        description: Activity representing the prompts as a card
        type: Partial&lt;Activity&gt;
  - name: getSuggestionsCard(string[], string, string, boolean)
    uid: botbuilder-ai.QnACardBuilder.getSuggestionsCard
    package: botbuilder-ai
    summary: >-
      Returns an [activity](xref:botframework-schema.Activity) with a hero card
      attachment, containing buttons for active learning suggestions.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function getSuggestionsCard(suggestionsList: string[], cardTitle:
        string, cardNoMatchText: string, useTeamsAdaptiveCard?: boolean):
        Partial<Activity>
      parameters:
        - id: suggestionsList
          type: string[]
          description: List of suggestions to be displayed on hero card.
        - id: cardTitle
          type: string
          description: Title of the hero card.
        - id: cardNoMatchText
          type: string
          description: >-
            Text for button to be added to card to allow user to select 'no
            match'.
        - id: useTeamsAdaptiveCard
          type: boolean
          description: >-
            whether to use a Microsoft Teams formatted adaptive card instead of
            a hero card. Defaults to false.
             Card width is limited by Teams and long CQA responses should be formatted in the Language Studio to add line breaks. Card payload is specific to MS Teams.
      return:
        description: Activity representing the suggestions as a card
        type: Partial&lt;Activity&gt;
  - name: getTeamsAdaptiveCard(string, any[])
    uid: botbuilder-ai.QnACardBuilder.getTeamsAdaptiveCard
    package: botbuilder-ai
    summary: >-
      Returns an Adaptive Card attachment containing the text for the card and a
      button list formatted for MS Teams
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function getTeamsAdaptiveCard(cardText: string, buttonList:
        any[]): Attachment
      parameters:
        - id: cardText
          type: string
          description: The string to be placed in the card's text field
        - id: buttonList
          type: any[]
          description: >-
            The list of buttons to be converted to MS Teams messageBack buttons
            and placed in the card's actions field
      return:
        description: An attachment representing the MS Teams-formatted Adaptive Card
        type: Attachment
