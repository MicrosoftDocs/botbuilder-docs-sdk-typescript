### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.QnAMakerOptions
    name: QnAMakerOptions
    fullName: QnAMakerOptions
    children:
      - botbuilder-ai.QnAMakerOptions.context
      - botbuilder-ai.QnAMakerOptions.isTest
      - botbuilder-ai.QnAMakerOptions.metadataBoost
      - botbuilder-ai.QnAMakerOptions.qnaId
      - botbuilder-ai.QnAMakerOptions.rankerType
      - botbuilder-ai.QnAMakerOptions.scoreThreshold
      - botbuilder-ai.QnAMakerOptions.strictFilters
      - botbuilder-ai.QnAMakerOptions.timeout
      - botbuilder-ai.QnAMakerOptions.top
    langs:
      - typeScript
    type: interface
    summary: Additional settings used to configure a `QnAMaker` instance.
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.context
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: The context of the previous turn.
    optional: true
    syntax:
      content: 'context?: QnARequestContext'
      return:
        type:
          - botbuilder-ai.QnARequestContext
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.isTest
    name: isTest
    fullName: isTest
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to call test or prod environment of
      knowledgebase.
    optional: true
    syntax:
      content: 'isTest?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.metadataBoost
    name: metadataBoost
    fullName: metadataBoost
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) Metadata related to query.
    optional: true
    syntax:
      content: 'metadataBoost?: QnAMakerMetadata[]'
      return:
        type:
          - 'botbuilder-ai.QnAMakerMetadata[]'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.qnaId
    name: qnaId
    fullName: qnaId
    children: []
    langs:
      - typeScript
    type: property
    summary: Id of the current question asked.
    optional: true
    syntax:
      content: 'qnaId?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.rankerType
    name: rankerType
    fullName: rankerType
    children: []
    langs:
      - typeScript
    type: property
    summary: Ranker types.
    optional: true
    syntax:
      content: 'rankerType?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.scoreThreshold
    name: scoreThreshold
    fullName: scoreThreshold
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) minimum score accepted.
    optional: true
    syntax:
      content: 'scoreThreshold?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
    remarks: Defaults to "0.3".
  - uid: botbuilder-ai.QnAMakerOptions.strictFilters
    name: strictFilters
    fullName: strictFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) Filters used on query.
    optional: true
    syntax:
      content: 'strictFilters?: QnAMakerMetadata[]'
      return:
        type:
          - 'botbuilder-ai.QnAMakerMetadata[]'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerOptions.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) The time in milliseconds to wait before the request times out.
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
    remarks: Defaults to "100000" milliseconds.
  - uid: botbuilder-ai.QnAMakerOptions.top
    name: top
    fullName: top
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) number of results to return.
    optional: true
    syntax:
      content: 'top?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
    remarks: Defaults to "1".
references:
  - uid: botbuilder-ai.QnARequestContext
    name: QnARequestContext
    spec.typeScript:
      - name: QnARequestContext
        fullName: QnARequestContext
        uid: botbuilder-ai.QnARequestContext
  - uid: 'botbuilder-ai.QnAMakerMetadata[]'
    name: 'QnAMakerMetadata[]'
    spec.typeScript:
      - name: QnAMakerMetadata
        fullName: QnAMakerMetadata
        uid: botbuilder-ai.QnAMakerMetadata
      - name: '[]'
        fullName: '[]'
