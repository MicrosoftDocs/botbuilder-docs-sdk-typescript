### YamlMime:TSType
name: QnAMakerRecognizer
uid: botbuilder-ai.QnAMakerRecognizer
package: botbuilder-ai
summary: A recognizer which uses QnAMaker KB to recognize intents.
fullName: QnAMakerRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'QnAMakerRecognizer(string, string, string)'
    uid: botbuilder-ai.QnAMakerRecognizer.constructor
    package: botbuilder-ai
    summary: Initializes a new instance of `QnAMakerRecognizer`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new QnAMakerRecognizer(hostname?: string, knowledgeBaseId?: string,
        endpointKey?: string)
      parameters:
        - id: hostname
          type: string
          description: Hostname of QnAMaker KB.
        - id: knowledgeBaseId
          type: string
          description: Id of QnAMaker KB.
        - id: endpointKey
          type: string
          description: |
            Endpoint key of QnAMaker KB.
properties:
  - name: $kind
    uid: botbuilder-ai.QnAMakerRecognizer.$kind
    package: botbuilder-ai
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: context
    uid: botbuilder-ai.QnAMakerRecognizer.context
    package: botbuilder-ai
    summary: An expression to evaluate to set the context.
    fullName: context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: ObjectExpression<QnARequestContext>'
      return:
        description: ''
        type: ObjectExpression&lt;<xref uid="botbuilder-ai.QnARequestContext" />&gt;
  - name: endpointKey
    uid: botbuilder-ai.QnAMakerRecognizer.endpointKey
    package: botbuilder-ai
    summary: Endpoint key for the QnA service.
    fullName: endpointKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpointKey: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: hostname
    uid: botbuilder-ai.QnAMakerRecognizer.hostname
    package: botbuilder-ai
    summary: Host name of the QnA maker knowledgebase.
    fullName: hostname
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hostname: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: includeDialogNameInMetadata
    uid: botbuilder-ai.QnAMakerRecognizer.includeDialogNameInMetadata
    package: botbuilder-ai
    summary: Whether to include the dialog name metadata for QnA context.
    fullName: includeDialogNameInMetadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'includeDialogNameInMetadata: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: isTest
    uid: botbuilder-ai.QnAMakerRecognizer.isTest
    package: botbuilder-ai
    summary: >-
      A value indicating whether to call test or prod environment of
      knowledgebase.
    fullName: isTest
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isTest: boolean'
      return:
        description: ''
        type: boolean
  - name: knowledgeBaseId
    uid: botbuilder-ai.QnAMakerRecognizer.knowledgeBaseId
    package: botbuilder-ai
    summary: Knowledgebase id of your QnA maker knowledgebase.
    fullName: knowledgeBaseId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'knowledgeBaseId: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: logPersonalInformation
    uid: botbuilder-ai.QnAMakerRecognizer.logPersonalInformation
    package: botbuilder-ai
    summary: >-
      The flag to indicate if personal information should be logged in
      telemetry.
    fullName: logPersonalInformation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'logPersonalInformation: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: metadata
    uid: botbuilder-ai.QnAMakerRecognizer.metadata
    package: botbuilder-ai
    summary: An expression to evaluate to set additional metadata name value pairs.
    fullName: metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'metadata: ArrayExpression<QnAMakerMetadata>'
      return:
        description: ''
        type: ArrayExpression&lt;<xref uid="botbuilder-ai.QnAMakerMetadata" />&gt;
  - name: qnaId
    uid: botbuilder-ai.QnAMakerRecognizer.qnaId
    package: botbuilder-ai
    summary: An expression to evaluate to set QnAId parameter.
    fullName: qnaId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'qnaId: IntExpression'
      return:
        description: ''
        type: IntExpression
  - name: qnaMatchIntent
    uid: botbuilder-ai.QnAMakerRecognizer.qnaMatchIntent
    package: botbuilder-ai
    summary: ''
    fullName: qnaMatchIntent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static qnaMatchIntent: "QnAMatch" = "QnAMatch"'
      return:
        description: ''
        type: '"QnAMatch"'
  - name: rankerType
    uid: botbuilder-ai.QnAMakerRecognizer.rankerType
    package: botbuilder-ai
    summary: Desired RankerType.
    fullName: rankerType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rankerType: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: strictFiltersJoinOperator
    uid: botbuilder-ai.QnAMakerRecognizer.strictFiltersJoinOperator
    package: botbuilder-ai
    summary: A value used for Join operation of Metadata.
    fullName: strictFiltersJoinOperator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strictFiltersJoinOperator: JoinOperator'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.JoinOperator" />
  - name: threshold
    uid: botbuilder-ai.QnAMakerRecognizer.threshold
    package: botbuilder-ai
    summary: Threshold for the results.
    fullName: threshold
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'threshold: NumberExpression'
      return:
        description: ''
        type: NumberExpression
  - name: top
    uid: botbuilder-ai.QnAMakerRecognizer.top
    package: botbuilder-ai
    summary: Number of results you want.
    fullName: top
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'top: IntExpression'
      return:
        description: ''
        type: IntExpression
inheritedProperties:
  - name: id
    uid: botbuilder-ai.QnAMakerRecognizer.id
    package: botbuilder-ai
    summary: Recognizers unique ID.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Recognizer.id
  - name: telemetryClient
    uid: botbuilder-ai.QnAMakerRecognizer.telemetryClient
    package: botbuilder-ai
    summary: |-
      The telemetry client for logging events.
      Default this to the NullTelemetryClient, which does nothing.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        description: ''
        type: BotTelemetryClient
    inheritanceDescription: <b>Inherited From</b> Recognizer.telemetryClient
inheritedMethods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-ai.QnAMakerRecognizer.configure
    package: botbuilder-ai
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: <b>Inherited From</b> Configurable.configure
methods:
  - name: getConverter(Object)
    uid: botbuilder-ai.QnAMakerRecognizer.getConverter
    package: botbuilder-ai
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object): Converter | ConverterFactory'
      parameters:
        - id: property
          type: Object
          description: Properties that extend QnAMakerRecognizerConfiguration.
      return:
        description: The expression converter.
        type: Converter | ConverterFactory
  - name: >-
      recognize(DialogContext, Activity, [key: string]: string, [key: string]:
      number)
    uid: botbuilder-ai.QnAMakerRecognizer.recognize
    package: botbuilder-ai
    summary: Gets results of the call to QnA maker KB.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(dc: DialogContext, activity: Activity,
        telemetryProperties?: [key: string]: string, telemetryMetrics?: [key:
        string]: number): Promise<RecognizerResult>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            Context object containing information for a single turn of
            coversation with a user.
        - id: activity
          type: Activity
          description: >-
            The incoming activity received from the user. The text value is used
            as the query to QnA Maker.
        - id: telemetryProperties
          type: '[key: string]\: string'
          description: Additional properties to be logged to telemetry.
        - id: telemetryMetrics
          type: '[key: string]\: number'
          description: Additional metrics to be logged to telemetry.
      return:
        description: A promise resolving to the recognizer result
        type: Promise&lt;RecognizerResult&gt;
extends: Recognizer
