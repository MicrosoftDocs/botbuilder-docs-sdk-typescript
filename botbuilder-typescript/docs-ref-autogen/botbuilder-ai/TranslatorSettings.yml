### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.TranslatorSettings
    name: TranslatorSettings
    fullName: TranslatorSettings
    children:
      - botbuilder-ai.TranslatorSettings.getUserLanguage
      - botbuilder-ai.TranslatorSettings.nativeLanguages
      - botbuilder-ai.TranslatorSettings.noTranslatePatterns
      - botbuilder-ai.TranslatorSettings.setUserLanguage
      - botbuilder-ai.TranslatorSettings.translateBackToUserLanguage
      - botbuilder-ai.TranslatorSettings.translatorKey
      - botbuilder-ai.TranslatorSettings.wordDictionary
    langs:
      - typeScript
    type: interface
    summary: Settings used to configure an instance of `LanguageTranslator`.
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.getUserLanguage
    name: getUserLanguage
    fullName: getUserLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) handler that will be called to get the users preferred language
      for the current

      turn.
    optional: true
    syntax:
      content: 'getUserLanguage?: (context: TurnContext) => string'
      return:
        type:
          - '(context: TurnContext) => string'
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.nativeLanguages
    name: nativeLanguages
    fullName: nativeLanguages
    children: []
    langs:
      - typeScript
    type: property
    summary: Native languages the bot understands.
    syntax:
      content: 'nativeLanguages: string[]'
      return:
        type:
          - 'string[]'
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.noTranslatePatterns
    name: noTranslatePatterns
    fullName: noTranslatePatterns
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) list of patterns that should NOT be translated.
    optional: true
    syntax:
      content: 'noTranslatePatterns?: [key: string]: function'
      return:
        type:
          - '[key: string]: function'
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.setUserLanguage
    name: setUserLanguage
    fullName: setUserLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) handler that will be called to determine if the user would like
      to change their

      preferred language.
    optional: true
    syntax:
      content: 'setUserLanguage?: (context: TurnContext) => Promise<boolean>'
      return:
        type:
          - '(context: TurnContext) => Promise<boolean>'
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.translateBackToUserLanguage
    name: translateBackToUserLanguage
    fullName: translateBackToUserLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) if `true` outgoing activities will be translated into the users
      preferred language.
    optional: true
    syntax:
      content: 'translateBackToUserLanguage?: boolean'
      return:
        type:
          - boolean
    package: botbuilder-ai
    remarks: Defaults to `false`.
  - uid: botbuilder-ai.TranslatorSettings.translatorKey
    name: translatorKey
    fullName: translatorKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The API key assigned by the Text Translator Cognitive Service.
    syntax:
      content: 'translatorKey: string'
      return:
        type:
          - string
    package: botbuilder-ai
  - uid: botbuilder-ai.TranslatorSettings.wordDictionary
    name: wordDictionary
    fullName: wordDictionary
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) list of replacement words.
    optional: true
    syntax:
      content: 'wordDictionary?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: botbuilder-ai
