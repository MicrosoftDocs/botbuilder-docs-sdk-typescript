### YamlMime:TSType
name: QnAMakerDialog
uid: botbuilder-ai.QnAMakerDialog
package: botbuilder-ai
summary: A dialog that supports multi-step and adaptive-learning QnA Maker services.
fullName: QnAMakerDialog
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      QnAMakerDialog(string, string, string, Activity, number,
      QnASuggestionsActivityFactory, string, number, Activity, RankerTypes,
      QnAMakerMetadata[], string, JoinOperator, boolean, boolean, ServiceType,
      boolean)
    uid: botbuilder-ai.QnAMakerDialog.constructor_1
    package: botbuilder-ai
    summary: >-
      Initializes a new instance of the
      [QnAMakerDialog](xref:botbuilder-ai.QnAMakerDialog) class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new QnAMakerDialog(knowledgeBaseId?: string, endpointKey?: string,
        hostname?: string, noAnswer?: Activity, threshold?: number,
        suggestionsActivityFactory?: QnASuggestionsActivityFactory,
        cardNoMatchText?: string, top?: number, cardNoMatchResponse?: Activity,
        rankerType?: RankerTypes, strictFilters?: QnAMakerMetadata[], dialogId?:
        string, strictFiltersJoinOperator?: JoinOperator, enablePreciseAnswer?:
        boolean, displayPreciseAnswerOnly?: boolean, qnaServiceType?:
        ServiceType, useTeamsAdaptiveCard?: boolean)
      parameters:
        - id: knowledgeBaseId
          type: string
          description: The ID of the QnA Maker knowledge base to query.
        - id: endpointKey
          type: string
          description: The QnA Maker endpoint key to use to query the knowledge base.
        - id: hostname
          type: string
          description: >-
            The QnA Maker host URL for the knowledge base, starting with
            "https://" and ending with "/qnamaker".
        - id: noAnswer
          type: Activity
          description: >-
            (Optional) The activity to send the user when QnA Maker does not
            find an answer.
        - id: threshold
          type: number
          description: >-
            (Optional) The threshold above which to treat answers found from the
            knowledgebase as a match.
        - id: suggestionsActivityFactory
          type: <xref uid="botbuilder-ai.QnASuggestionsActivityFactory" />
          description: >-
            [QnASuggestionsActivityFactory](xref:botbuilder-ai.QnASuggestionsActivityFactory)
            used for custom Activity formatting.
        - id: cardNoMatchText
          type: string
          description: >-
            The text to use with the active learning options, allowing a user to
            indicate none of the options are applicable.
        - id: top
          type: number
          description: >-
            (Optional) Maximum number of answers to return from the knowledge
            base.
        - id: cardNoMatchResponse
          type: Activity
          description: >-
            (Optional) The activity to send the user if they select the no match
            option on an active learning card.
        - id: rankerType
          type: <xref uid="botbuilder-ai.RankerTypes" />
          description: ''
        - id: strictFilters
          type: <xref uid="botbuilder-ai.QnAMakerMetadata" />[]
          description: >-
            (Optional) QnA Maker metadata with which to filter or boost queries
            to the knowledge base; or null to apply none.
        - id: dialogId
          type: string
          description: (Optional) Id of the created dialog. Default is 'QnAMakerDialog'.
        - id: strictFiltersJoinOperator
          type: <xref uid="botbuilder-ai.JoinOperator" />
          description: join operator for strict filters
        - id: enablePreciseAnswer
          type: boolean
          description: ''
        - id: displayPreciseAnswerOnly
          type: boolean
          description: ''
        - id: qnaServiceType
          type: <xref uid="botbuilder-ai.ServiceType" />
          description: ''
        - id: useTeamsAdaptiveCard
          type: boolean
          description: boolean setting for using Teams Adaptive Cards instead of Hero Cards
  - name: >-
      QnAMakerDialog(string, string, string, Activity, number, string, string,
      number, Activity, RankerTypes, QnAMakerMetadata[], string, JoinOperator,
      boolean, boolean, ServiceType, boolean)
    uid: botbuilder-ai.QnAMakerDialog.constructor
    package: botbuilder-ai
    summary: >-
      Initializes a new instance of the
      [QnAMakerDialog](xref:botbuilder-ai.QnAMakerDialog) class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new QnAMakerDialog(knowledgeBaseId?: string, endpointKey?: string,
        hostname?: string, noAnswer?: Activity, threshold?: number,
        activeLearningCardTitle?: string, cardNoMatchText?: string, top?:
        number, cardNoMatchResponse?: Activity, rankerType?: RankerTypes,
        strictFilters?: QnAMakerMetadata[], dialogId?: string,
        strictFiltersJoinOperator?: JoinOperator, enablePreciseAnswer?: boolean,
        displayPreciseAnswerOnly?: boolean, qnaServiceType?: ServiceType,
        useTeamsAdaptiveCard?: boolean)
      parameters:
        - id: knowledgeBaseId
          type: string
          description: The ID of the QnA Maker knowledge base to query.
        - id: endpointKey
          type: string
          description: The QnA Maker endpoint key to use to query the knowledge base.
        - id: hostname
          type: string
          description: >-
            The QnA Maker host URL for the knowledge base, starting with
            "https://" and ending with "/qnamaker".
        - id: noAnswer
          type: Activity
          description: >-
            (Optional) The activity to send the user when QnA Maker does not
            find an answer.
        - id: threshold
          type: number
          description: >-
            (Optional) The threshold above which to treat answers found from the
            knowledgebase as a match.
        - id: activeLearningCardTitle
          type: string
          description: >-
            (Optional) The card title to use when showing active learning
            options to the user, if active learning is enabled.
        - id: cardNoMatchText
          type: string
          description: >-
            (Optional) The button text to use with active learning options,
            allowing a user to indicate none of the options are applicable.
        - id: top
          type: number
          description: >-
            (Optional) Maximum number of answers to return from the knowledge
            base.
        - id: cardNoMatchResponse
          type: Activity
          description: >-
            (Optional) The activity to send the user if they select the no match
            option on an active learning card.
        - id: rankerType
          type: <xref uid="botbuilder-ai.RankerTypes" />
          description: ''
        - id: strictFilters
          type: <xref uid="botbuilder-ai.QnAMakerMetadata" />[]
          description: >-
            (Optional) QnA Maker metadata with which to filter or boost queries
            to the knowledge base; or null to apply none.
        - id: dialogId
          type: string
          description: (Optional) Id of the created dialog. Default is 'QnAMakerDialog'.
        - id: strictFiltersJoinOperator
          type: <xref uid="botbuilder-ai.JoinOperator" />
          description: join operator for strict filters
        - id: enablePreciseAnswer
          type: boolean
          description: ''
        - id: displayPreciseAnswerOnly
          type: boolean
          description: ''
        - id: qnaServiceType
          type: <xref uid="botbuilder-ai.ServiceType" />
          description: ''
        - id: useTeamsAdaptiveCard
          type: boolean
          description: boolean setting for using Teams Adaptive Cards instead of Hero Cards
properties:
  - name: $kind
    uid: botbuilder-ai.QnAMakerDialog.$kind
    package: botbuilder-ai
    summary: ''
    fullName: $kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: activeLearningCardTitle
    uid: botbuilder-ai.QnAMakerDialog.activeLearningCardTitle
    package: botbuilder-ai
    summary: >-
      Gets or sets the card title to use when showing active learning options to
      the user.


      _Note: If suggestionsActivityFactory is passed in, this member is unused._
    fullName: activeLearningCardTitle
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'activeLearningCardTitle: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: cardNoMatchResponse
    uid: botbuilder-ai.QnAMakerDialog.cardNoMatchResponse
    package: botbuilder-ai
    summary: >-
      Gets or sets the template to send to the user if they select the no match
      option on an

      active learning card.
    fullName: cardNoMatchResponse
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        cardNoMatchResponse: TemplateInterface<Partial<Activity>,
        DialogStateManager>
      return:
        description: ''
        type: TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;
  - name: cardNoMatchText
    uid: botbuilder-ai.QnAMakerDialog.cardNoMatchText
    package: botbuilder-ai
    summary: >-
      Gets or sets the button text to use with active learning options, allowing
      a user to

      indicate non of the options are applicable.


      _Note: If suggestionsActivityFactory is passed in, this member is
      required._
    fullName: cardNoMatchText
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'cardNoMatchText: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: displayPreciseAnswerOnly
    uid: botbuilder-ai.QnAMakerDialog.displayPreciseAnswerOnly
    package: botbuilder-ai
    summary: >-
      Gets or sets a value indicating whether the dialog response should display
      only precise answers.
    fullName: displayPreciseAnswerOnly
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'displayPreciseAnswerOnly: boolean'
      return:
        description: ''
        type: boolean
  - name: enablePreciseAnswer
    uid: botbuilder-ai.QnAMakerDialog.enablePreciseAnswer
    package: botbuilder-ai
    summary: >-
      Gets or sets a value indicating whether to include precise answer in
      response.
    fullName: enablePreciseAnswer
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enablePreciseAnswer: boolean'
      return:
        description: ''
        type: boolean
  - name: endpointKey
    uid: botbuilder-ai.QnAMakerDialog.endpointKey
    package: botbuilder-ai
    summary: >-
      Gets or sets the QnA Maker endpoint key to use to query the knowledge
      base.
    fullName: endpointKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpointKey: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: filters
    uid: botbuilder-ai.QnAMakerDialog.filters
    package: botbuilder-ai
    summary: Gets or sets the metadata and sources used to filter results.
    fullName: filters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'filters: Filters'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.Filters" />
  - name: hostname
    uid: botbuilder-ai.QnAMakerDialog.hostname
    package: botbuilder-ai
    summary: Gets or sets the QnA Maker host URL for the knowledge base.
    fullName: hostname
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hostname: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: id
    uid: botbuilder-ai.QnAMakerDialog.id
    package: botbuilder-ai
    summary: Unique ID of the dialog.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: string id
      return:
        description: The Id for the dialog.
        type: string
  - name: includeUnstructuredSources
    uid: botbuilder-ai.QnAMakerDialog.includeUnstructuredSources
    package: botbuilder-ai
    summary: >-
      Gets or sets a value indicating whether to include unstructured sources in
      search for answers.
    fullName: includeUnstructuredSources
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'includeUnstructuredSources: boolean'
      return:
        description: ''
        type: boolean
  - name: isTest
    uid: botbuilder-ai.QnAMakerDialog.isTest
    package: botbuilder-ai
    summary: >-
      Gets or sets a value indicating whether gets or sets environment of
      knowledgebase to be called.
    fullName: isTest
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isTest: boolean'
      return:
        description: ''
        type: boolean
  - name: knowledgeBaseId
    uid: botbuilder-ai.QnAMakerDialog.knowledgeBaseId
    package: botbuilder-ai
    summary: Gets or sets the QnA Maker knowledge base ID to query.
    fullName: knowledgeBaseId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'knowledgeBaseId: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: logPersonalInformation
    uid: botbuilder-ai.QnAMakerDialog.logPersonalInformation
    package: botbuilder-ai
    summary: >-
      Gets or sets the flag to determine if personal information should be
      logged in telemetry.
    fullName: logPersonalInformation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'logPersonalInformation: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: noAnswer
    uid: botbuilder-ai.QnAMakerDialog.noAnswer
    package: botbuilder-ai
    summary: >-
      Gets or sets the template to send to the user when QnA Maker does not find
      an answer.
    fullName: noAnswer
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'noAnswer: TemplateInterface<Partial<Activity>, DialogStateManager>'
      return:
        description: ''
        type: TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;
  - name: qnaServiceType
    uid: botbuilder-ai.QnAMakerDialog.qnaServiceType
    package: botbuilder-ai
    summary: Question answering service type - qnaMaker or language
    fullName: qnaServiceType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'qnaServiceType: ServiceType'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.ServiceType" />
  - name: rankerType
    uid: botbuilder-ai.QnAMakerDialog.rankerType
    package: botbuilder-ai
    summary: Gets or sets the QnA Maker ranker type to use.
    fullName: rankerType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rankerType: EnumExpression<RankerTypes>'
      return:
        description: ''
        type: EnumExpression&lt;<xref uid="botbuilder-ai.RankerTypes" />&gt;
  - name: strictFilters
    uid: botbuilder-ai.QnAMakerDialog.strictFilters
    package: botbuilder-ai
    summary: >-
      Gets or sets the QnA Maker metadata with which to filter or boost queries
      to the knowledge base,

      or null to apply none.
    fullName: strictFilters
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strictFilters: QnAMakerMetadata[]'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.QnAMakerMetadata" />[]
  - name: strictFiltersJoinOperator
    uid: botbuilder-ai.QnAMakerDialog.strictFiltersJoinOperator
    package: botbuilder-ai
    summary: Gets or sets a value - AND or OR - logical operation on list of metadata
    fullName: strictFiltersJoinOperator
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strictFiltersJoinOperator: JoinOperator'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.JoinOperator" />
  - name: telemetryClient
    uid: botbuilder-ai.QnAMakerDialog.telemetryClient
    package: botbuilder-ai
    summary: Gets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        description: >-
          The [BotTelemetryClient](xref:botbuilder.BotTelemetryClient) to use
          for logging.
        type: BotTelemetryClient
  - name: threshold
    uid: botbuilder-ai.QnAMakerDialog.threshold
    package: botbuilder-ai
    summary: Gets or sets the threshold for answers returned, based on score.
    fullName: threshold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'threshold: NumberExpression'
      return:
        description: ''
        type: NumberExpression
  - name: top
    uid: botbuilder-ai.QnAMakerDialog.top
    package: botbuilder-ai
    summary: >-
      Gets or sets the maximum number of answers to return from the knowledge
      base.
    fullName: top
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'top: IntExpression'
      return:
        description: ''
        type: IntExpression
  - name: useTeamsAdaptiveCard
    uid: botbuilder-ai.QnAMakerDialog.useTeamsAdaptiveCard
    package: botbuilder-ai
    summary: >-
      Gets or sets a value indicating whether to use a Teams-formatted Adaptive
      Card in responses instead of a generic Hero Card.
    fullName: useTeamsAdaptiveCard
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'useTeamsAdaptiveCard: boolean'
      return:
        description: ''
        type: boolean
inheritedProperties:
  - name: EndOfTurn
    uid: botbuilder-ai.QnAMakerDialog.EndOfTurn
    package: botbuilder-ai
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult<any>'
      return:
        description: ''
        type: DialogTurnResult&lt;any&gt;
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.EndOfTurn
inheritedMethods:
  - name: addStep(WaterfallStep<{}>)
    uid: botbuilder-ai.QnAMakerDialog.addStep
    package: botbuilder-ai
    summary: Adds a new step to the waterfall.
    remarks: >-
      All step functions should be asynchronous and return a `DialogTurnResult`.
      The

      `WaterfallStepContext` passed into your function derives from
      `DialogContext` and contains

      numerous stack manipulation methods which return a `DialogTurnResult` so
      you can typically

      just return the result from the DialogContext method you call.


      The step function itself can be either an asynchronous closure:


      ```JavaScript

      const helloDialog = new WaterfallDialog('hello');


      helloDialog.addStep(async (step) => {
          await step.context.sendActivity(`Hello World!`);
          return await step.endDialog();
      });

      ```


      A named async function:


      ```JavaScript

      async function helloWorldStep(step) {
          await step.context.sendActivity(`Hello World!`);
          return await step.endDialog();
      }


      helloDialog.addStep(helloWorldStep);

      ```


      Or a class method that's been bound to its `this` pointer:


      ```JavaScript

      helloDialog.addStep(this.helloWorldStep.bind(this));

      ```
    isDeprecated: false
    syntax:
      content: 'function addStep(step: WaterfallStep<{}>): QnAMakerDialog'
      parameters:
        - id: step
          type: WaterfallStep&lt;{}&gt;
          description: Asynchronous step function to call.
      return:
        description: Waterfall dialog for fluent calls to `addStep()`.
        type: <xref uid="botbuilder-ai.QnAMakerDialog" />
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.addStep
  - name: configure(Record<string, unknown>)
    uid: botbuilder-ai.QnAMakerDialog.configure
    package: botbuilder-ai
    summary: Fluent method for configuring the object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): QnAMakerDialog'
      parameters:
        - id: config
          type: Record&lt;string, unknown&gt;
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: <xref uid="botbuilder-ai.QnAMakerDialog" />
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.configure
  - name: endDialog(TurnContext, DialogInstance<any>, DialogReason)
    uid: botbuilder-ai.QnAMakerDialog.endDialog
    package: botbuilder-ai
    summary: Called when the dialog is ending.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance<any>,
        reason: DialogReason): Promise<void>
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation.
        - id: instance
          type: DialogInstance&lt;any&gt;
          description: The instance of the current dialog.
        - id: reason
          type: DialogReason
          description: The reason the dialog is ending.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.endDialog
  - name: getVersion()
    uid: botbuilder-ai.QnAMakerDialog.getVersion
    package: botbuilder-ai
    summary: Gets the dialog version, composed of the ID and number of steps.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getVersion(): string'
      return:
        description: Dialog version, composed of the ID and number of steps.
        type: string
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.getVersion
  - name: onDialogEvent(DialogContext, DialogEvent)
    uid: botbuilder-ai.QnAMakerDialog.onDialogEvent
    package: botbuilder-ai
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onDialogEvent(dc: DialogContext, e: DialogEvent):
        Promise<boolean>
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.onDialogEvent
  - name: repromptDialog(TurnContext, DialogInstance<any>)
    uid: botbuilder-ai.QnAMakerDialog.repromptDialog
    package: botbuilder-ai
    summary: When overridden in a derived class, reprompts the user for input.
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(_context: TurnContext, _instance:
        DialogInstance<any>): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: DialogInstance&lt;any&gt;
          description: Current state information for this dialog.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.repromptDialog
  - name: resumeDialog(DialogContext, DialogReason, any)
    uid: botbuilder-ai.QnAMakerDialog.resumeDialog
    package: botbuilder-ai
    summary: >-
      Called when a child
      [WaterfallDialog](xref:botbuilder-dialogs.WaterfallDialog) completed its
      turn, returning control to this dialog.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any): Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of the conversation.
        - id: reason
          type: DialogReason
          description: >-
            [Reason](xref:botbuilder-dialogs.DialogReason) why the dialog
            resumed.
        - id: result
          type: any
          description: |-
            Optional, value returned from the dialog that was called. The type
            of the value returned is dependent on the child dialog.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
    inheritanceDescription: <b>Inherited From</b> WaterfallDialog.resumeDialog
methods:
  - name: beginDialog(DialogContext, object)
    uid: botbuilder-ai.QnAMakerDialog.beginDialog
    package: botbuilder-ai
    summary: Called when the dialog is started and pushed onto the dialog stack.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options?: object):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: options
          type: object
          description: (Optional) Initial information to pass to the dialog.
      return:
        description: A promise resolving to the turn result
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
  - name: continueDialog(DialogContext)
    uid: botbuilder-ai.QnAMakerDialog.continueDialog
    package: botbuilder-ai
    summary: >-
      Called when the dialog is _continued_, where it is the active dialog and
      the

      user replies with a new [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function continueDialog(dc: DialogContext):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
  - name: getConverter(keyof QnAMakerDialogConfiguration)
    uid: botbuilder-ai.QnAMakerDialog.getConverter
    package: botbuilder-ai
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConverter(property: keyof QnAMakerDialogConfiguration):
        Converter<unknown, unknown> | ConverterFactory<unknown, unknown>
      parameters:
        - id: property
          type: keyof QnAMakerDialogConfiguration
          description: Properties that extend QnAMakerDialogConfiguration.
      return:
        description: The expression converter.
        type: >-
          Converter&lt;unknown, unknown&gt; | ConverterFactory&lt;unknown,
          unknown&gt;
extends: WaterfallDialog
