### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.QnAMakerResult
    name: QnAMakerResult
    fullName: QnAMakerResult
    children:
      - botbuilder-ai.QnAMakerResult.answer
      - botbuilder-ai.QnAMakerResult.id
      - botbuilder-ai.QnAMakerResult.metadata
      - botbuilder-ai.QnAMakerResult.questions
      - botbuilder-ai.QnAMakerResult.score
      - botbuilder-ai.QnAMakerResult.source
    langs:
      - typeScript
    type: interface
    summary: An individual answer returned by `QnAMaker.generateAnswer()`.
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.answer
    name: answer
    fullName: answer
    children: []
    langs:
      - typeScript
    type: property
    summary: Answer from the knowledge base.
    syntax:
      content: 'answer: string'
      return:
        type:
          - string
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The index of the answer in the knowledge base. V3 uses 'qnaId', V4 uses
      'id'.
    optional: true
    syntax:
      content: 'id?: number'
      return:
        type:
          - number
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Metadata associated with the answer
    optional: true
    syntax:
      content: 'metadata?: any'
      return:
        type:
          - any
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.questions
    name: questions
    fullName: questions
    children: []
    langs:
      - typeScript
    type: property
    summary: The list of questions indexed in the QnA Service for the given answer.
    optional: true
    syntax:
      content: 'questions?: string[]'
      return:
        type:
          - 'string[]'
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.score
    name: score
    fullName: score
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Confidence on a scale from 0.0 to 1.0 that the answer matches the users
      intent.
    syntax:
      content: 'score: number'
      return:
        type:
          - number
    package: botbuilder-ai
  - uid: botbuilder-ai.QnAMakerResult.source
    name: source
    fullName: source
    children: []
    langs:
      - typeScript
    type: property
    summary: The source from which the QnA was extracted
    optional: true
    syntax:
      content: 'source?: string'
      return:
        type:
          - string
    package: botbuilder-ai
