### YamlMime:TSType
name: LuisRecognizer
uid: botbuilder-ai.LuisRecognizer
package: botbuilder-ai
summary: Recognize intents in a user utterance using a configured LUIS model.
fullName: LuisRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      LuisRecognizer(LuisApplication | string, LuisRecognizerOptionsV3 |
      LuisRecognizerOptionsV2)
    uid: botbuilder-ai.LuisRecognizer.constructor_2
    package: botbuilder-ai
    summary: >-
      Creates a new [LuisRecognizer](xref:botbuilder-ai.LuisRecognizer)
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: LuisApplication | string, options?:
        LuisRecognizerOptionsV3 | LuisRecognizerOptionsV2)
      parameters:
        - id: application
          type: <xref uid="botbuilder-ai.LuisApplication" /> | string
          description: >-
            The LUIS application endpoint, usually retrieved from
            https://luis.ai.
        - id: options
          type: >-
            <xref uid="botbuilder-ai.LuisRecognizerOptionsV3" /> | <xref
            uid="botbuilder-ai.LuisRecognizerOptionsV2" />
          description: >-
            Optional. Options object used to control predictions. Should conform
            to the
            [LuisPredictionOptions](xref:botbuilder-ai.LuisPredictionOptions)
            definition.
  - name: 'LuisRecognizer(LuisApplication, LuisPredictionOptions, boolean)'
    uid: botbuilder-ai.LuisRecognizer.constructor_1
    package: botbuilder-ai
    summary: >-
      Creates a new [LuisRecognizer](xref:botbuilder-ai.LuisRecognizer)
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: LuisApplication, options?:
        LuisPredictionOptions, includeApiResults?: boolean)
      parameters:
        - id: application
          type: <xref uid="botbuilder-ai.LuisApplication" />
          description: >-
            The LUIS application endpoint, usually retrieved from
            https://luis.ai.
        - id: options
          type: <xref uid="botbuilder-ai.LuisPredictionOptions" />
          description: >-
            Optional. Options object used to control predictions. Should conform
            to the
            [LuisPredictionOptions](xref:botbuilder-ai.LuisPredictionOptions)
            definition.
        - id: includeApiResults
          type: boolean
          description: >
            (Deprecated) Flag that if set to `true` will force the inclusion of
            LUIS Api call in results returned by the
            [LuisRecognizer.recognize](xref:botbuilder-ai.LuisRecognizer.recognize)
            method. Defaults to a value of `false`.
  - name: 'LuisRecognizer(string, LuisPredictionOptions, boolean)'
    uid: botbuilder-ai.LuisRecognizer.constructor
    package: botbuilder-ai
    summary: >-
      Creates a new [LuisRecognizer](xref:botbuilder-ai.LuisRecognizer)
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: string, options?: LuisPredictionOptions,
        includeApiResults?: boolean)
      parameters:
        - id: application
          type: string
          description: >-
            The LUIS application endpoint, usually retrieved from
            https://luis.ai.
        - id: options
          type: <xref uid="botbuilder-ai.LuisPredictionOptions" />
          description: >-
            Optional. Options object used to control predictions. Should conform
            to the
            [LuisPredictionOptions](xref:botbuilder-ai.LuisPredictionOptions)
            definition.
        - id: includeApiResults
          type: boolean
          description: >
            (Deprecated) Flag that if set to `true` will force the inclusion of
            LUIS Api call in results returned by the
            [LuisRecognizer.recognize](xref:botbuilder-ai.LuisRecognizer.recognize)
            method. Defaults to a value of `false`.
properties:
  - name: logPersonalInformation
    uid: botbuilder-ai.LuisRecognizer.logPersonalInformation
    package: botbuilder-ai
    summary: >-
      Gets a value indicating whether determines whether to log personal
      information that came from the user.
    fullName: logPersonalInformation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean logPersonalInformation
      return:
        description: >-
          True if will log personal information into the
          BotTelemetryClient.TrackEvent method; otherwise the properties will be
          filtered.
        type: boolean
  - name: telemetryClient
    uid: botbuilder-ai.LuisRecognizer.telemetryClient
    package: botbuilder-ai
    summary: Gets the currently configured BotTelemetryClient that logs the events.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        description: >-
          Currently configured BotTelemetryClient that logs the LuisResult
          event.
        type: BotTelemetryClient
methods:
  - name: >-
      recognize(DialogContext | TurnContext, Record<string, string>,
      Record<string, number>, LuisRecognizerOptionsV2 | LuisRecognizerOptionsV3
      | LuisPredictionOptions)
    uid: botbuilder-ai.LuisRecognizer.recognize
    package: botbuilder-ai
    summary: Calls LUIS to recognize intents and entities in a users utterance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(context: DialogContext | TurnContext,
        telemetryProperties?: Record<string, string>, telemetryMetrics?:
        Record<string, number>, options?: LuisRecognizerOptionsV2 |
        LuisRecognizerOptionsV3 | LuisPredictionOptions):
        Promise<RecognizerResult>
      parameters:
        - id: context
          type: DialogContext | TurnContext
          description: Context for the current turn of conversation with the use.
        - id: telemetryProperties
          type: 'Record&lt;string, string&gt;'
          description: >-
            Additional properties to be logged to telemetry with the LuisResult
            event.
        - id: telemetryMetrics
          type: 'Record&lt;string, number&gt;'
          description: >-
            Additional metrics to be logged to telemetry with the LuisResult
            event.
        - id: options
          type: >-
            <xref uid="botbuilder-ai.LuisRecognizerOptionsV2" /> | <xref
            uid="botbuilder-ai.LuisRecognizerOptionsV3" /> | <xref
            uid="botbuilder-ai.LuisPredictionOptions" />
          description: >-
            (Optional) options object used to override control predictions.
            Should conform to the [LuisRecognizerOptionsV2] or
            [LuisRecognizerOptionsV3] definition.
      return:
        description: A promise that resolved to the recognizer result.
        type: Promise&lt;RecognizerResult&gt;
  - name: >-
      recognize(string, LuisRecognizerOptionsV2 | LuisRecognizerOptionsV3 |
      LuisPredictionOptions)
    uid: botbuilder-ai.LuisRecognizer.recognize_1
    package: botbuilder-ai
    summary: Calls LUIS to recognize intents and entities in a users utterance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(utterance: string, options?: LuisRecognizerOptionsV2
        | LuisRecognizerOptionsV3 | LuisPredictionOptions):
        Promise<RecognizerResult>
      parameters:
        - id: utterance
          type: string
          description: The utterance to be recognized.
        - id: options
          type: >-
            <xref uid="botbuilder-ai.LuisRecognizerOptionsV2" /> | <xref
            uid="botbuilder-ai.LuisRecognizerOptionsV3" /> | <xref
            uid="botbuilder-ai.LuisPredictionOptions" />
          description: >
            (Optional) options object used to override control predictions.
            Should conform to the [LuisRecognizerOptionsV2] or
            [LuisRecognizerOptionsV3] definition.
      return:
        description: ''
        type: Promise&lt;RecognizerResult&gt;
  - name: 'sortedIntents(RecognizerResult, number)'
    uid: botbuilder-ai.LuisRecognizer.sortedIntents
    package: botbuilder-ai
    summary: >-
      Sorts recognizer result intents in ascending order by score, filtering
      those that

      have scores less that `minScore`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function sortedIntents(result?: RecognizerResult, minScore?:
        number): Array<{ intent: string, score: number }>
      parameters:
        - id: result
          type: RecognizerResult
          description: recognizer result to be sorted and filtered
        - id: minScore
          type: number
          description: 'minimum score threshold, lower score results will be filtered'
      return:
        description: '>} sorted result intents'
        type: 'Array&lt;{ intent: string, score: number }&gt;'
  - name: 'topIntent(RecognizerResult, string, number)'
    uid: botbuilder-ai.LuisRecognizer.topIntent
    package: botbuilder-ai
    summary: Returns the name of the top scoring intent from a set of LUIS results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function topIntent(results?: RecognizerResult, defaultIntent?:
        string, minScore?: number): string
      parameters:
        - id: results
          type: RecognizerResult
          description: Result set to be searched.
        - id: defaultIntent
          type: string
          description: >-
            (Optional) intent name to return should a top intent be found.
            Defaults to a value of `None`.
        - id: minScore
          type: number
          description: >-
            (Optional) minimum score needed for an intent to be considered as a
            top intent. If all intents in the set are below this threshold then
            the `defaultIntent` will be returned.  Defaults to a value of `0.0`.
      return:
        description: the top intent
        type: string
