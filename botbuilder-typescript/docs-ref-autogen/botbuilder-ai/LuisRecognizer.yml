### YamlMime:TSType
name: LuisRecognizer
uid: botbuilder-ai.LuisRecognizer
package: botbuilder-ai
summary: Recognize intents in a user utterance using a configured LUIS model.
fullName: LuisRecognizer
remarks: >-
  This class is used to recognize intents and extract entities from incoming
  messages.

  See this class in action [in this sample
  application](https://github.com/microsoft/BotBuilder-Samples/tree/master/samples/javascript_nodejs/14.nlp-with-dispatch).


  This component can be used within your bots logic by calling
  [recognize()](#recognize).
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      LuisRecognizer(LuisApplication | string, LuisRecognizerOptionsV3 |
      LuisRecognizerOptionsV2)
    uid: botbuilder-ai.LuisRecognizer.constructor_2
    package: botbuilder-ai
    summary: Creates a new LuisRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: LuisApplication | string, options?:
        LuisRecognizerOptionsV3 | LuisRecognizerOptionsV2)
      parameters:
        - id: application
          type: <xref uid="botbuilder-ai.LuisApplication" /> | string
          description: >-
            An object conforming to the [LuisApplication](#luisapplication)
            definition or a string representing a LUIS application endpoint,
            usually retrieved from https://luis.ai.
        - id: options
          type: >-
            <xref uid="botbuilder-ai.LuisRecognizerOptionsV3" /> | <xref
            uid="botbuilder-ai.LuisRecognizerOptionsV2" />
          description: >-
            (Optional) options object used to control predictions. Should
            conform to the [LuisRecognizerOptions](#luisrecognizeroptions)
            definition.
  - name: 'LuisRecognizer(LuisApplication, LuisPredictionOptions, boolean)'
    uid: botbuilder-ai.LuisRecognizer.constructor_1
    package: botbuilder-ai
    summary: Creates a new LuisRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: LuisApplication, options?:
        LuisPredictionOptions, includeApiResults?: boolean)
      parameters:
        - id: application
          type: <xref uid="botbuilder-ai.LuisApplication" />
          description: >-
            An object conforming to the [LuisApplication](#luisapplication)
            definition or a string representing a LUIS application endpoint,
            usually retrieved from https://luis.ai.
        - id: options
          type: <xref uid="botbuilder-ai.LuisPredictionOptions" />
          description: >-
            (Optional) options object used to control predictions. Should
            conform to the [LuisRecognizerOptions](#luisrecognizeroptions)
            definition.
        - id: includeApiResults
          type: boolean
          description: >
            (Deprecated) flag that if set to `true` will force the inclusion of
            LUIS Api call in results returned by [recognize()](#recognize).
            Defaults to a value of `false`.
  - name: 'LuisRecognizer(string, LuisPredictionOptions, boolean)'
    uid: botbuilder-ai.LuisRecognizer.constructor
    package: botbuilder-ai
    summary: Creates a new LuisRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new LuisRecognizer(application: string, options?: LuisPredictionOptions,
        includeApiResults?: boolean)
      parameters:
        - id: application
          type: string
          description: >-
            An object conforming to the [LuisApplication](#luisapplication)
            definition or a string representing a LUIS application endpoint,
            usually retrieved from https://luis.ai.
        - id: options
          type: <xref uid="botbuilder-ai.LuisPredictionOptions" />
          description: >-
            (Optional) options object used to control predictions. Should
            conform to the [LuisRecognizerOptions](#luisrecognizeroptions)
            definition.
        - id: includeApiResults
          type: boolean
          description: >
            (Deprecated) flag that if set to `true` will force the inclusion of
            LUIS Api call in results returned by [recognize()](#recognize).
            Defaults to a value of `false`.
properties:
  - name: logPersonalInformation
    uid: botbuilder-ai.LuisRecognizer.logPersonalInformation
    package: botbuilder-ai
    summary: >-
      Gets a value indicating whether determines whether to log personal
      information that came from the user.
    fullName: logPersonalInformation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean logPersonalInformation
      return:
        type: boolean
        description: ''
  - name: telemetryClient
    uid: botbuilder-ai.LuisRecognizer.telemetryClient
    package: botbuilder-ai
    summary: Gets the currently configured botTelemetryClient that logs the events.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: >-
      recognize(TurnContext, [key: string]: string, [key: string]: number,
      LuisRecognizerOptionsV2 | LuisRecognizerOptionsV3 | LuisPredictionOptions)
    uid: botbuilder-ai.LuisRecognizer.recognize
    package: botbuilder-ai
    summary: Calls LUIS to recognize intents and entities in a users utterance.
    remarks: >-
      Returns a [RecognizerResult](../botbuilder-core/recognizerresult)
      containing any intents and entities recognized by LUIS.


      In addition to returning the results from LUIS, [recognize()](#recognize)
      will also

      emit a trace activity that contains the LUIS results.


      Here is an example of recognize being used within a bot's turn handler: to
      interpret an incoming message:


      ```javascript

      async onTurn(context) {
          if (turnContext.activity.type === ActivityTypes.Message) {
              const results = await luisRecognizer.recognize(turnContext);
              const topIntent = LuisRecognizer.topIntent(results);
              switch (topIntent) {
                  case 'MyIntent':
                      // ... handle intent ...
                      break;
                  case 'None':
                      // ... handle intent ...
                      break;
              }
          }
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(context: TurnContext, telemetryProperties?: [key:
        string]: string, telemetryMetrics?: [key: string]: number, options?:
        LuisRecognizerOptionsV2 | LuisRecognizerOptionsV3 |
        LuisPredictionOptions)
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation with the use.
        - id: telemetryProperties
          type: '[key: string]\: string'
          description: >-
            Additional properties to be logged to telemetry with the LuisResult
            event.
        - id: telemetryMetrics
          type: '[key: string]\: number'
          description: >-
            Additional metrics to be logged to telemetry with the LuisResult
            event.
        - id: options
          type: >-
            <xref uid="botbuilder-ai.LuisRecognizerOptionsV2" /> | <xref
            uid="botbuilder-ai.LuisRecognizerOptionsV3" /> | <xref
            uid="botbuilder-ai.LuisPredictionOptions" />
          description: >
            (Optional) options object used to override control predictions.
            Should conform to the [LuisRecognizerOptionsV2] or
            [LuisRecognizerOptionsV3] definition.
      return:
        type: Promise&lt;RecognizerResult&gt;
        description: ''
  - name: 'topIntent(RecognizerResult | undefined, string, number)'
    uid: botbuilder-ai.LuisRecognizer.topIntent
    package: botbuilder-ai
    summary: Returns the name of the top scoring intent from a set of LUIS results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function topIntent(results: RecognizerResult | undefined,
        defaultIntent: string, minScore: number)
      parameters:
        - id: results
          type: RecognizerResult | undefined
          description: Result set to be searched.
        - id: defaultIntent
          type: string
          description: >-
            (Optional) intent name to return should a top intent be found.
            Defaults to a value of `None`.
        - id: minScore
          type: number
          description: >
            (Optional) minimum score needed for an intent to be considered as a
            top intent. If all intents in the set are below this threshold then
            the `defaultIntent` will be returned.  Defaults to a value of `0.0`.
      return:
        type: string
        description: ''
