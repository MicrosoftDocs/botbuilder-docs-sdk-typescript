### YamlMime:TSType
name: GenerateAnswerUtils
uid: botbuilder-ai.GenerateAnswerUtils
package: botbuilder-ai
summary: Generate Answer api utils class.
fullName: GenerateAnswerUtils
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'GenerateAnswerUtils(QnAMakerOptions, QnAMakerEndpoint)'
    uid: botbuilder-ai.GenerateAnswerUtils.constructor
    package: botbuilder-ai
    summary: Creates new Generate answer utils.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new GenerateAnswerUtils(_options: QnAMakerOptions, endpoint:
        QnAMakerEndpoint)
      parameters:
        - id: _options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: Settings used to configure the instance.
        - id: endpoint
          type: <xref uid="botbuilder-ai.QnAMakerEndpoint" />
          description: |
            The endpoint of the knowledge base to query.
properties:
  - name: httpRequestUtils
    uid: botbuilder-ai.GenerateAnswerUtils.httpRequestUtils
    package: botbuilder-ai
    summary: ''
    fullName: httpRequestUtils
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'httpRequestUtils: HttpRequestUtils'
      return:
        description: ''
        type: <xref uid="botbuilder-ai.HttpRequestUtils" />
methods:
  - name: 'emitTraceInfo(TurnContext, QnAMakerResult[], QnAMakerOptions)'
    uid: botbuilder-ai.GenerateAnswerUtils.emitTraceInfo
    package: botbuilder-ai
    summary: Emits a trace event detailing a QnA Maker call and its results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function emitTraceInfo(turnContext: TurnContext, answers:
        QnAMakerResult[], queryOptions?: QnAMakerOptions): Promise<any>
      parameters:
        - id: turnContext
          type: TurnContext
          description: Turn Context for the current turn of conversation with the user.
        - id: answers
          type: '<xref uid="botbuilder-ai.QnAMakerResult" />[]'
          description: Answers returned by QnA Maker.
        - id: queryOptions
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >-
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
      return:
        description: a promise representing the async operation
        type: Promise&lt;any&gt;
  - name: 'queryQnaService(QnAMakerEndpoint, string, QnAMakerOptions)'
    uid: botbuilder-ai.GenerateAnswerUtils.queryQnaService
    package: botbuilder-ai
    summary: Called internally to query the QnA Maker service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryQnaService(endpoint: QnAMakerEndpoint, question: string,
        options?: QnAMakerOptions): Promise<QnAMakerResult[]>
      parameters:
        - id: endpoint
          type: <xref uid="botbuilder-ai.QnAMakerEndpoint" />
          description: The endpoint of the knowledge base to query.
        - id: question
          type: string
          description: Question which need to be queried.
        - id: options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >-
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
      return:
        description: |-
          a promise that resolves to the query results.
          .
        type: 'Promise&lt;<xref uid="botbuilder-ai.QnAMakerResult" />[]&gt;'
  - name: 'queryQnaServiceRaw(QnAMakerEndpoint, string, QnAMakerOptions)'
    uid: botbuilder-ai.GenerateAnswerUtils.queryQnaServiceRaw
    package: botbuilder-ai
    summary: Called internally to query the QnA Maker service.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function queryQnaServiceRaw(endpoint: QnAMakerEndpoint, question:
        string, options?: QnAMakerOptions): Promise<QnAMakerResults>
      parameters:
        - id: endpoint
          type: <xref uid="botbuilder-ai.QnAMakerEndpoint" />
          description: The endpoint of the knowledge base to query.
        - id: question
          type: string
          description: Question which need to be queried.
        - id: options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >-
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
      return:
        description: a promise that resolves to the raw query results
        type: Promise&lt;<xref uid="botbuilder-ai.QnAMakerResults" />&gt;
  - name: validateOptions(QnAMakerOptions)
    uid: botbuilder-ai.GenerateAnswerUtils.validateOptions
    package: botbuilder-ai
    summary: Validate qna maker options
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateOptions(options: QnAMakerOptions)'
      parameters:
        - id: options
          type: <xref uid="botbuilder-ai.QnAMakerOptions" />
          description: >
            The options for the QnA Maker knowledge base. If null, constructor
            option is used for this instance.
