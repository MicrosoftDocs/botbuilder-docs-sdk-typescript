### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.GenerateAnswerUtils
    name: GenerateAnswerUtils
    fullName: GenerateAnswerUtils
    children:
      - botbuilder-ai.GenerateAnswerUtils.emitTraceInfo
      - botbuilder-ai.GenerateAnswerUtils.constructor
      - botbuilder-ai.GenerateAnswerUtils.httpRequestUtils
      - botbuilder-ai.GenerateAnswerUtils.queryQnaService
      - botbuilder-ai.GenerateAnswerUtils.queryQnaServiceRaw
      - botbuilder-ai.GenerateAnswerUtils.sortAnswersWithinThreshold
      - botbuilder-ai.GenerateAnswerUtils.validateOptions
    langs:
      - typeScript
    type: class
    summary: Generate Answer api utils class.
    package: botbuilder-ai
    remarks: >-
      This class is helper class for generate answer api, which is used to make
      queries to a single QnA Maker knowledge base and return the result.
  - uid: botbuilder-ai.GenerateAnswerUtils.emitTraceInfo
    name: 'emitTraceInfo(TurnContext, QnAMakerResult[], QnAMakerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Emits a trace event detailing a QnA Maker call and its results.
    syntax:
      content: >-
        function emitTraceInfo(turnContext: TurnContext, answers:
        QnAMakerResult[], queryOptions?: QnAMakerOptions)
      parameters:
        - id: turnContext
          type:
            - TurnContext
          description: Turn Context for the current turn of conversation with the user.
        - id: answers
          type:
            - 'botbuilder-ai.QnAMakerResult[]'
          description: Answers returned by QnA Maker.
        - id: queryOptions
          type:
            - botbuilder-ai.QnAMakerOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<any>
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.constructor
    name: 'GenerateAnswerUtils(QnAMakerOptions, QnAMakerEndpoint)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates new Generate answer utils.
    syntax:
      content: >-
        new GenerateAnswerUtils(_options: QnAMakerOptions, endpoint:
        QnAMakerEndpoint)
      parameters:
        - id: _options
          type:
            - botbuilder-ai.QnAMakerOptions
          description: Settings used to configure the instance.
        - id: endpoint
          type:
            - botbuilder-ai.QnAMakerEndpoint
          description: |
            The endpoint of the knowledge base to query.
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.httpRequestUtils
    name: httpRequestUtils
    fullName: httpRequestUtils
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'httpRequestUtils: HttpRequestUtils'
      return:
        type:
          - botbuilder-ai.HttpRequestUtils
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.queryQnaService
    name: 'queryQnaService(QnAMakerEndpoint, string, QnAMakerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Called internally to query the QnA Maker service.
    syntax:
      content: >-
        function queryQnaService(endpoint: QnAMakerEndpoint, question: string,
        options?: QnAMakerOptions)
      parameters:
        - id: endpoint
          type:
            - botbuilder-ai.QnAMakerEndpoint
          description: The endpoint of the knowledge base to query.
        - id: question
          type:
            - string
          description: Question which need to be queried.
        - id: options
          type:
            - botbuilder-ai.QnAMakerOptions
          description: >
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
          optional: true
      return:
        type:
          - 'Promise<botbuilder-ai.QnAMakerResult[]>'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.queryQnaServiceRaw
    name: 'queryQnaServiceRaw(QnAMakerEndpoint, string, QnAMakerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Called internally to query the QnA Maker service.
    syntax:
      content: >-
        function queryQnaServiceRaw(endpoint: QnAMakerEndpoint, question:
        string, options?: QnAMakerOptions)
      parameters:
        - id: endpoint
          type:
            - botbuilder-ai.QnAMakerEndpoint
          description: The endpoint of the knowledge base to query.
        - id: question
          type:
            - string
          description: Question which need to be queried.
        - id: options
          type:
            - botbuilder-ai.QnAMakerOptions
          description: >
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
          optional: true
      return:
        type:
          - Promise<botbuilder-ai.QnAMakerResults>
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.sortAnswersWithinThreshold
    name: 'sortAnswersWithinThreshold(QnAMakerResult[], QnAMakerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sorts all QnAMakerResult from highest-to-lowest scoring.

      Filters QnAMakerResults within threshold specified (default threshold:
      .001).
    syntax:
      content: >-
        static function sortAnswersWithinThreshold(answers: QnAMakerResult[],
        queryOptions: QnAMakerOptions)
      parameters:
        - id: answers
          type:
            - 'botbuilder-ai.QnAMakerResult[]'
          description: Answers returned by QnA Maker.
        - id: queryOptions
          type:
            - botbuilder-ai.QnAMakerOptions
          description: ''
      return:
        type:
          - 'botbuilder-ai.QnAMakerResult[]'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.GenerateAnswerUtils.validateOptions
    name: validateOptions(QnAMakerOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate qna maker options
    syntax:
      content: 'function validateOptions(options: QnAMakerOptions)'
      parameters:
        - id: options
          type:
            - botbuilder-ai.QnAMakerOptions
          description: >
            (Optional) The options for the QnA Maker knowledge base. If null,
            constructor option is used for this instance.
    package: botbuilder-ai
references:
  - uid: botbuilder-ai.QnAMakerOptions
    name: QnAMakerOptions
    spec.typeScript:
      - name: QnAMakerOptions
        fullName: QnAMakerOptions
        uid: botbuilder-ai.QnAMakerOptions
  - uid: botbuilder-ai.QnAMakerEndpoint
    name: QnAMakerEndpoint
    spec.typeScript:
      - name: QnAMakerEndpoint
        fullName: QnAMakerEndpoint
        uid: botbuilder-ai.QnAMakerEndpoint
  - uid: botbuilder-ai.HttpRequestUtils
    name: HttpRequestUtils
    spec.typeScript:
      - name: HttpRequestUtils
        fullName: HttpRequestUtils
        uid: botbuilder-ai.HttpRequestUtils
  - uid: 'botbuilder-ai.QnAMakerResult[]'
    name: 'QnAMakerResult[]'
    spec.typeScript:
      - name: QnAMakerResult
        fullName: QnAMakerResult
        uid: botbuilder-ai.QnAMakerResult
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<botbuilder-ai.QnAMakerResult[]>'
    name: 'QnAMakerResult[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QnAMakerResult
        fullName: QnAMakerResult
        uid: botbuilder-ai.QnAMakerResult
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<botbuilder-ai.QnAMakerResults>
    name: QnAMakerResults>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QnAMakerResults
        fullName: QnAMakerResults
        uid: botbuilder-ai.QnAMakerResults
      - name: '>'
        fullName: '>'
