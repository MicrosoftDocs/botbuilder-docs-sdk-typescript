### YamlMime:TSType
name: CertificateServiceClientCredentialsFactory
uid: botframework-connector.CertificateServiceClientCredentialsFactory
package: botframework-connector
summary: >-
  A Certificate implementation of the
  [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
  abstract class.
fullName: CertificateServiceClientCredentialsFactory
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CertificateServiceClientCredentialsFactory(string, string, string, string)
    uid: >-
      botframework-connector.CertificateServiceClientCredentialsFactory.constructor_1
    package: botframework-connector
    summary: >-
      Initializes a new instance of the
      CertificateServiceClientCredentialsFactory class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CertificateServiceClientCredentialsFactory(appId: string, x5c:
        string, certificatePrivateKey: string, tenantId?: string)
      parameters:
        - id: appId
          type: string
          description: Microsoft application Id related to the certificate.
        - id: x5c
          type: string
          description: >-
            Value that enables application developers to achieve easy
            certificates roll-over in Azure AD

            set this parameter to send the public certificate (BEGIN
            CERTIFICATE) to Azure AD, so that Azure AD can use it to validate
            the subject name based on a trusted issuer policy.
        - id: certificatePrivateKey
          type: string
          description: A PEM encoded certificate private key.
        - id: tenantId
          type: string
          description: >-
            Tenant ID of the Azure AD tenant where the bot is created.
              * Required for SingleTenant app types.
              * Optional for MultiTenant app types. **Note**: '_botframework.com_' is the default tenant when no value is provided.

            More information:
            https://learn.microsoft.com/en-us/security/zero-trust/develop/identity-supported-account-types.
  - name: >-
      CertificateServiceClientCredentialsFactory(string, string, string, string,
      string)
    uid: >-
      botframework-connector.CertificateServiceClientCredentialsFactory.constructor
    package: botframework-connector
    summary: >-
      Initializes a new instance of the
      CertificateServiceClientCredentialsFactory class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CertificateServiceClientCredentialsFactory(appId: string,
        certificateThumbprint: string, certificatePrivateKey: string, tenantId?:
        string, x5c?: string)
      parameters:
        - id: appId
          type: string
          description: Microsoft application Id related to the certificate.
        - id: certificateThumbprint
          type: string
          description: A hex encoded thumbprint of the certificate.
        - id: certificatePrivateKey
          type: string
          description: A PEM encoded certificate private key.
        - id: tenantId
          type: string
          description: >-
            Tenant ID of the Azure AD tenant where the bot is created.
              * Required for SingleTenant app types.
              * Optional for MultiTenant app types. **Note**: '_botframework.com_' is the default tenant when no value is provided.

            More information:
            https://learn.microsoft.com/en-us/security/zero-trust/develop/identity-supported-account-types.
        - id: x5c
          type: string
          description: >-
            Optional. Enables application developers to achieve easy
            certificates roll-over in Azure AD:

            set this parameter to send the public certificate (BEGIN
            CERTIFICATE) to Azure AD, so that Azure AD can use it to validate
            the subject name based on a trusted issuer policy.
methods:
  - name: createCredentials(string, string)
    uid: >-
      botframework-connector.CertificateServiceClientCredentialsFactory.createCredentials
    package: botframework-connector
    summary: A factory method for creating ServiceClientCredentials.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createCredentials(appId: string, audience: string):
        Promise<ServiceClientCredentials>
      parameters:
        - id: appId
          type: string
          description: The appId.
        - id: audience
          type: string
          description: The audience.
      return:
        description: >-
          A
          [ServiceClientCredentials](xref:botframework-connector.ServiceClientCredentials).
        type: >-
          Promise&lt;<xref uid="botframework-connector.ServiceClientCredentials"
          />&gt;
  - name: isAuthenticationDisabled()
    uid: >-
      botframework-connector.CertificateServiceClientCredentialsFactory.isAuthenticationDisabled
    package: botframework-connector
    summary: Checks whether bot authentication is disabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isAuthenticationDisabled(): Promise<boolean>'
      return:
        description: >-
          If bot authentication is disabled, the result is true; otherwise,
          false.
        type: Promise&lt;boolean&gt;
  - name: isValidAppId(string)
    uid: >-
      botframework-connector.CertificateServiceClientCredentialsFactory.isValidAppId
    package: botframework-connector
    summary: Validates an app ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isValidAppId(appId: string): Promise<boolean>'
      parameters:
        - id: appId
          type: string
          description: The app ID to validate.
      return:
        description: >-
          The result is true if `appId` is valid for the controller; otherwise,
          false.
        type: Promise&lt;boolean&gt;
extends: <xref uid="botframework-connector.ServiceClientCredentialsFactory" />
