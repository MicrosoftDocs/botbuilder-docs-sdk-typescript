### YamlMime:UniversalReference
items:
  - uid: botframework-connector.UserToken
    name: UserToken
    fullName: UserToken
    children:
      - botframework-connector.UserToken.getAadTokens_1
      - botframework-connector.UserToken.getAadTokens
      - botframework-connector.UserToken.getAadTokens_2
      - botframework-connector.UserToken.getToken_1
      - botframework-connector.UserToken.getToken
      - botframework-connector.UserToken.getToken_2
      - botframework-connector.UserToken.getTokenStatus_1
      - botframework-connector.UserToken.getTokenStatus
      - botframework-connector.UserToken.getTokenStatus_2
      - botframework-connector.UserToken.signOut_1
      - botframework-connector.UserToken.signOut
      - botframework-connector.UserToken.signOut_2
      - botframework-connector.UserToken.constructor
    langs:
      - typeScript
    type: class
    summary: Class representing a UserToken.
    package: botframework-connector
  - uid: botframework-connector.UserToken.getAadTokens_1
    name: >-
      getAadTokens(string, string, AadResourceUrls, ServiceCallback<[key:
      string]: TokenResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAadTokens(userId: string, connectionName: string,
        aadResourceUrls: AadResourceUrls, callback: ServiceCallback<[key:
        string]: TokenResponse>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: aadResourceUrls
          type:
            - botframework-connector.AadResourceUrls
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<[key: string]:
              botframework-connector.TokenResponse>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetAadTokensResponse>
        description: Promise<Models.UserTokenGetAadTokensResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getAadTokens
    name: >-
      getAadTokens(string, string, AadResourceUrls,
      UserTokenGetAadTokensOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAadTokens(userId: string, connectionName: string,
        aadResourceUrls: AadResourceUrls, options?:
        UserTokenGetAadTokensOptionalParams)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: aadResourceUrls
          type:
            - botframework-connector.AadResourceUrls
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetAadTokensOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UserTokenGetAadTokensResponse>
        description: Promise<Models.UserTokenGetAadTokensResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getAadTokens_2
    name: >-
      getAadTokens(string, string, AadResourceUrls,
      UserTokenGetAadTokensOptionalParams, ServiceCallback<[key: string]:
      TokenResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAadTokens(userId: string, connectionName: string,
        aadResourceUrls: AadResourceUrls, options:
        UserTokenGetAadTokensOptionalParams, callback: ServiceCallback<[key:
        string]: TokenResponse>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: aadResourceUrls
          type:
            - botframework-connector.AadResourceUrls
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetAadTokensOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<[key: string]:
              botframework-connector.TokenResponse>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetAadTokensResponse>
        description: Promise<Models.UserTokenGetAadTokensResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getToken_1
    name: 'getToken(string, string, ServiceCallback<TokenResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getToken(userId: string, connectionName: string, callback:
        ServiceCallback<TokenResponse>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<botframework-connector.TokenResponse>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetTokenResponse>
        description: Promise<Models.UserTokenGetTokenResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getToken
    name: 'getToken(string, string, UserTokenGetTokenOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getToken(userId: string, connectionName: string, options?:
        UserTokenGetTokenOptionalParams)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetTokenOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UserTokenGetTokenResponse>
        description: Promise<Models.UserTokenGetTokenResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getToken_2
    name: >-
      getToken(string, string, UserTokenGetTokenOptionalParams,
      ServiceCallback<TokenResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getToken(userId: string, connectionName: string, options:
        UserTokenGetTokenOptionalParams, callback:
        ServiceCallback<TokenResponse>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: connectionName
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetTokenOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<botframework-connector.TokenResponse>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetTokenResponse>
        description: Promise<Models.UserTokenGetTokenResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getTokenStatus_1
    name: 'getTokenStatus(string, ServiceCallback<TokenStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTokenStatus(userId: string, callback:
        ServiceCallback<TokenStatus[]>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<botframework-connector.TokenStatus[]>'
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetTokenStatusResponse>
        description: Promise<Models.UserTokenGetTokenStatusResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getTokenStatus
    name: 'getTokenStatus(string, UserTokenGetTokenStatusOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTokenStatus(userId: string, options?:
        UserTokenGetTokenStatusOptionalParams)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetTokenStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UserTokenGetTokenStatusResponse>
        description: Promise<Models.UserTokenGetTokenStatusResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.getTokenStatus_2
    name: >-
      getTokenStatus(string, UserTokenGetTokenStatusOptionalParams,
      ServiceCallback<TokenStatus[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTokenStatus(userId: string, options:
        UserTokenGetTokenStatusOptionalParams, callback:
        ServiceCallback<TokenStatus[]>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenGetTokenStatusOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<botframework-connector.TokenStatus[]>'
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenGetTokenStatusResponse>
        description: Promise<Models.UserTokenGetTokenStatusResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.signOut_1
    name: 'signOut(string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function signOut(userId: string, callback: ServiceCallback<any>)'
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenSignOutResponse>
        description: Promise<Models.UserTokenSignOutResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.signOut
    name: 'signOut(string, UserTokenSignOutOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function signOut(userId: string, options?:
        UserTokenSignOutOptionalParams)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenSignOutOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UserTokenSignOutResponse>
        description: Promise<Models.UserTokenSignOutResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.signOut_2
    name: 'signOut(string, UserTokenSignOutOptionalParams, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function signOut(userId: string, options:
        UserTokenSignOutOptionalParams, callback: ServiceCallback<any>)
      parameters:
        - id: userId
          type:
            - string
          description: ''
        - id: options
          type:
            - botframework-connector.UserTokenSignOutOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
      return:
        type:
          - Promise<Models.UserTokenSignOutResponse>
        description: Promise<Models.UserTokenSignOutResponse>
    package: botframework-connector
  - uid: botframework-connector.UserToken.constructor
    name: UserToken(TokenApiClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a UserToken.
    syntax:
      content: 'new UserToken(client: TokenApiClientContext)'
      parameters:
        - id: client
          type:
            - botframework-connector.TokenApiClientContext
          description: |
            Reference to the service client.
    package: botframework-connector
references:
  - uid: botframework-connector.TokenApiClientContext
    name: TokenApiClientContext
    spec.typeScript:
      - name: TokenApiClientContext
        fullName: TokenApiClientContext
        uid: botframework-connector.TokenApiClientContext
  - uid: botframework-connector.AadResourceUrls
    name: AadResourceUrls
    spec.typeScript:
      - name: AadResourceUrls
        fullName: AadResourceUrls
        uid: botframework-connector.AadResourceUrls
  - uid: botframework-connector.UserTokenGetAadTokensOptionalParams
    name: UserTokenGetAadTokensOptionalParams
    spec.typeScript:
      - name: UserTokenGetAadTokensOptionalParams
        fullName: UserTokenGetAadTokensOptionalParams
        uid: botframework-connector.UserTokenGetAadTokensOptionalParams
  - uid: 'ServiceCallback<[key: string]: botframework-connector.TokenResponse>'
    name: TokenResponse>
    spec.typeScript:
      - name: 'ServiceCallback<[key: string]: '
        fullName: 'ServiceCallback<[key: string]: '
      - name: TokenResponse
        fullName: TokenResponse
        uid: botframework-connector.TokenResponse
      - name: '>'
        fullName: '>'
  - uid: botframework-connector.UserTokenGetTokenOptionalParams
    name: UserTokenGetTokenOptionalParams
    spec.typeScript:
      - name: UserTokenGetTokenOptionalParams
        fullName: UserTokenGetTokenOptionalParams
        uid: botframework-connector.UserTokenGetTokenOptionalParams
  - uid: ServiceCallback<botframework-connector.TokenResponse>
    name: TokenResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TokenResponse
        fullName: TokenResponse
        uid: botframework-connector.TokenResponse
      - name: '>'
        fullName: '>'
  - uid: botframework-connector.UserTokenGetTokenStatusOptionalParams
    name: UserTokenGetTokenStatusOptionalParams
    spec.typeScript:
      - name: UserTokenGetTokenStatusOptionalParams
        fullName: UserTokenGetTokenStatusOptionalParams
        uid: botframework-connector.UserTokenGetTokenStatusOptionalParams
  - uid: 'ServiceCallback<botframework-connector.TokenStatus[]>'
    name: 'TokenStatus[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TokenStatus
        fullName: TokenStatus
        uid: botframework-connector.TokenStatus
      - name: '[]>'
        fullName: '[]>'
  - uid: botframework-connector.UserTokenSignOutOptionalParams
    name: UserTokenSignOutOptionalParams
    spec.typeScript:
      - name: UserTokenSignOutOptionalParams
        fullName: UserTokenSignOutOptionalParams
        uid: botframework-connector.UserTokenSignOutOptionalParams
