### YamlMime:TSType
name: BotFrameworkAuthenticationFactory
uid: botframework-connector.BotFrameworkAuthenticationFactory
package: botframework-connector
summary: >-
  A factory for
  [BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication)
  which encapsulates the environment specific Bot Framework Protocol auth code.
fullName: BotFrameworkAuthenticationFactory
remarks: ''
isDeprecated: false
type: class
methods:
  - name: create()
    uid: botframework-connector.BotFrameworkAuthenticationFactory.create
    package: botframework-connector
    summary: >-
      Creates a new
      [BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication)
      instance for anonymous testing scenarios.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function create(): BotFrameworkAuthentication'
      return:
        description: >-
          A new
          [BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication)
          instance.
        type: <xref uid="botframework-connector.BotFrameworkAuthentication" />
  - name: >-
      create(string, boolean, string, string, string, string, string, string,
      string, ServiceClientCredentialsFactory, AuthenticationConfiguration,
      (input: RequestInfo, init?: RequestInit) => Promise<Response>,
      ConnectorClientOptions)
    uid: botframework-connector.BotFrameworkAuthenticationFactory.create_1
    package: botframework-connector
    summary: >-
      Creates the appropriate
      [BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication)
      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function create(channelService: string, validateAuthority:
        boolean, toChannelFromBotLoginUrl: string, toChannelFromBotOAuthScope:
        string, toBotFromChannelTokenIssuer: string, oAuthUrl: string,
        toBotFromChannelOpenIdMetadataUrl: string,
        toBotFromEmulatorOpenIdMetadataUrl: string, callerId: string,
        credentialFactory: ServiceClientCredentialsFactory, authConfiguration:
        AuthenticationConfiguration, botFrameworkClientFetch?: (input:
        RequestInfo, init?: RequestInit) => Promise<Response>,
        connectorClientOptions?: ConnectorClientOptions):
        BotFrameworkAuthentication
      parameters:
        - id: channelService
          type: string
          description: The Channel Service.
        - id: validateAuthority
          type: boolean
          description: The validate authority value to use.
        - id: toChannelFromBotLoginUrl
          type: string
          description: The to Channel from bot login url.
        - id: toChannelFromBotOAuthScope
          type: string
          description: The to Channel from bot oauth scope.
        - id: toBotFromChannelTokenIssuer
          type: string
          description: The to bot from Channel Token Issuer.
        - id: oAuthUrl
          type: string
          description: The OAuth url.
        - id: toBotFromChannelOpenIdMetadataUrl
          type: string
          description: The to bot from Channel Open Id Metadata url.
        - id: toBotFromEmulatorOpenIdMetadataUrl
          type: string
          description: The to bot from Emulator Open Id Metadata url.
        - id: callerId
          type: string
          description: >-
            The callerId set on on authenticated
            [Activities](xref:botframework-schema.Activity).
        - id: credentialFactory
          type: >-
            <xref uid="botframework-connector.ServiceClientCredentialsFactory"
            />
          description: >-
            The
            [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
            to use to create credentials.
        - id: authConfiguration
          type: <xref uid="botframework-connector.AuthenticationConfiguration" />
          description: >-
            The
            [AuthenticationConfiguration](xref:botframework-connector.AuthenticationConfiguration)
            to use.
        - id: botFrameworkClientFetch
          type: >-
            (input: RequestInfo, init?: RequestInit) =&gt;
            Promise&lt;Response&gt;
          description: The fetch to use in BotFrameworkClient.
        - id: connectorClientOptions
          type: <xref uid="botframework-connector.ConnectorClientOptions" />
          description: >-
            The
            [ConnectorClientOptions](xref:botframework-connector.ConnectorClientOptions)
            to use when creating ConnectorClients.
      return:
        description: ''
        type: <xref uid="botframework-connector.BotFrameworkAuthentication" />
