### YamlMime:TSType
name: JwtTokenExtractor
uid: botframework-connector.JwtTokenExtractor
package: botframework-connector
summary: ''
fullName: JwtTokenExtractor
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'JwtTokenExtractor(VerifyOptions, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.constructor
    package: botframework-connector
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new JwtTokenExtractor(tokenValidationParameters: VerifyOptions,
        metadataUrl: string, allowedSigningAlgorithms: string[])
      parameters:
        - id: tokenValidationParameters
          type: VerifyOptions
          description: ''
        - id: metadataUrl
          type: string
          description: ''
        - id: allowedSigningAlgorithms
          type: 'string[]'
          description: ''
properties:
  - name: openIdMetadata
    uid: botframework-connector.JwtTokenExtractor.openIdMetadata
    package: botframework-connector
    summary: ''
    fullName: openIdMetadata
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public openIdMetadata: OpenIdMetadata'
      return:
        type: <xref uid="botframework-connector.OpenIdMetadata" />
        description: ''
  - name: tokenValidationParameters
    uid: botframework-connector.JwtTokenExtractor.tokenValidationParameters
    package: botframework-connector
    summary: ''
    fullName: tokenValidationParameters
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public tokenValidationParameters: VerifyOptions'
      return:
        type: VerifyOptions
        description: ''
methods:
  - name: 'getIdentity(string, string, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.getIdentity
    package: botframework-connector
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIdentity(scheme: string, parameter: string, channelId:
        string, requiredEndorsements: string[])
      parameters:
        - id: scheme
          type: string
          description: ''
        - id: parameter
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: requiredEndorsements
          type: 'string[]'
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" /> |
          null&gt;
        description: ''
  - name: 'getIdentityFromAuthHeader(string, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.getIdentityFromAuthHeader
    package: botframework-connector
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIdentityFromAuthHeader(authorizationHeader: string,
        channelId: string, requiredEndorsements?: string[])
      parameters:
        - id: authorizationHeader
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: requiredEndorsements
          type: 'string[]'
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" /> |
          null&gt;
        description: ''
