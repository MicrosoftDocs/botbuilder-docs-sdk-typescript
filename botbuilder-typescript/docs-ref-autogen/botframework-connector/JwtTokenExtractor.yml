### YamlMime:TSType
name: JwtTokenExtractor
uid: botframework-connector.JwtTokenExtractor
package: botframework-connector
summary: >-
  A JWT token processing class that gets identity information and performs
  security token validation.
fullName: JwtTokenExtractor
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'JwtTokenExtractor(VerifyOptions, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.constructor
    package: botframework-connector
    summary: >-
      Initializes a new instance of the
      [JwtTokenExtractor](xref:botframework-connector.JwtTokenExtractor) class.
      Extracts relevant data from JWT Tokens.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new JwtTokenExtractor(tokenValidationParameters: VerifyOptions,
        metadataUrl: string, allowedSigningAlgorithms: string[])
      parameters:
        - id: tokenValidationParameters
          type: VerifyOptions
          description: Token validation parameters.
        - id: metadataUrl
          type: string
          description: Metadata Url.
        - id: allowedSigningAlgorithms
          type: 'string[]'
          description: |
            Allowed signing algorithms.
properties:
  - name: openIdMetadata
    uid: botframework-connector.JwtTokenExtractor.openIdMetadata
    package: botframework-connector
    summary: ''
    fullName: openIdMetadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openIdMetadata: OpenIdMetadata'
      return:
        description: ''
        type: <xref uid="botframework-connector.OpenIdMetadata" />
  - name: tokenValidationParameters
    uid: botframework-connector.JwtTokenExtractor.tokenValidationParameters
    package: botframework-connector
    summary: ''
    fullName: tokenValidationParameters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tokenValidationParameters: VerifyOptions'
      return:
        description: ''
        type: VerifyOptions
methods:
  - name: 'getIdentity(string, string, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.getIdentity
    package: botframework-connector
    summary: Gets the claims identity associated with a request.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIdentity(scheme: string, parameter: string, channelId:
        string, requiredEndorsements?: string[]): Promise<ClaimsIdentity | null>
      parameters:
        - id: scheme
          type: string
          description: The associated scheme.
        - id: parameter
          type: string
          description: The token.
        - id: channelId
          type: string
          description: The Id of the channel being validated in the original request.
        - id: requiredEndorsements
          type: 'string[]'
          description: The required JWT endorsements.
      return:
        description: >-
          A `Promise` representation for either a
          [ClaimsIdentity](botframework-connector:module.ClaimsIdentity) or
          `null`.
        type: >-
          Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" /> |
          null&gt;
  - name: 'getIdentityFromAuthHeader(string, string, string[])'
    uid: botframework-connector.JwtTokenExtractor.getIdentityFromAuthHeader
    package: botframework-connector
    summary: Gets the claims identity associated with a request.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getIdentityFromAuthHeader(authorizationHeader: string,
        channelId: string, requiredEndorsements?: string[]):
        Promise<ClaimsIdentity | null>
      parameters:
        - id: authorizationHeader
          type: string
          description: 'The raw HTTP header in the format: "Bearer [longString]".'
        - id: channelId
          type: string
          description: The Id of the channel being validated in the original request.
        - id: requiredEndorsements
          type: 'string[]'
          description: The required JWT endorsements.
      return:
        description: >-
          A `Promise` representation for either a
          [ClaimsIdentity](botframework-connector:module.ClaimsIdentity) or
          `null`.
        type: >-
          Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" /> |
          null&gt;
