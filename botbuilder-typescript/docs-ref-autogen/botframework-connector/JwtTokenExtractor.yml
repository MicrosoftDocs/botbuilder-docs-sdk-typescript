### YamlMime:UniversalReference
items:
  - uid: botframework-connector.JwtTokenExtractor
    name: JwtTokenExtractor
    fullName: JwtTokenExtractor
    children:
      - botframework-connector.JwtTokenExtractor.getIdentity
      - botframework-connector.JwtTokenExtractor.getIdentityFromAuthHeader
      - botframework-connector.JwtTokenExtractor.constructor
      - botframework-connector.JwtTokenExtractor.openIdMetadata
      - botframework-connector.JwtTokenExtractor.tokenValidationParameters
    langs:
      - typeScript
    type: class
    summary: ''
    package: botframework-connector
  - uid: botframework-connector.JwtTokenExtractor.getIdentity
    name: getIdentity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getIdentity(scheme: string, parameter: string, channelId:
        string)
      parameters:
        - id: scheme
          type:
            - string
          description: ''
        - id: parameter
          type:
            - string
          description: ''
        - id: channelId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<botframework-connector.ClaimsIdentity | null>
    package: botframework-connector
  - uid: botframework-connector.JwtTokenExtractor.getIdentityFromAuthHeader
    name: getIdentityFromAuthHeader
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getIdentityFromAuthHeader(authorizationHeader: string,
        channelId: string)
      parameters:
        - id: authorizationHeader
          type:
            - string
          description: ''
        - id: channelId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<botframework-connector.ClaimsIdentity | null>
    package: botframework-connector
  - uid: botframework-connector.JwtTokenExtractor.constructor
    name: JwtTokenExtractor
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new JwtTokenExtractor(tokenValidationParameters: VerifyOptions,
        metadataUrl: string, allowedSigningAlgorithms: string[])
      parameters:
        - id: tokenValidationParameters
          type:
            - VerifyOptions
          description: ''
        - id: metadataUrl
          type:
            - string
          description: ''
        - id: allowedSigningAlgorithms
          type:
            - 'string[]'
          description: ''
    package: botframework-connector
  - uid: botframework-connector.JwtTokenExtractor.openIdMetadata
    name: openIdMetadata
    fullName: openIdMetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public openIdMetadata: OpenIdMetadata'
      return:
        type:
          - botframework-connector.OpenIdMetadata
    package: botframework-connector
  - uid: botframework-connector.JwtTokenExtractor.tokenValidationParameters
    name: tokenValidationParameters
    fullName: tokenValidationParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public tokenValidationParameters: VerifyOptions'
      return:
        type:
          - VerifyOptions
    package: botframework-connector
references:
  - uid: botframework-connector.OpenIdMetadata
    name: OpenIdMetadata
    spec.typeScript:
      - name: OpenIdMetadata
        fullName: OpenIdMetadata
        uid: botframework-connector.OpenIdMetadata
  - uid: Promise<botframework-connector.ClaimsIdentity | null>
    name: ClaimsIdentity | null>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClaimsIdentity
        fullName: ClaimsIdentity
        uid: botframework-connector.ClaimsIdentity
      - name: ' | null>'
        fullName: ' | null>'
