### YamlMime:TSType
name: ParameterizedBotFrameworkAuthentication
uid: botframework-connector.ParameterizedBotFrameworkAuthentication
package: botframework-connector
summary: ''
fullName: ParameterizedBotFrameworkAuthentication
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ParameterizedBotFrameworkAuthentication(boolean, string, string, string,
      string, string, string, string, ServiceClientCredentialsFactory,
      AuthenticationConfiguration, (input: RequestInfo, init?: RequestInit) =>
      Promise<Response>, ConnectorClientOptions)
    uid: botframework-connector.ParameterizedBotFrameworkAuthentication.constructor
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ParameterizedBotFrameworkAuthentication(validateAuthority: boolean,
        toChannelFromBotLoginUrl: string, toChannelFromBotOAuthScope: string,
        toBotFromChannelTokenIssuer: string, oAuthUrl: string,
        toBotFromChannelOpenIdMetadataUrl: string,
        toBotFromEmulatorOpenIdMetadataUrl: string, callerId: string,
        credentialsFactory: ServiceClientCredentialsFactory, authConfiguration:
        AuthenticationConfiguration, botFrameworkClientFetch?: (input:
        RequestInfo, init?: RequestInit) => Promise<Response>,
        connectorClientOptions?: ConnectorClientOptions)
      parameters:
        - id: validateAuthority
          type: boolean
          description: The validate authority value to use.
        - id: toChannelFromBotLoginUrl
          type: string
          description: The to Channel from bot login url.
        - id: toChannelFromBotOAuthScope
          type: string
          description: The to Channel from bot oauth scope.
        - id: toBotFromChannelTokenIssuer
          type: string
          description: The to bot from Channel Token Issuer.
        - id: oAuthUrl
          type: string
          description: The OAuth url.
        - id: toBotFromChannelOpenIdMetadataUrl
          type: string
          description: The to bot from Channel Open Id Metadata url.
        - id: toBotFromEmulatorOpenIdMetadataUrl
          type: string
          description: The to bot from Emulator Open Id Metadata url.
        - id: callerId
          type: string
          description: >-
            The callerId set on an authenticated
            [Activities](xref:botframework-schema.Activity).
        - id: credentialsFactory
          type: >-
            <xref uid="botframework-connector.ServiceClientCredentialsFactory"
            />
          description: >-
            The
            [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
            to use to create credentials.
        - id: authConfiguration
          type: <xref uid="botframework-connector.AuthenticationConfiguration" />
          description: >-
            The
            [AuthenticationConfiguration](xref:botframework-connector.AuthenticationConfiguration)
            to use.
        - id: botFrameworkClientFetch
          type: >-
            (input: RequestInfo, init?: RequestInit) =&gt;
            Promise&lt;Response&gt;
          description: The fetch to use in BotFrameworkClient.
        - id: connectorClientOptions
          type: <xref uid="botframework-connector.ConnectorClientOptions" />
          description: >
            The
            [ConnectorClientOptions](xref:botframework-connector.ConnectorClientOptions)
            to use when creating ConnectorClients.
methods:
  - name: authenticateChannelRequest(string)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateChannelRequest
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateChannelRequest(authHeader: string):
        Promise<ClaimsIdentity>
      parameters:
        - id: authHeader
          type: string
          description: The http auth header received in the skill request.
      return:
        description: The identity validation result.
        type: Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" />&gt;
  - name: 'authenticateRequest(Activity, string)'
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateRequest
    package: botframework-connector
    summary: Validate Bot Framework Protocol requests.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateRequest(activity: Activity, authHeader: string):
        Promise<AuthenticateRequestResult>
      parameters:
        - id: activity
          type: Activity
          description: The inbound Activity.
        - id: authHeader
          type: string
          description: The http auth header received in the skill request.
      return:
        description: Promise with AuthenticateRequestResult.
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
  - name: 'authenticateStreamingRequest(string, string)'
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateStreamingRequest
    package: botframework-connector
    summary: Validate Bot Framework Protocol requests.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateStreamingRequest(authHeader: string,
        channelIdHeader: string): Promise<AuthenticateRequestResult>
      parameters:
        - id: authHeader
          type: string
          description: The http auth header received in the skill request.
        - id: channelIdHeader
          type: string
          description: The channel Id HTTP header.
      return:
        description: Promise with AuthenticateRequestResult.
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
  - name: createBotFrameworkClient()
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createBotFrameworkClient
    package: botframework-connector
    summary: Creates a BotFrameworkClient used for calling Skills.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createBotFrameworkClient(): BotFrameworkClient'
      return:
        description: A BotFrameworkClient instance to call Skills.
        type: <xref uid="botframework-connector.BotFrameworkClient" />
  - name: createConnectorFactory(ClaimsIdentity)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createConnectorFactory
    package: botframework-connector
    summary: >-
      Creates a ConnectorFactory that can be used to create ConnectorClients
      that can use credentials from this particular Cloud Environment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createConnectorFactory(claimsIdentity: ClaimsIdentity):
        ConnectorFactory
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: The inbound Activity's ClaimsIdentity.
      return:
        description: A ConnectorFactory.
        type: <xref uid="botframework-connector.ConnectorFactory" />
  - name: createUserTokenClient(ClaimsIdentity)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createUserTokenClient
    package: botframework-connector
    summary: Creates the appropriate UserTokenClient instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUserTokenClient(claimsIdentity: ClaimsIdentity):
        Promise<UserTokenClient>
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: The inbound Activity's ClaimsIdentity.
      return:
        description: Promise with UserTokenClient instance.
        type: Promise&lt;<xref uid="botframework-connector.UserTokenClient" />&gt;
  - name: getOriginatingAudience()
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.getOriginatingAudience
    package: botframework-connector
    summary: Gets the originating audience from Bot OAuth scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getOriginatingAudience(): string'
      return:
        description: The originating audience.
        type: string
extends: <xref uid="botframework-connector.BotFrameworkAuthentication" />
