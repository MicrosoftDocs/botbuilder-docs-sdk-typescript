### YamlMime:TSType
name: Teams
uid: botframework-connector.Teams
package: botframework-connector
summary: Class representing a Teams.
fullName: Teams
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Teams(TeamsConnectorClientContext)
    uid: botframework-connector.Teams.constructor
    package: botframework-connector
    summary: Create a Teams.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Teams(client: TeamsConnectorClientContext)'
      parameters:
        - id: client
          type: <xref uid="botframework-connector.TeamsConnectorClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'fetchChannelList(string, RequestOptionsBase)'
    uid: botframework-connector.Teams.fetchChannelList
    package: botframework-connector
    summary: Fetches channel list for a given team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchChannelList(teamId: string, options?: RequestOptionsBase):
        Promise<Models.TeamsFetchChannelListResponse>
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: options
          type: RequestOptionsBase
          description: Optional. The options object to be used in every request.
      return:
        description: A `Promise<Models.TeamsFetchChannelListResponse>`.
        type: Promise&lt;<xref uid="Models.TeamsFetchChannelListResponse" />&gt;
  - name: >-
      fetchChannelList(string, RequestOptionsBase,
      ServiceCallback<ConversationList>)
    uid: botframework-connector.Teams.fetchChannelList_2
    package: botframework-connector
    summary: Fetches channel list for a given team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchChannelList(teamId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ConversationList>)
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: options
          type: RequestOptionsBase
          description: The options object to be used in every request.
        - id: callback
          type: ServiceCallback&lt;ConversationList&gt;
          description: |
            The callback.
  - name: 'fetchChannelList(string, ServiceCallback<ConversationList>)'
    uid: botframework-connector.Teams.fetchChannelList_1
    package: botframework-connector
    summary: Fetches channel list for a given team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchChannelList(teamId: string, callback:
        ServiceCallback<ConversationList>)
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: callback
          type: ServiceCallback&lt;ConversationList&gt;
          description: |
            The callback.
  - name: >-
      fetchMeetingInfo(string, RequestOptionsBase |
      ServiceCallback<TeamDetails>)
    uid: botframework-connector.Teams.fetchMeetingInfo
    package: botframework-connector
    summary: Fetch meeting information.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingInfo(meetingId: string, options?:
        RequestOptionsBase | ServiceCallback<TeamDetails>):
        Promise<Models.TeamsMeetingInfoResponse>
      parameters:
        - id: meetingId
          type: string
          description: 'Meeting Id, encoded as a BASE64 string.'
        - id: options
          type: RequestOptionsBase | ServiceCallback&lt;TeamDetails&gt;
          description: ''
      return:
        description: Promise<Models.TeamsFetchMeetingInfoResponse>
        type: Promise&lt;<xref uid="Models.TeamsMeetingInfoResponse" />&gt;
  - name: >-
      fetchMeetingInfo(string, RequestOptionsBase |
      ServiceCallback<TeamDetails>, ServiceCallback<TeamsMeetingInfo>)
    uid: botframework-connector.Teams.fetchMeetingInfo_2
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingInfo(meetingId: string, options: RequestOptionsBase
        | ServiceCallback<TeamDetails>, callback:
        ServiceCallback<TeamsMeetingInfo>)
      parameters:
        - id: meetingId
          type: string
          description: 'Meeting Id, encoded as a BASE64 string.'
        - id: options
          type: RequestOptionsBase | ServiceCallback&lt;TeamDetails&gt;
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;TeamsMeetingInfo&gt;
          description: |
            The callback
  - name: 'fetchMeetingInfo(string, ServiceCallback<TeamsMeetingInfo>)'
    uid: botframework-connector.Teams.fetchMeetingInfo_1
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingInfo(meetingId: string, callback:
        ServiceCallback<TeamsMeetingInfo>)
      parameters:
        - id: meetingId
          type: string
          description: 'Meeting Id, encoded as a BASE64 string.'
        - id: callback
          type: ServiceCallback&lt;TeamsMeetingInfo&gt;
          description: |
            The callback
  - name: >-
      fetchMeetingParticipant(string, string,
      ServiceCallback<TeamsMeetingParticipant>)
    uid: botframework-connector.Teams.fetchMeetingParticipant_1
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingParticipant(meetingId: string, participantId:
        string, callback: ServiceCallback<TeamsMeetingParticipant>)
      parameters:
        - id: meetingId
          type: string
          description: Meeting Id
        - id: participantId
          type: string
          description: Participant Id
        - id: callback
          type: ServiceCallback&lt;TeamsMeetingParticipant&gt;
          description: |
            The callback
  - name: >-
      fetchMeetingParticipant(string, string,
      TeamsFetchMeetingParticipantOptionalParams)
    uid: botframework-connector.Teams.fetchMeetingParticipant
    package: botframework-connector
    summary: Fetch a meeting participant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingParticipant(meetingId: string, participantId:
        string, options?: TeamsFetchMeetingParticipantOptionalParams):
        Promise<Models.TeamsFetchMeetingParticipantResponse>
      parameters:
        - id: meetingId
          type: string
          description: Meeting Id
        - id: participantId
          type: string
          description: Participant Id
        - id: options
          type: >-
            <xref
            uid="botframework-connector.TeamsFetchMeetingParticipantOptionalParams"
            />
          description: ''
      return:
        description: Promise<Models.TeamsFetchMeetingParticipantResponse>
        type: >-
          Promise&lt;<xref uid="Models.TeamsFetchMeetingParticipantResponse"
          />&gt;
  - name: >-
      fetchMeetingParticipant(string, string,
      TeamsFetchMeetingParticipantOptionalParams,
      ServiceCallback<TeamsMeetingParticipant>)
    uid: botframework-connector.Teams.fetchMeetingParticipant_2
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchMeetingParticipant(meetingId: string, participantId:
        string, options: TeamsFetchMeetingParticipantOptionalParams, callback:
        ServiceCallback<TeamsMeetingParticipant>)
      parameters:
        - id: meetingId
          type: string
          description: Meeting Id
        - id: participantId
          type: string
          description: Participant Id
        - id: options
          type: >-
            <xref
            uid="botframework-connector.TeamsFetchMeetingParticipantOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;TeamsMeetingParticipant&gt;
          description: |
            The callback
  - name: 'fetchTeamDetails(string, RequestOptionsBase)'
    uid: botframework-connector.Teams.fetchTeamDetails
    package: botframework-connector
    summary: Fetches details related to a team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchTeamDetails(teamId: string, options?: RequestOptionsBase):
        Promise<Models.TeamsFetchTeamDetailsResponse>
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: options
          type: RequestOptionsBase
          description: Optional. The options object to be used in every request.
      return:
        description: A `Promise<Models.TeamsFetchTeamDetailsResponse>`.
        type: Promise&lt;<xref uid="Models.TeamsFetchTeamDetailsResponse" />&gt;
  - name: 'fetchTeamDetails(string, RequestOptionsBase, ServiceCallback<TeamDetails>)'
    uid: botframework-connector.Teams.fetchTeamDetails_2
    package: botframework-connector
    summary: Fetches details related to a team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchTeamDetails(teamId: string, options: RequestOptionsBase,
        callback: ServiceCallback<TeamDetails>)
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: options
          type: RequestOptionsBase
          description: The options object to be used in every request.
        - id: callback
          type: ServiceCallback&lt;TeamDetails&gt;
          description: |
            The callback.
  - name: 'fetchTeamDetails(string, ServiceCallback<TeamDetails>)'
    uid: botframework-connector.Teams.fetchTeamDetails_1
    package: botframework-connector
    summary: Fetches details related to a team.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchTeamDetails(teamId: string, callback:
        ServiceCallback<TeamDetails>)
      parameters:
        - id: teamId
          type: string
          description: Team Id.
        - id: callback
          type: ServiceCallback&lt;TeamDetails&gt;
          description: |
            The callback.
