### YamlMime:TSType
name: Teams
uid: botframework-connector.Teams
package: botframework-connector
summary: Class representing a Teams.
fullName: Teams
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Teams(TeamsConnectorClientContext)
    uid: botframework-connector.Teams.constructor
    package: botframework-connector
    summary: Create a Teams.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Teams(client: TeamsConnectorClientContext)'
      parameters:
        - id: client
          type: <xref uid="botframework-connector.TeamsConnectorClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'fetchChannelList(string, RequestOptionsBase)'
    uid: botframework-connector.Teams.fetchChannelList
    package: botframework-connector
    summary: Fetch the channel list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function fetchChannelList(teamId: string, options?: RequestOptionsBase)'
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TeamsFetchChannelListResponse" />&gt;
        description: Promise<Models.TeamsFetchChannelListResponse>
  - name: >-
      fetchChannelList(string, RequestOptionsBase,
      ServiceCallback<ConversationList>)
    uid: botframework-connector.Teams.fetchChannelList_2
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchChannelList(teamId: string, options: RequestOptionsBase,
        callback: ServiceCallback<ConversationList>)
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;ConversationList&gt;
          description: |
            The callback
  - name: 'fetchChannelList(string, ServiceCallback<ConversationList>)'
    uid: botframework-connector.Teams.fetchChannelList_1
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchChannelList(teamId: string, callback:
        ServiceCallback<ConversationList>)
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: callback
          type: ServiceCallback&lt;ConversationList&gt;
          description: |
            The callback
  - name: 'fetchTeamDetails(string, RequestOptionsBase)'
    uid: botframework-connector.Teams.fetchTeamDetails
    package: botframework-connector
    summary: Fetch details for a team
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function fetchTeamDetails(teamId: string, options?: RequestOptionsBase)'
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.TeamsFetchTeamDetailsResponse" />&gt;
        description: Promise<Models.TeamsFetchTeamDetailsResponse>
  - name: 'fetchTeamDetails(string, RequestOptionsBase, ServiceCallback<TeamDetails>)'
    uid: botframework-connector.Teams.fetchTeamDetails_2
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchTeamDetails(teamId: string, options: RequestOptionsBase,
        callback: ServiceCallback<TeamDetails>)
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;TeamDetails&gt;
          description: |
            The callback
  - name: 'fetchTeamDetails(string, ServiceCallback<TeamDetails>)'
    uid: botframework-connector.Teams.fetchTeamDetails_1
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fetchTeamDetails(teamId: string, callback:
        ServiceCallback<TeamDetails>)
      parameters:
        - id: teamId
          type: string
          description: Team Id
        - id: callback
          type: ServiceCallback&lt;TeamDetails&gt;
          description: |
            The callback
