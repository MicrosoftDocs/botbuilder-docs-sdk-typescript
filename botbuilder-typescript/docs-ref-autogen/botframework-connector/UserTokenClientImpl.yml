### YamlMime:TSType
name: UserTokenClientImpl
uid: botframework-connector.UserTokenClientImpl
package: botframework-connector
summary: ''
fullName: UserTokenClientImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      UserTokenClientImpl(string, ServiceClientCredentials, string,
      ConnectorClientOptions)
    uid: botframework-connector.UserTokenClientImpl.constructor
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new UserTokenClientImpl(appId: string, credentials:
        ServiceClientCredentials, oauthEndpoint: string,
        connectorClientOptions?: ConnectorClientOptions)
      parameters:
        - id: appId
          type: string
          description: ''
        - id: credentials
          type: ServiceClientCredentials
          description: ''
        - id: oauthEndpoint
          type: string
          description: ''
        - id: connectorClientOptions
          type: <xref uid="botframework-connector.ConnectorClientOptions" />
          description: ''
methods:
  - name: 'exchangeToken(string, string, string, TokenExchangeRequest)'
    uid: botframework-connector.UserTokenClientImpl.exchangeToken
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exchangeToken(userId: string, connectionName: string,
        channelId: string, exchangeRequest: TokenExchangeRequest):
        Promise<TokenResponse>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: connectionName
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: exchangeRequest
          type: TokenExchangeRequest
          description: ''
      return:
        description: ''
        type: Promise&lt;TokenResponse&gt;
  - name: 'getAadTokens(string, string, string[], string)'
    uid: botframework-connector.UserTokenClientImpl.getAadTokens
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAadTokens(userId: string, connectionName: string,
        resourceUrls: string[], channelId: string): Promise<Record<string,
        TokenResponse>>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: connectionName
          type: string
          description: ''
        - id: resourceUrls
          type: 'string[]'
          description: ''
        - id: channelId
          type: string
          description: ''
      return:
        description: ''
        type: 'Promise&lt;Record&lt;string, TokenResponse&gt;&gt;'
  - name: 'getSignInResource(string, Activity, string)'
    uid: botframework-connector.UserTokenClientImpl.getSignInResource
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSignInResource(connectionName: string, activity: Activity,
        finalRedirect: string): Promise<SignInUrlResponse>
      parameters:
        - id: connectionName
          type: string
          description: ''
        - id: activity
          type: Activity
          description: ''
        - id: finalRedirect
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;SignInUrlResponse&gt;
  - name: 'getTokenStatus(string, string, string)'
    uid: botframework-connector.UserTokenClientImpl.getTokenStatus
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTokenStatus(userId: string, channelId: string,
        includeFilter: string): Promise<TokenStatus[]>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: includeFilter
          type: string
          description: ''
      return:
        description: ''
        type: 'Promise&lt;TokenStatus[]&gt;'
  - name: 'getUserToken(string, string, string, string)'
    uid: botframework-connector.UserTokenClientImpl.getUserToken
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getUserToken(userId: string, connectionName: string, channelId:
        string, magicCode: string): Promise<TokenResponse>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: connectionName
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: magicCode
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;TokenResponse&gt;
  - name: 'signOutUser(string, string, string)'
    uid: botframework-connector.UserTokenClientImpl.signOutUser
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function signOutUser(userId: string, connectionName: string, channelId:
        string): Promise<void>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: connectionName
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
extends: <xref uid="botframework-connector.UserTokenClient" />
