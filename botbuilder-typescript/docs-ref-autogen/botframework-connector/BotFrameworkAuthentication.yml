### YamlMime:TSType
name: BotFrameworkAuthentication
uid: botframework-connector.BotFrameworkAuthentication
package: botframework-connector
summary: >-
  Represents a Cloud Environment used to authenticate Bot Framework Protocol
  network calls within this environment.
fullName: BotFrameworkAuthentication
remarks: ''
isPreview: false
isDeprecated: false
type: class
methods:
  - name: authenticateChannelRequest(string)
    uid: >-
      botframework-connector.BotFrameworkAuthentication.authenticateChannelRequest
    package: botframework-connector
    summary: Authenticate Bot Framework Protocol request to Skills.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateChannelRequest(authHeader: string):
        Promise<ClaimsIdentity>
      parameters:
        - id: authHeader
          type: string
          description: The HTTP auth header in the skill request.
      return:
        description: 'A [ClaimsIdentity](xref:botframework-connector.ClaimsIdentity).'
        type: Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" />&gt;
  - name: 'authenticateRequest(Activity, string)'
    uid: botframework-connector.BotFrameworkAuthentication.authenticateRequest
    package: botframework-connector
    summary: Validate Bot Framework Protocol requests.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateRequest(activity: Activity, authHeader: string):
        Promise<AuthenticateRequestResult>
      parameters:
        - id: activity
          type: Activity
          description: The inbound Activity.
        - id: authHeader
          type: string
          description: The HTTP auth header.
      return:
        description: >-
          An
          [AuthenticateRequestResult](xref:botframework-connector.AuthenticateRequestResult).
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
  - name: 'authenticateStreamingRequest(string, string)'
    uid: >-
      botframework-connector.BotFrameworkAuthentication.authenticateStreamingRequest
    package: botframework-connector
    summary: Validate Bot Framework Protocol requests.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateStreamingRequest(authHeader: string,
        channelIdHeader: string): Promise<AuthenticateRequestResult>
      parameters:
        - id: authHeader
          type: string
          description: The HTTP auth header.
        - id: channelIdHeader
          type: string
          description: The channel ID HTTP header.
      return:
        description: >-
          An
          [AuthenticateRequestResult](xref:botframework-connector.AuthenticateRequestResult).
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
  - name: createBotFrameworkClient()
    uid: botframework-connector.BotFrameworkAuthentication.createBotFrameworkClient
    package: botframework-connector
    summary: Creates a BotFrameworkClient for calling Skills.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createBotFrameworkClient(): BotFrameworkClient'
      return:
        description: >-
          A
          [BotFrameworkClient](xref:botframework-connector.BotFrameworkClient).
        type: <xref uid="botframework-connector.BotFrameworkClient" />
  - name: createConnectorFactory(ClaimsIdentity)
    uid: botframework-connector.BotFrameworkAuthentication.createConnectorFactory
    package: botframework-connector
    summary: >-
      Creates a ConnectorFactory that can be used to create ConnectorClients
      that can use credentials from this particular Cloud Environment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createConnectorFactory(claimsIdentity: ClaimsIdentity):
        ConnectorFactory
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: The inbound Activity's ClaimsIdentity.
      return:
        description: 'A [ConnectorFactory](xref:botframework-connector.ConnectorFactory).'
        type: <xref uid="botframework-connector.ConnectorFactory" />
  - name: createUserTokenClient(ClaimsIdentity)
    uid: botframework-connector.BotFrameworkAuthentication.createUserTokenClient
    package: botframework-connector
    summary: Creates the appropriate UserTokenClient instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUserTokenClient(claimsIdentity: ClaimsIdentity):
        Promise<UserTokenClient>
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: The inbound Activity's ClaimsIdentity.
      return:
        description: 'An [UserTokenClient](xref:botframework-connector.UserTokenClient).'
        type: Promise&lt;<xref uid="botframework-connector.UserTokenClient" />&gt;
  - name: getOriginatingAudience()
    uid: botframework-connector.BotFrameworkAuthentication.getOriginatingAudience
    package: botframework-connector
    summary: Gets the originating audience from Bot OAuth scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getOriginatingAudience(): string'
      return:
        description: The originating audience.
        type: string
