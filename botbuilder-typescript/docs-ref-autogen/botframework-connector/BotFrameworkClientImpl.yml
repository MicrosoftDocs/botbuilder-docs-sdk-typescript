### YamlMime:TSType
name: BotFrameworkClientImpl
uid: botframework-connector.BotFrameworkClientImpl
package: botframework-connector
summary: ''
fullName: BotFrameworkClientImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'BotFrameworkClientImpl(ServiceClientCredentialsFactory, string, fetch)'
    uid: botframework-connector.BotFrameworkClientImpl.constructor
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new BotFrameworkClientImpl(credentialsFactory:
        ServiceClientCredentialsFactory, loginEndpoint: string,
        botFrameworkClientFetch?: fetch)
      parameters:
        - id: credentialsFactory
          type: >-
            <xref uid="botframework-connector.ServiceClientCredentialsFactory"
            />
          description: >-
            A
            [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
            instance.
        - id: loginEndpoint
          type: string
          description: The login url.
        - id: botFrameworkClientFetch
          type: fetch
          description: >
            A custom Fetch implementation to be used in the
            [BotFrameworkClient](xref:botframework-connector.BotFrameworkClient).
methods:
  - name: 'postActivity<T>(string, string, string, string, string, Activity)'
    uid: botframework-connector.BotFrameworkClientImpl.postActivity
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function postActivity<T>(fromBotId: string, toBotId: string, toUrl:
        string, serviceUrl: string, conversationId: string, activity: Activity):
        Promise<InvokeResponse<T>>
      parameters:
        - id: fromBotId
          type: string
          description: The MicrosoftAppId of the bot sending the activity.
        - id: toBotId
          type: string
          description: The MicrosoftAppId of the bot receiving the activity.
        - id: toUrl
          type: string
          description: The URL of the bot receiving the activity.
        - id: serviceUrl
          type: string
          description: The callback Url for the skill host.
        - id: conversationId
          type: string
          description: A conversation ID to use for the conversation with the skill.
        - id: activity
          type: Activity
          description: The Activity to send to forward.
      return:
        description: A promise representing the asynchronous operation.
        type: Promise&lt;InvokeResponse&lt;T&gt;&gt;
