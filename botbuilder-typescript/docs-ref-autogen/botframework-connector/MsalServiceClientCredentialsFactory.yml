### YamlMime:TSType
name: MsalServiceClientCredentialsFactory
uid: botframework-connector.MsalServiceClientCredentialsFactory
package: botframework-connector
summary: >-
  An implementation of ServiceClientCredentialsFactory that generates
  MsalAppCredentials
fullName: MsalServiceClientCredentialsFactory
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: MsalServiceClientCredentialsFactory(string, ConfidentialClientApplication)
    uid: botframework-connector.MsalServiceClientCredentialsFactory.constructor
    package: botframework-connector
    summary: >-
      Create an MsalServiceClientCredentialsFactory instance using runtime
      configuration and an

      `@azure/msal-node` `ConfidentialClientApplication`.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new MsalServiceClientCredentialsFactory(appId: string,
        clientApplication: ConfidentialClientApplication)
      parameters:
        - id: appId
          type: string
          description: App ID for validation.
        - id: clientApplication
          type: <xref uid="@azure/msal-node.ConfidentialClientApplication" />
          description: An `@azure/msal-node` `ConfidentialClientApplication` instance.
methods:
  - name: createCredentials(string, string, string, boolean)
    uid: >-
      botframework-connector.MsalServiceClientCredentialsFactory.createCredentials
    package: botframework-connector
    summary: A factory method for creating ServiceClientCredentials.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createCredentials(appId: string, audience: string,
        loginEndpoint: string, _validateAuthority: boolean):
        Promise<ServiceClientCredentials>
      parameters:
        - id: appId
          type: string
          description: The appId.
        - id: audience
          type: string
          description: The audience.
        - id: loginEndpoint
          type: string
          description: The login url.
        - id: _validateAuthority
          type: boolean
          description: The validate authority value to use.
      return:
        description: >-
          A
          [ServiceClientCredentials](xref:botframework-connector.ServiceClientCredentials).
        type: >-
          Promise&lt;<xref uid="botframework-connector.ServiceClientCredentials"
          />&gt;
  - name: isAuthenticationDisabled()
    uid: >-
      botframework-connector.MsalServiceClientCredentialsFactory.isAuthenticationDisabled
    package: botframework-connector
    summary: Checks whether bot authentication is disabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isAuthenticationDisabled(): Promise<boolean>'
      return:
        description: >-
          If bot authentication is disabled, the result is true; otherwise,
          false.
        type: Promise&lt;boolean&gt;
  - name: isValidAppId(string)
    uid: botframework-connector.MsalServiceClientCredentialsFactory.isValidAppId
    package: botframework-connector
    summary: Validates an app ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isValidAppId(appId: string): Promise<boolean>'
      parameters:
        - id: appId
          type: string
          description: The app ID to validate.
      return:
        description: >-
          The result is true if `appId` is valid for the controller; otherwise,
          false.
        type: Promise&lt;boolean&gt;
