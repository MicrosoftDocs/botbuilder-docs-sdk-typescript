### YamlMime:TSPackage
uid: botframework-connector.JwtTokenValidation
name: JwtTokenValidation
type: module
package: botframework-connector
summary: ''
functions:
  - name: >-
      authenticateRequest(Activity, string, ICredentialProvider, string,
      AuthenticationConfiguration)
    uid: botframework-connector.JwtTokenValidation.authenticateRequest
    package: botframework-connector
    summary: >-
      Authenticates the request and sets the service url in the set of trusted
      urls.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateRequest(activity: Activity, authHeader: string,
        credentials: ICredentialProvider, channelService: string, authConfig?:
        AuthenticationConfiguration)
      parameters:
        - id: activity
          type: Activity
          description: The incoming Activity from the Bot Framework or the Emulator
        - id: authHeader
          type: string
          description: The Bearer token included as part of the request
        - id: credentials
          type: <xref uid="botframework-connector.ICredentialProvider" />
          description: 'The set of valid credentials, such as the Bot Application ID'
        - id: channelService
          type: string
          description: ''
        - id: authConfig
          type: <xref uid="botframework-connector.AuthenticationConfiguration" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" />&gt;
        description: Promise with ClaimsIdentity for the request.
  - name: 'getAppIdFromClaims(Claim[])'
    uid: botframework-connector.JwtTokenValidation.getAppIdFromClaims
    package: botframework-connector
    summary: Gets the AppId from a claims list.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAppIdFromClaims(claims: Claim[])'
      parameters:
        - id: claims
          type: '<xref uid="botframework-connector.Claim" />[]'
          description: |
            An object containing claims types and their values.
      return:
        type: string
        description: ''
  - name: isGovernment(string)
    uid: botframework-connector.JwtTokenValidation.isGovernment
    package: botframework-connector
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isGovernment(channelService: string)'
      parameters:
        - id: channelService
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: isValidTokenFormat(string)
    uid: botframework-connector.JwtTokenValidation.isValidTokenFormat
    package: botframework-connector
    summary: >-
      Internal helper to check if the token has the shape we expect "Bearer [big
      long string]".
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isValidTokenFormat(authHeader: string)'
      parameters:
        - id: authHeader
          type: string
          description: A string containing the token header.
      return:
        type: boolean
        description: 'True if the token is valid, false if not.'
  - name: >-
      validateAuthHeader(string, ICredentialProvider, string, string, string,
      AuthenticationConfiguration)
    uid: botframework-connector.JwtTokenValidation.validateAuthHeader
    package: botframework-connector
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validateAuthHeader(authHeader: string, credentials:
        ICredentialProvider, channelService: string, channelId: string,
        serviceUrl: string, authConfig: AuthenticationConfiguration)
      parameters:
        - id: authHeader
          type: string
          description: ''
        - id: credentials
          type: <xref uid="botframework-connector.ICredentialProvider" />
          description: ''
        - id: channelService
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: serviceUrl
          type: string
          description: ''
        - id: authConfig
          type: <xref uid="botframework-connector.AuthenticationConfiguration" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" />&gt;
        description: ''
