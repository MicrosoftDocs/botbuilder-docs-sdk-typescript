### YamlMime:UniversalReference
items:
  - uid: botframework-connector.Conversations
    name: Conversations
    fullName: Conversations
    children:
      - botframework-connector.Conversations.constructor
      - botframework-connector.Conversations.createConversation
      - botframework-connector.Conversations.createConversation_2
      - botframework-connector.Conversations.createConversation_3
      - botframework-connector.Conversations.createConversation_1
      - >-
        botframework-connector.Conversations.createConversationWithHttpOperationResponse
      - botframework-connector.Conversations.deleteActivity
      - botframework-connector.Conversations.deleteActivity_2
      - botframework-connector.Conversations.deleteActivity_3
      - botframework-connector.Conversations.deleteActivity_1
      - >-
        botframework-connector.Conversations.deleteActivityWithHttpOperationResponse
      - botframework-connector.Conversations.deleteConversationMember_1
      - botframework-connector.Conversations.deleteConversationMember_2
      - botframework-connector.Conversations.deleteConversationMember_3
      - botframework-connector.Conversations.deleteConversationMember
      - >-
        botframework-connector.Conversations.deleteConversationMemberWithHttpOperationResponse
      - botframework-connector.Conversations.getActivityMembers_1
      - botframework-connector.Conversations.getActivityMembers_2
      - botframework-connector.Conversations.getActivityMembers_3
      - botframework-connector.Conversations.getActivityMembers
      - >-
        botframework-connector.Conversations.getActivityMembersWithHttpOperationResponse
      - botframework-connector.Conversations.getConversationMembers
      - botframework-connector.Conversations.getConversationMembers_1
      - botframework-connector.Conversations.getConversationMembers_2
      - botframework-connector.Conversations.getConversationMembers_3
      - >-
        botframework-connector.Conversations.getConversationMembersWithHttpOperationResponse
      - botframework-connector.Conversations.getConversations
      - botframework-connector.Conversations.getConversations_2
      - botframework-connector.Conversations.getConversations_1
      - >-
        botframework-connector.Conversations.getConversationsWithHttpOperationResponse
      - botframework-connector.Conversations.replyToActivity
      - botframework-connector.Conversations.replyToActivity_1
      - botframework-connector.Conversations.replyToActivity_2
      - botframework-connector.Conversations.replyToActivity_3
      - >-
        botframework-connector.Conversations.replyToActivityWithHttpOperationResponse
      - botframework-connector.Conversations.sendToConversation
      - botframework-connector.Conversations.sendToConversation_1
      - botframework-connector.Conversations.sendToConversation_2
      - botframework-connector.Conversations.sendToConversation_3
      - >-
        botframework-connector.Conversations.sendToConversationWithHttpOperationResponse
      - botframework-connector.Conversations.updateActivity_1
      - botframework-connector.Conversations.updateActivity_2
      - botframework-connector.Conversations.updateActivity_3
      - botframework-connector.Conversations.updateActivity
      - >-
        botframework-connector.Conversations.updateActivityWithHttpOperationResponse
      - botframework-connector.Conversations.uploadAttachment
      - botframework-connector.Conversations.uploadAttachment_1
      - botframework-connector.Conversations.uploadAttachment_2
      - botframework-connector.Conversations.uploadAttachment_3
      - >-
        botframework-connector.Conversations.uploadAttachmentWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: Class representing a Conversations.
    package: botframework-connector
  - uid: botframework-connector.Conversations.constructor
    name: Conversations
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Conversations.
    syntax:
      content: 'new Conversations(client: ConnectorClient)'
      parameters:
        - id: client
          type:
            - ConnectorClient
          description: |
            Reference to the service client.
    package: botframework-connector
  - uid: botframework-connector.Conversations.createConversation
    name: createConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createConversation(parameters: ConversationParameters)'
      parameters:
        - id: parameters
          type:
            - ConversationParameters
          description: |
            Parameters to create the
            conversation from
      return:
        type:
          - Promise<ConversationResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.createConversation_2
    name: createConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConversation(parameters: ConversationParameters,
        callback: ServiceCallback<ConversationResourceResponse>)
      parameters:
        - id: parameters
          type:
            - ConversationParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<ConversationResourceResponse>
          description: ''
      return:
        type:
          - Promise<ConversationResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.createConversation_3
    name: createConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConversation(parameters: ConversationParameters, options:
        RequestOptionsBase, callback:
        ServiceCallback<ConversationResourceResponse>)
      parameters:
        - id: parameters
          type:
            - ConversationParameters
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<ConversationResourceResponse>
          description: ''
      return:
        type:
          - Promise<ConversationResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.createConversation_1
    name: createConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConversation(parameters: ConversationParameters, options:
        RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - ConversationParameters
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<ConversationResourceResponse>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.createConversationWithHttpOperationResponse
    name: createConversationWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConversationWithHttpOperationResponse(parameters:
        ConversationParameters, options?: RequestOptionsBase)
      parameters:
        - id: parameters
          type:
            - ConversationParameters
          description: |
            Parameters to create the
            conversation from
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteActivity
    name: deleteActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteActivity(conversationId: string, activityId: string)'
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId to delete
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteActivity_2
    name: deleteActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteActivity(conversationId: string, activityId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteActivity_3
    name: deleteActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteActivity(conversationId: string, activityId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteActivity_1
    name: deleteActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteActivity(conversationId: string, activityId: string,
        options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.deleteActivityWithHttpOperationResponse
    name: deleteActivityWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteActivityWithHttpOperationResponse(conversationId: string,
        activityId: string, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId to delete
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteConversationMember_1
    name: deleteConversationMember
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteConversationMember(conversationId: string, memberId:
        string, options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteConversationMember_2
    name: deleteConversationMember
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteConversationMember(conversationId: string, memberId:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteConversationMember_3
    name: deleteConversationMember
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteConversationMember(conversationId: string, memberId:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: botframework-connector.Conversations.deleteConversationMember
    name: deleteConversationMember
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteConversationMember(conversationId: string, memberId:
        string)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: memberId
          type:
            - string
          description: |
            ID of the member to delete from this conversation
      return:
        type:
          - Promise<void>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.deleteConversationMemberWithHttpOperationResponse
    name: deleteConversationMemberWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        deleteConversationMemberWithHttpOperationResponse(conversationId:
        string, memberId: string, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: memberId
          type:
            - string
          description: |
            ID of the member to delete from this conversation
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.getActivityMembers_1
    name: getActivityMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getActivityMembers(conversationId: string, activityId: string,
        options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getActivityMembers_2
    name: getActivityMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getActivityMembers(conversationId: string, activityId: string,
        callback: ServiceCallback<ChannelAccount[]>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<ChannelAccount[]>'
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getActivityMembers_3
    name: getActivityMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getActivityMembers(conversationId: string, activityId: string,
        options: RequestOptionsBase, callback:
        ServiceCallback<ChannelAccount[]>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<ChannelAccount[]>'
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getActivityMembers
    name: getActivityMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getActivityMembers(conversationId: string, activityId: string)'
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            Activity ID
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.getActivityMembersWithHttpOperationResponse
    name: getActivityMembersWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getActivityMembersWithHttpOperationResponse(conversationId:
        string, activityId: string, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            Activity ID
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversationMembers
    name: getConversationMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getConversationMembers(conversationId: string)'
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversationMembers_1
    name: getConversationMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversationMembers(conversationId: string, options:
        RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversationMembers_2
    name: getConversationMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversationMembers(conversationId: string, callback:
        ServiceCallback<ChannelAccount[]>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<ChannelAccount[]>'
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversationMembers_3
    name: getConversationMembers
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversationMembers(conversationId: string, options:
        RequestOptionsBase, callback: ServiceCallback<ChannelAccount[]>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - 'ServiceCallback<ChannelAccount[]>'
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.getConversationMembersWithHttpOperationResponse
    name: getConversationMembersWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversationMembersWithHttpOperationResponse(conversationId:
        string, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversations
    name: getConversations
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getConversations()
      parameters: []
      return:
        type:
          - Promise<ConversationsResult>
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversations_2
    name: getConversations
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversations(options:
        ConversationsGetConversationsOptionalParams, callback:
        ServiceCallback<ConversationsResult>)
      parameters:
        - id: options
          type:
            - ConversationsGetConversationsOptionalParams
          description: ''
        - id: callback
          type:
            - ServiceCallback<ConversationsResult>
          description: ''
      return:
        type:
          - Promise<ConversationsResult>
    package: botframework-connector
  - uid: botframework-connector.Conversations.getConversations_1
    name: getConversations
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversations(options:
        ConversationsGetConversationsOptionalParams)
      parameters:
        - id: options
          type:
            - ConversationsGetConversationsOptionalParams
          description: ''
      return:
        type:
          - Promise<ConversationsResult>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.getConversationsWithHttpOperationResponse
    name: getConversationsWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getConversationsWithHttpOperationResponse(options?:
        ConversationsGetConversationsOptionalParams)
      parameters:
        - id: options
          type:
            - ConversationsGetConversationsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.replyToActivity
    name: replyToActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replyToActivity(conversationId: string, activityId: string,
        activity: Activity)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId the reply is to (OPTIONAL)
        - id: activity
          type:
            - Activity
          description: |
            Activity to send
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.replyToActivity_1
    name: replyToActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replyToActivity(conversationId: string, activityId: string,
        activity: Activity, options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.replyToActivity_2
    name: replyToActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replyToActivity(conversationId: string, activityId: string,
        activity: Activity, callback: ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.replyToActivity_3
    name: replyToActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replyToActivity(conversationId: string, activityId: string,
        activity: Activity, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.replyToActivityWithHttpOperationResponse
    name: replyToActivityWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function replyToActivityWithHttpOperationResponse(conversationId:
        string, activityId: string, activity: Activity, options?:
        RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId the reply is to (OPTIONAL)
        - id: activity
          type:
            - Activity
          description: |
            Activity to send
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.sendToConversation
    name: sendToConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendToConversation(conversationId: string, activity: Activity)'
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activity
          type:
            - Activity
          description: |
            Activity to send
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.sendToConversation_1
    name: sendToConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendToConversation(conversationId: string, activity: Activity,
        options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.sendToConversation_2
    name: sendToConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendToConversation(conversationId: string, activity: Activity,
        callback: ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.sendToConversation_3
    name: sendToConversation
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendToConversation(conversationId: string, activity: Activity,
        options: RequestOptionsBase, callback:
        ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.sendToConversationWithHttpOperationResponse
    name: sendToConversationWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendToConversationWithHttpOperationResponse(conversationId:
        string, activity: Activity, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activity
          type:
            - Activity
          description: |
            Activity to send
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.updateActivity_1
    name: updateActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateActivity(conversationId: string, activityId: string,
        activity: Activity, options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.updateActivity_2
    name: updateActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateActivity(conversationId: string, activityId: string,
        activity: Activity, callback: ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.updateActivity_3
    name: updateActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateActivity(conversationId: string, activityId: string,
        activity: Activity, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.updateActivity
    name: updateActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateActivity(conversationId: string, activityId: string,
        activity: Activity)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId to update
        - id: activity
          type:
            - Activity
          description: |
            replacement Activity
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.updateActivityWithHttpOperationResponse
    name: updateActivityWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateActivityWithHttpOperationResponse(conversationId: string,
        activityId: string, activity: Activity, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: activityId
          type:
            - string
          description: |
            activityId to update
        - id: activity
          type:
            - Activity
          description: |
            replacement Activity
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.uploadAttachment
    name: uploadAttachment
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadAttachment(conversationId: string, attachmentUpload:
        AttachmentData)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: attachmentUpload
          type:
            - AttachmentData
          description: |
            Attachment data
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.uploadAttachment_1
    name: uploadAttachment
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadAttachment(conversationId: string, attachmentUpload:
        AttachmentData, options: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: attachmentUpload
          type:
            - AttachmentData
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.uploadAttachment_2
    name: uploadAttachment
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadAttachment(conversationId: string, attachmentUpload:
        AttachmentData, callback: ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: attachmentUpload
          type:
            - AttachmentData
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: botframework-connector.Conversations.uploadAttachment_3
    name: uploadAttachment
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadAttachment(conversationId: string, attachmentUpload:
        AttachmentData, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceResponse>)
      parameters:
        - id: conversationId
          type:
            - string
          description: ''
        - id: attachmentUpload
          type:
            - AttachmentData
          description: ''
        - id: options
          type:
            - RequestOptionsBase
          description: ''
        - id: callback
          type:
            - ServiceCallback<ResourceResponse>
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
    package: botframework-connector
  - uid: >-
      botframework-connector.Conversations.uploadAttachmentWithHttpOperationResponse
    name: uploadAttachmentWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadAttachmentWithHttpOperationResponse(conversationId:
        string, attachmentUpload: AttachmentData, options?: RequestOptionsBase)
      parameters:
        - id: conversationId
          type:
            - string
          description: |
            Conversation ID
        - id: attachmentUpload
          type:
            - AttachmentData
          description: |
            Attachment data
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: botframework-connector
