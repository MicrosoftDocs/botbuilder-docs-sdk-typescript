### YamlMime:UniversalReference
items:
  - uid: botframework-connector.ConnectorClientOptions
    name: ConnectorClientOptions
    fullName: ConnectorClientOptions
    children:
      - botframework-connector.ConnectorClientOptions.baseUri
      - botframework-connector.ConnectorClientOptions.clientRequestIdHeaderName
      - >-
        botframework-connector.ConnectorClientOptions.deserializationContentTypes
      - >-
        botframework-connector.ConnectorClientOptions.generateClientRequestIdHeader
      - botframework-connector.ConnectorClientOptions.httpClient
      - botframework-connector.ConnectorClientOptions.httpPipelineLogger
      - botframework-connector.ConnectorClientOptions.noRetryPolicy
      - botframework-connector.ConnectorClientOptions.requestPolicyFactories
      - botframework-connector.ConnectorClientOptions.rpRegistrationRetryTimeout
      - botframework-connector.ConnectorClientOptions.userAgent
      - botframework-connector.ConnectorClientOptions.withCredentials
    langs:
      - typeScript
    type: interface
    summary: An interface representing ConnectorClientOptions.
    extends:
      name: ServiceClientOptions
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.baseUri
    name: baseUri
    fullName: baseUri
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'baseUri: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.clientRequestIdHeaderName
    name: clientRequestIdHeaderName
    fullName: clientRequestIdHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline
      that will add a

      header to all outgoing requests with this header name and a random UUID as
      the request ID.
    optional: true
    syntax:
      content: 'clientRequestIdHeaderName?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.deserializationContentTypes
    name: deserializationContentTypes
    fullName: deserializationContentTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: The content-types that will be associated with JSON or XML serialization.
    optional: true
    syntax:
      content: 'deserializationContentTypes?: DeserializationContentTypes'
      return:
        type:
          - DeserializationContentTypes
        description: ''
    package: botframework-connector
  - uid: >-
      botframework-connector.ConnectorClientOptions.generateClientRequestIdHeader
    name: generateClientRequestIdHeader
    fullName: generateClientRequestIdHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether or not to generate a client request ID header for each HTTP
      request.
    optional: true
    syntax:
      content: 'generateClientRequestIdHeader?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.httpClient
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: The HttpClient that will be used to send HTTP requests.
    optional: true
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        type:
          - HttpClient
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.httpPipelineLogger
    name: httpPipelineLogger
    fullName: httpPipelineLogger
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The HttpPipelineLogger that can be used to debug RequestPolicies within
      the HTTP pipeline.
    optional: true
    syntax:
      content: 'httpPipelineLogger?: HttpPipelineLogger'
      return:
        type:
          - HttpPipelineLogger
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.noRetryPolicy
    name: noRetryPolicy
    fullName: noRetryPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If set to true, turn off the default retry policy.'
    optional: true
    syntax:
      content: 'noRetryPolicy?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.requestPolicyFactories
    name: requestPolicyFactories
    fullName: requestPolicyFactories
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array of factories which get called to create the RequestPolicy
      pipeline

      used to send a HTTP request on the wire.
    optional: true
    syntax:
      content: 'requestPolicyFactories?: RequestPolicyFactory[]'
      return:
        type:
          - 'RequestPolicyFactory[]'
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.rpRegistrationRetryTimeout
    name: rpRegistrationRetryTimeout
    fullName: rpRegistrationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the retry timeout in seconds for AutomaticRPRegistration.
      Default value is 30.
    optional: true
    syntax:
      content: 'rpRegistrationRetryTimeout?: number'
      return:
        type:
          - number
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.userAgent
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: The string to be set to the telemetry header while sending the request.
    optional: true
    syntax:
      content: 'userAgent?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.ConnectorClientOptions.withCredentials
    name: withCredentials
    fullName: withCredentials
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether to include credentials in CORS requests in the browser.

      See
      https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials
      for more information.
    optional: true
    syntax:
      content: 'withCredentials?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-connector
