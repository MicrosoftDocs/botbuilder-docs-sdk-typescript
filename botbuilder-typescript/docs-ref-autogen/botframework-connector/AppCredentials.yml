### YamlMime:UniversalReference
items:
  - uid: botframework-connector.AppCredentials
    name: AppCredentials
    fullName: AppCredentials
    children:
      - botframework-connector.AppCredentials.constructor
      - botframework-connector.AppCredentials.appId
      - botframework-connector.AppCredentials.getToken
      - botframework-connector.AppCredentials.isTrustedServiceUrl
      - botframework-connector.AppCredentials.oAuthEndpoint
      - botframework-connector.AppCredentials.oAuthScope
      - botframework-connector.AppCredentials.signRequest
      - botframework-connector.AppCredentials.tokenCacheKey
      - botframework-connector.AppCredentials.trustServiceUrl
    langs:
      - typeScript
    type: class
    summary: >-
      General AppCredentials auth implementation and cache. Supports any ADAL
      client credential flow.

      Subclasses can implement refreshToken to acquire the token.
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.constructor
    name: 'AppCredentials(string, string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new AppCredentials(appId: string, channelAuthTenant?: string,
        oAuthScope?: string)
      parameters:
        - id: appId
          type:
            - string
          description: ''
        - id: channelAuthTenant
          type:
            - string
          description: ''
          optional: true
        - id: oAuthScope
          type:
            - string
          description: ''
          optional: true
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.appId
    name: appId
    fullName: appId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.getToken
    name: getToken(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getToken(forceRefresh?: boolean)'
      parameters:
        - id: forceRefresh
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - Promise<string>
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.isTrustedServiceUrl
    name: isTrustedServiceUrl(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks if the service url is for a trusted host or not.
    syntax:
      content: 'static function isTrustedServiceUrl(serviceUrl: string)'
      parameters:
        - id: serviceUrl
          type:
            - string
          description: The service url
      return:
        type:
          - boolean
        description: True if the host of the service url is trusted; False otherwise.
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.oAuthEndpoint
    name: oAuthEndpoint
    fullName: oAuthEndpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oAuthEndpoint: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.oAuthScope
    name: oAuthScope
    fullName: oAuthScope
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oAuthScope: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.signRequest
    name: signRequest(WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function signRequest(webResource: WebResource)'
      parameters:
        - id: webResource
          type:
            - WebResource
          description: ''
      return:
        type:
          - Promise<WebResource>
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.tokenCacheKey
    name: tokenCacheKey
    fullName: tokenCacheKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tokenCacheKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-connector
  - uid: botframework-connector.AppCredentials.trustServiceUrl
    name: 'trustServiceUrl(string, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds the host of service url to trusted hosts.

      If expiration time is not provided, the expiration date will be current
      (utc) date + 1 day.
    syntax:
      content: 'static function trustServiceUrl(serviceUrl: string, expiration?: Date)'
      parameters:
        - id: serviceUrl
          type:
            - string
          description: The service url
        - id: expiration
          type:
            - Date
          description: ''
          optional: true
    package: botframework-connector
