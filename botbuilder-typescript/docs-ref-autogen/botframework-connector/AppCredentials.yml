### YamlMime:TSType
name: AppCredentials
uid: botframework-connector.AppCredentials
package: botframework-connector
summary: >-
  General AppCredentials auth implementation and cache. Supports any ADAL client
  credential flow.

  Subclasses can implement refreshToken to acquire the token.
fullName: AppCredentials
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'AppCredentials(string, string, string)'
    uid: botframework-connector.AppCredentials.constructor
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AppCredentials(appId: string, channelAuthTenant?: string,
        oAuthScope: string)
      parameters:
        - id: appId
          type: string
          description: ''
        - id: channelAuthTenant
          type: string
          description: ''
        - id: oAuthScope
          type: string
          description: ''
properties:
  - name: appId
    uid: botframework-connector.AppCredentials.appId
    package: botframework-connector
    summary: ''
    fullName: appId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public appId: string'
      return:
        type: string
        description: ''
  - name: oAuthEndpoint
    uid: botframework-connector.AppCredentials.oAuthEndpoint
    package: botframework-connector
    summary: ''
    fullName: oAuthEndpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string oAuthEndpoint
      return:
        type: string
        description: ''
  - name: oAuthScope
    uid: botframework-connector.AppCredentials.oAuthScope
    package: botframework-connector
    summary: ''
    fullName: oAuthScope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string oAuthScope
      return:
        type: string
        description: ''
  - name: tokenCacheKey
    uid: botframework-connector.AppCredentials.tokenCacheKey
    package: botframework-connector
    summary: ''
    fullName: tokenCacheKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public tokenCacheKey: string'
      return:
        type: string
        description: ''
methods:
  - name: getToken(boolean)
    uid: botframework-connector.AppCredentials.getToken
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getToken(forceRefresh: boolean)'
      parameters:
        - id: forceRefresh
          type: boolean
          description: ''
      return:
        type: Promise&lt;string&gt;
        description: ''
  - name: isTrustedServiceUrl(string)
    uid: botframework-connector.AppCredentials.isTrustedServiceUrl
    package: botframework-connector
    summary: Checks if the service url is for a trusted host or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function isTrustedServiceUrl(serviceUrl: string)'
      parameters:
        - id: serviceUrl
          type: string
          description: The service url
      return:
        type: boolean
        description: True if the host of the service url is trusted; False otherwise.
  - name: signRequest(WebResource)
    uid: botframework-connector.AppCredentials.signRequest
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function signRequest(webResource: WebResource)'
      parameters:
        - id: webResource
          type: WebResource
          description: ''
      return:
        type: Promise&lt;WebResource&gt;
        description: ''
  - name: 'trustServiceUrl(string, Date)'
    uid: botframework-connector.AppCredentials.trustServiceUrl
    package: botframework-connector
    summary: >-
      Adds the host of service url to trusted hosts.

      If expiration time is not provided, the expiration date will be current
      (utc) date + 1 day.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function trustServiceUrl(serviceUrl: string, expiration?: Date)'
      parameters:
        - id: serviceUrl
          type: string
          description: The service url
        - id: expiration
          type: Date
          description: ''
