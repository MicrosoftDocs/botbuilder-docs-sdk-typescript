### YamlMime:TSType
name: ManagedIdentityServiceClientCredentialsFactory
uid: botframework-connector.ManagedIdentityServiceClientCredentialsFactory
package: botframework-connector
summary: >-
  A Managed Identity implementation of the
  [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
  abstract class.
fullName: ManagedIdentityServiceClientCredentialsFactory
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      ManagedIdentityServiceClientCredentialsFactory(string,
      IJwtTokenProviderFactory)
    uid: >-
      botframework-connector.ManagedIdentityServiceClientCredentialsFactory.constructor
    package: botframework-connector
    summary: >-
      Initializes a new instance of the
      ManagedIdentityServiceClientCredentialsFactory class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new ManagedIdentityServiceClientCredentialsFactory(appId: string,
        tokenProviderFactory: IJwtTokenProviderFactory)
      parameters:
        - id: appId
          type: string
          description: Client ID for the managed identity assigned to the bot.
        - id: tokenProviderFactory
          type: <xref uid="botframework-connector.IJwtTokenProviderFactory" />
          description: The JWT token provider factory to use.
methods:
  - name: createCredentials(string, string)
    uid: >-
      botframework-connector.ManagedIdentityServiceClientCredentialsFactory.createCredentials
    package: botframework-connector
    summary: A factory method for creating ServiceClientCredentials.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createCredentials(appId: string, audience: string):
        Promise<ServiceClientCredentials>
      parameters:
        - id: appId
          type: string
          description: The appId.
        - id: audience
          type: string
          description: The audience.
      return:
        description: >-
          A
          [ServiceClientCredentials](xref:botframework-connector.ServiceClientCredentials).
        type: >-
          Promise&lt;<xref uid="botframework-connector.ServiceClientCredentials"
          />&gt;
  - name: isAuthenticationDisabled()
    uid: >-
      botframework-connector.ManagedIdentityServiceClientCredentialsFactory.isAuthenticationDisabled
    package: botframework-connector
    summary: Checks whether bot authentication is disabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isAuthenticationDisabled(): Promise<boolean>'
      return:
        description: >-
          If bot authentication is disabled, the result is true; otherwise,
          false.
        type: Promise&lt;boolean&gt;
  - name: isValidAppId(string)
    uid: >-
      botframework-connector.ManagedIdentityServiceClientCredentialsFactory.isValidAppId
    package: botframework-connector
    summary: Validates an app ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isValidAppId(appId: string): Promise<boolean>'
      parameters:
        - id: appId
          type: string
          description: The app ID to validate.
      return:
        description: >-
          The result is true if `appId` is valid for the controller; otherwise,
          false.
        type: Promise&lt;boolean&gt;
extends: <xref uid="botframework-connector.ServiceClientCredentialsFactory" />
