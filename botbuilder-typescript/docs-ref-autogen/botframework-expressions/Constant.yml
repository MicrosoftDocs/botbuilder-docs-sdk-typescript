### YamlMime:UniversalReference
items:
  - uid: botframework-expressions.Constant
    name: Constant
    fullName: Constant
    children:
      - botframework-expressions.Constant.children
      - botframework-expressions.Constant.constructor
      - botframework-expressions.Constant.makeExpression
      - botframework-expressions.Constant.returnType
      - botframework-expressions.Constant.toString
      - botframework-expressions.Constant.tryEvaluate
      - botframework-expressions.Constant.type
      - botframework-expressions.Constant.validate
      - botframework-expressions.Constant.validateTree
      - botframework-expressions.Constant.value
    langs:
      - typeScript
    type: class
    summary: Construct an expression constant.
    extends:
      name: botframework-expressions.Expression
    package: botframework-expressions
  - uid: botframework-expressions.Constant.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: Children expressions.
    syntax:
      content: 'children: Expression[]'
      return:
        type:
          - 'botframework-expressions.Expression[]'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.constructor
    name: Constant(any)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Constant(value: any)'
      parameters:
        - id: value
          type:
            - any
          description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.makeExpression
    name: 'makeExpression(string, ExpressionEvaluator, Expression[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Make an expression and validate it.
    syntax:
      content: >-
        static function makeExpression(type: string, evaluator:
        ExpressionEvaluator, children: Expression[])
      parameters:
        - id: type
          type:
            - string
          description: Type of expression from ExpressionType
        - id: evaluator
          type:
            - botframework-expressions.ExpressionEvaluator
          description: Information about how to validate and evaluate expression.
        - id: children
          type:
            - 'botframework-expressions.Expression[]'
          description: |
            Child expressions.
      return:
        type:
          - botframework-expressions.Expression
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.returnType
    name: returnType
    fullName: returnType
    children: []
    langs:
      - typeScript
    type: property
    summary: Expected result of evaluating expression.
    syntax:
      content: 'returnType: ReturnType'
      return:
        type:
          - botframework-expressions.ReturnType
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.tryEvaluate
    name: tryEvaluate(MemoryInterface | any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Evaluate the expression.

      Global state to evaluate accessor expressions against.  Can Dictionary be
      otherwise reflection is used to access property and then indexer.
    syntax:
      content: 'function tryEvaluate(state: MemoryInterface | any)'
      parameters:
        - id: state
          type:
            - botframework-expressions.MemoryInterface | any
          description: |+

      return:
        type:
          - Object
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of expression.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.validate
    name: validate
    fullName: validate
    children: []
    langs:
      - typeScript
    type: property
    summary: Validate immediate expression.
    syntax:
      content: 'validate: () => void'
      return:
        type:
          - () => void
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.Constant.validateTree
    name: validateTree()
    children: []
    type: method
    langs:
      - typeScript
    summary: Recursively validate the expression tree.
    syntax:
      content: function validateTree()
      parameters: []
    package: botframework-expressions
  - uid: botframework-expressions.Constant.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: Constant value.
    syntax:
      content: 'value: any'
      return:
        type:
          - any
        description: ''
    package: botframework-expressions
references:
  - uid: botframework-expressions.Expression
    name: Expression
    spec.typeScript:
      - name: Expression
        fullName: Expression
        uid: botframework-expressions.Expression
  - uid: 'botframework-expressions.Expression[]'
    name: 'Expression[]'
    spec.typeScript:
      - name: Expression
        fullName: Expression
        uid: botframework-expressions.Expression
      - name: '[]'
        fullName: '[]'
  - uid: botframework-expressions.ReturnType
    name: ReturnType
    spec.typeScript:
      - name: ReturnType
        fullName: ReturnType
        uid: botframework-expressions.ReturnType
  - uid: botframework-expressions.MemoryInterface | any
    name: MemoryInterface | any
    spec.typeScript:
      - name: MemoryInterface
        fullName: MemoryInterface
        uid: botframework-expressions.MemoryInterface
      - name: ' | any'
        fullName: ' | any'
  - uid: botframework-expressions.ExpressionEvaluator
    name: ExpressionEvaluator
    spec.typeScript:
      - name: ExpressionEvaluator
        fullName: ExpressionEvaluator
        uid: botframework-expressions.ExpressionEvaluator
