### YamlMime:UniversalReference
items:
  - uid: botframework-expressions.CommonRegexVisitor
    name: CommonRegexVisitor
    fullName: CommonRegexVisitor<Result>
    children:
      - botframework-expressions.CommonRegexVisitor.visit
      - botframework-expressions.CommonRegexVisitor.visitAlpha_nums
      - botframework-expressions.CommonRegexVisitor.visitAlternation
      - botframework-expressions.CommonRegexVisitor.visitAtom
      - botframework-expressions.CommonRegexVisitor.visitCapture
      - botframework-expressions.CommonRegexVisitor.visitCc_atom
      - botframework-expressions.CommonRegexVisitor.visitCc_literal
      - botframework-expressions.CommonRegexVisitor.visitCharacter_class
      - botframework-expressions.CommonRegexVisitor.visitChildren
      - botframework-expressions.CommonRegexVisitor.visitDigit
      - botframework-expressions.CommonRegexVisitor.visitDigits
      - botframework-expressions.CommonRegexVisitor.visitElement
      - botframework-expressions.CommonRegexVisitor.visitErrorNode
      - botframework-expressions.CommonRegexVisitor.visitExpr
      - botframework-expressions.CommonRegexVisitor.visitLetter
      - botframework-expressions.CommonRegexVisitor.visitLiteral
      - botframework-expressions.CommonRegexVisitor.visitName
      - botframework-expressions.CommonRegexVisitor.visitNon_capture
      - botframework-expressions.CommonRegexVisitor.visitNon_close_paren
      - botframework-expressions.CommonRegexVisitor.visitNon_close_parens
      - botframework-expressions.CommonRegexVisitor.visitNumber
      - botframework-expressions.CommonRegexVisitor.visitOctal_char
      - botframework-expressions.CommonRegexVisitor.visitOctal_digit
      - botframework-expressions.CommonRegexVisitor.visitOption
      - botframework-expressions.CommonRegexVisitor.visitOption_flag
      - botframework-expressions.CommonRegexVisitor.visitParse
      - botframework-expressions.CommonRegexVisitor.visitQuantifier
      - botframework-expressions.CommonRegexVisitor.visitQuantifier_type
      - botframework-expressions.CommonRegexVisitor.visitShared_atom
      - botframework-expressions.CommonRegexVisitor.visitShared_literal
      - botframework-expressions.CommonRegexVisitor.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: >-
      This interface defines a complete generic visitor for a parse tree
      produced

      by `CommonRegexParser`.
    extends:
      name: ParseTreeVisitor<Result>
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visit
    name: visit(ParseTree)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a parse tree, and return a user-defined result of the operation.'
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type:
            - ParseTree
          description: 'The <xref:ParseTree> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the parse tree.
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitAlpha_nums
    name: visitAlpha_nums
    fullName: visitAlpha_nums
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.alpha_nums`.
    optional: true
    syntax:
      content: 'visitAlpha_nums?: (ctx: Alpha_numsContext) => Result'
      return:
        type:
          - '(ctx: Alpha_numsContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitAlternation
    name: visitAlternation
    fullName: visitAlternation
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.alternation`.
    optional: true
    syntax:
      content: 'visitAlternation?: (ctx: AlternationContext) => Result'
      return:
        type:
          - '(ctx: AlternationContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitAtom
    name: visitAtom
    fullName: visitAtom
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.atom`.
    optional: true
    syntax:
      content: 'visitAtom?: (ctx: AtomContext) => Result'
      return:
        type:
          - '(ctx: AtomContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitCapture
    name: visitCapture
    fullName: visitCapture
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.capture`.
    optional: true
    syntax:
      content: 'visitCapture?: (ctx: CaptureContext) => Result'
      return:
        type:
          - '(ctx: CaptureContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitCc_atom
    name: visitCc_atom
    fullName: visitCc_atom
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.cc_atom`.
    optional: true
    syntax:
      content: 'visitCc_atom?: (ctx: Cc_atomContext) => Result'
      return:
        type:
          - '(ctx: Cc_atomContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitCc_literal
    name: visitCc_literal
    fullName: visitCc_literal
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.cc_literal`.
    optional: true
    syntax:
      content: 'visitCc_literal?: (ctx: Cc_literalContext) => Result'
      return:
        type:
          - '(ctx: Cc_literalContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitCharacter_class
    name: visitCharacter_class
    fullName: visitCharacter_class
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.character_class`.
    optional: true
    syntax:
      content: 'visitCharacter_class?: (ctx: Character_classContext) => Result'
      return:
        type:
          - '(ctx: Character_classContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitChildren
    name: visitChildren(RuleNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visit the children of a node, and return a user-defined result
      of the operation.
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type:
            - RuleNode
          description: 'The <xref:RuleNode> whose children should be visited.'
      return:
        type:
          - Result
        description: The result of visiting the children of the node.
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitDigit
    name: visitDigit
    fullName: visitDigit
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.digit`.
    optional: true
    syntax:
      content: 'visitDigit?: (ctx: DigitContext) => Result'
      return:
        type:
          - '(ctx: DigitContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitDigits
    name: visitDigits
    fullName: visitDigits
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.digits`.
    optional: true
    syntax:
      content: 'visitDigits?: (ctx: DigitsContext) => Result'
      return:
        type:
          - '(ctx: DigitsContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitElement
    name: visitElement
    fullName: visitElement
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.element`.
    optional: true
    syntax:
      content: 'visitElement?: (ctx: ElementContext) => Result'
      return:
        type:
          - '(ctx: ElementContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitErrorNode
    name: visitErrorNode(ErrorNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit an error node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type:
            - ErrorNode
          description: 'The <xref:ErrorNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitExpr
    name: visitExpr
    fullName: visitExpr
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.expr`.
    optional: true
    syntax:
      content: 'visitExpr?: (ctx: ExprContext) => Result'
      return:
        type:
          - '(ctx: ExprContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitLetter
    name: visitLetter
    fullName: visitLetter
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.letter`.
    optional: true
    syntax:
      content: 'visitLetter?: (ctx: LetterContext) => Result'
      return:
        type:
          - '(ctx: LetterContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitLiteral
    name: visitLiteral
    fullName: visitLiteral
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.literal`.
    optional: true
    syntax:
      content: 'visitLiteral?: (ctx: LiteralContext) => Result'
      return:
        type:
          - '(ctx: LiteralContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitName
    name: visitName
    fullName: visitName
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.name`.
    optional: true
    syntax:
      content: 'visitName?: (ctx: NameContext) => Result'
      return:
        type:
          - '(ctx: NameContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitNon_capture
    name: visitNon_capture
    fullName: visitNon_capture
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.non_capture`.
    optional: true
    syntax:
      content: 'visitNon_capture?: (ctx: Non_captureContext) => Result'
      return:
        type:
          - '(ctx: Non_captureContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitNon_close_paren
    name: visitNon_close_paren
    fullName: visitNon_close_paren
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.non_close_paren`.
    optional: true
    syntax:
      content: 'visitNon_close_paren?: (ctx: Non_close_parenContext) => Result'
      return:
        type:
          - '(ctx: Non_close_parenContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitNon_close_parens
    name: visitNon_close_parens
    fullName: visitNon_close_parens
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.non_close_parens`.
    optional: true
    syntax:
      content: 'visitNon_close_parens?: (ctx: Non_close_parensContext) => Result'
      return:
        type:
          - '(ctx: Non_close_parensContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitNumber
    name: visitNumber
    fullName: visitNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.number`.
    optional: true
    syntax:
      content: 'visitNumber?: (ctx: NumberContext) => Result'
      return:
        type:
          - '(ctx: NumberContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitOctal_char
    name: visitOctal_char
    fullName: visitOctal_char
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.octal_char`.
    optional: true
    syntax:
      content: 'visitOctal_char?: (ctx: Octal_charContext) => Result'
      return:
        type:
          - '(ctx: Octal_charContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitOctal_digit
    name: visitOctal_digit
    fullName: visitOctal_digit
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.octal_digit`.
    optional: true
    syntax:
      content: 'visitOctal_digit?: (ctx: Octal_digitContext) => Result'
      return:
        type:
          - '(ctx: Octal_digitContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitOption
    name: visitOption
    fullName: visitOption
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.option`.
    optional: true
    syntax:
      content: 'visitOption?: (ctx: OptionContext) => Result'
      return:
        type:
          - '(ctx: OptionContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitOption_flag
    name: visitOption_flag
    fullName: visitOption_flag
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.option_flag`.
    optional: true
    syntax:
      content: 'visitOption_flag?: (ctx: Option_flagContext) => Result'
      return:
        type:
          - '(ctx: Option_flagContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitParse
    name: visitParse
    fullName: visitParse
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.parse`.
    optional: true
    syntax:
      content: 'visitParse?: (ctx: ParseContext) => Result'
      return:
        type:
          - '(ctx: ParseContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitQuantifier
    name: visitQuantifier
    fullName: visitQuantifier
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.quantifier`.
    optional: true
    syntax:
      content: 'visitQuantifier?: (ctx: QuantifierContext) => Result'
      return:
        type:
          - '(ctx: QuantifierContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitQuantifier_type
    name: visitQuantifier_type
    fullName: visitQuantifier_type
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.quantifier_type`.
    optional: true
    syntax:
      content: 'visitQuantifier_type?: (ctx: Quantifier_typeContext) => Result'
      return:
        type:
          - '(ctx: Quantifier_typeContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitShared_atom
    name: visitShared_atom
    fullName: visitShared_atom
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.shared_atom`.
    optional: true
    syntax:
      content: 'visitShared_atom?: (ctx: Shared_atomContext) => Result'
      return:
        type:
          - '(ctx: Shared_atomContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitShared_literal
    name: visitShared_literal
    fullName: visitShared_literal
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `CommonRegexParser.shared_literal`.
    optional: true
    syntax:
      content: 'visitShared_literal?: (ctx: Shared_literalContext) => Result'
      return:
        type:
          - '(ctx: Shared_literalContext) => Result'
        description: ''
    package: botframework-expressions
  - uid: botframework-expressions.CommonRegexVisitor.visitTerminal
    name: visitTerminal(TerminalNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a terminal node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type:
            - TerminalNode
          description: 'The <xref:TerminalNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botframework-expressions
