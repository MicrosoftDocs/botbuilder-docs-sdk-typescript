### YamlMime:UniversalReference
items:
  - uid: botframework-config.BotConfiguration
    name: BotConfiguration
    fullName: BotConfiguration
    children:
      - botframework-config.BotConfiguration.clearSecret
      - botframework-config.BotConfiguration.decrypt
      - botframework-config.BotConfiguration.encrypt
      - botframework-config.BotConfiguration.export
      - botframework-config.BotConfiguration.fromJSON
      - botframework-config.BotConfiguration.generateKey
      - botframework-config.BotConfiguration.getPath
      - botframework-config.BotConfiguration.load
      - botframework-config.BotConfiguration.loadBotFromFolder
      - botframework-config.BotConfiguration.loadBotFromFolderSync
      - botframework-config.BotConfiguration.loadSync
      - botframework-config.BotConfiguration.save
      - botframework-config.BotConfiguration.saveAs
      - botframework-config.BotConfiguration.saveAsSync
      - botframework-config.BotConfiguration.saveSync
      - botframework-config.BotConfiguration.validateSecret
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botframework-config.BotConfigurationBase
    package: botframework-config
  - uid: botframework-config.BotConfiguration.clearSecret
    name: clearSecret
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clearSecret()
      parameters: []
    package: botframework-config
  - uid: botframework-config.BotConfiguration.decrypt
    name: decrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function decrypt(secret?: string)'
      parameters:
        - id: secret
          type:
            - string
          description: ''
          optional: true
    package: botframework-config
  - uid: botframework-config.BotConfiguration.encrypt
    name: encrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function encrypt(secret: string)'
      parameters:
        - id: secret
          type:
            - string
          description: ''
    package: botframework-config
  - uid: botframework-config.BotConfiguration.export
    name: export
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function export(folder: string, exportOptions?: Partial<ExportOptions>)'
      parameters:
        - id: folder
          type:
            - string
          description: ''
        - id: exportOptions
          type:
            - Partial<botframework-config.ExportOptions>
          description: ''
          optional: true
      return:
        type:
          - Promise<botframework-config.BotRecipe>
    package: botframework-config
  - uid: botframework-config.BotConfiguration.fromJSON
    name: fromJSON
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromJSON(source?: Partial<IBotConfiguration>)'
      parameters:
        - id: source
          type:
            - Partial<botframework-config.IBotConfiguration>
          description: ''
          optional: true
      return:
        type:
          - botframework-config.BotConfiguration
    package: botframework-config
  - uid: botframework-config.BotConfiguration.generateKey
    name: generateKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function generateKey()
      parameters: []
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.BotConfiguration.getPath
    name: getPath
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getPath()
      parameters: []
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.BotConfiguration.load
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function load(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type:
            - string
          description: ''
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<botframework-config.BotConfiguration>
    package: botframework-config
  - uid: botframework-config.BotConfiguration.loadBotFromFolder
    name: loadBotFromFolder
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function loadBotFromFolder(folder?: string, secret?: string)'
      parameters:
        - id: folder
          type:
            - string
          description: ''
          optional: true
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<botframework-config.BotConfiguration>
    package: botframework-config
  - uid: botframework-config.BotConfiguration.loadBotFromFolderSync
    name: loadBotFromFolderSync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function loadBotFromFolderSync(folder?: string, secret?: string)'
      parameters:
        - id: folder
          type:
            - string
          description: ''
          optional: true
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - botframework-config.BotConfiguration
    package: botframework-config
  - uid: botframework-config.BotConfiguration.loadSync
    name: loadSync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function loadSync(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type:
            - string
          description: ''
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - botframework-config.BotConfiguration
    package: botframework-config
  - uid: botframework-config.BotConfiguration.save
    name: save
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function save(secret?: string)'
      parameters:
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: botframework-config
  - uid: botframework-config.BotConfiguration.saveAs
    name: saveAs
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function saveAs(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type:
            - string
          description: ''
        - id: secret
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: botframework-config
  - uid: botframework-config.BotConfiguration.saveAsSync
    name: saveAsSync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function saveAsSync(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type:
            - string
          description: ''
        - id: secret
          type:
            - string
          description: ''
          optional: true
    package: botframework-config
  - uid: botframework-config.BotConfiguration.saveSync
    name: saveSync
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function saveSync(secret?: string)'
      parameters:
        - id: secret
          type:
            - string
          description: ''
          optional: true
    package: botframework-config
  - uid: botframework-config.BotConfiguration.validateSecret
    name: validateSecret
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function validateSecret(secret: string)'
      parameters:
        - id: secret
          type:
            - string
          description: ''
    package: botframework-config
references:
  - uid: botframework-config.BotConfigurationBase
    name: BotConfigurationBase
    spec.typeScript:
      - name: BotConfigurationBase
        fullName: BotConfigurationBase
        uid: botframework-config.BotConfigurationBase
  - uid: Partial<botframework-config.ExportOptions>
    name: ExportOptions>
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: ExportOptions
        fullName: ExportOptions
        uid: botframework-config.ExportOptions
      - name: '>'
        fullName: '>'
  - uid: Promise<botframework-config.BotRecipe>
    name: BotRecipe>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BotRecipe
        fullName: BotRecipe
        uid: botframework-config.BotRecipe
      - name: '>'
        fullName: '>'
  - uid: Partial<botframework-config.IBotConfiguration>
    name: IBotConfiguration>
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: IBotConfiguration
        fullName: IBotConfiguration
        uid: botframework-config.IBotConfiguration
      - name: '>'
        fullName: '>'
  - uid: botframework-config.BotConfiguration
    name: BotConfiguration
    spec.typeScript:
      - name: BotConfiguration
        fullName: BotConfiguration
        uid: botframework-config.BotConfiguration
  - uid: Promise<botframework-config.BotConfiguration>
    name: BotConfiguration>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BotConfiguration
        fullName: BotConfiguration
        uid: botframework-config.BotConfiguration
      - name: '>'
        fullName: '>'
