### YamlMime:TSType
name: BotConfiguration
uid: botframework-config.BotConfiguration
package: botframework-config
summary: ''
fullName: BotConfiguration
isPreview: false
isDeprecated: true
customDeprecatedMessage: 'See https://aka.ms/bot-file-basics for more information.'
type: class
constructors:
  - name: BotConfiguration()
    uid: botframework-config.BotConfiguration.constructor
    package: botframework-config
    summary: Creates a new BotConfigurationBase instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: new BotConfiguration()
properties:
  - name: description
    uid: botframework-config.BotConfiguration.description
    package: botframework-config
    summary: ''
    fullName: description
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'description: string'
      return:
        type: string
        description: ''
  - name: name
    uid: botframework-config.BotConfiguration.name
    package: botframework-config
    summary: ''
    fullName: name
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        type: string
        description: ''
  - name: padlock
    uid: botframework-config.BotConfiguration.padlock
    package: botframework-config
    summary: ''
    fullName: padlock
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'padlock: string'
      return:
        type: string
        description: ''
  - name: services
    uid: botframework-config.BotConfiguration.services
    package: botframework-config
    summary: ''
    fullName: services
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'services: IConnectedService[]'
      return:
        type: '<xref uid="botframework-config.IConnectedService" />[]'
        description: ''
  - name: version
    uid: botframework-config.BotConfiguration.version
    package: botframework-config
    summary: ''
    fullName: version
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'version: string'
      return:
        type: string
        description: ''
methods:
  - name: clearSecret()
    uid: botframework-config.BotConfiguration.clearSecret
    package: botframework-config
    summary: Clear secret.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function clearSecret()
  - name: connectService(IConnectedService)
    uid: botframework-config.BotConfiguration.connectService
    package: botframework-config
    summary: Connect a service to the bot file.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function connectService(newService: IConnectedService)'
      parameters:
        - id: newService
          type: <xref uid="botframework-config.IConnectedService" />
          description: Service to add.
      return:
        type: string
        description: Assigned ID for the service.
  - name: decrypt(string)
    uid: botframework-config.BotConfiguration.decrypt
    package: botframework-config
    summary: Decrypt all values in the in memory config.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function decrypt(secret?: string)'
      parameters:
        - id: secret
          type: string
          description: |
            Secret to decrypt.
  - name: disconnectService(string)
    uid: botframework-config.BotConfiguration.disconnectService
    package: botframework-config
    summary: Remove service by id.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function disconnectService(id: string)'
      parameters:
        - id: id
          type: string
          description: ''
  - name: disconnectServiceByNameOrId(string)
    uid: botframework-config.BotConfiguration.disconnectServiceByNameOrId
    package: botframework-config
    summary: Remove service by name or id.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function disconnectServiceByNameOrId(nameOrId: string)'
      parameters:
        - id: nameOrId
          type: string
          description: |
            Name or ID of the service to remove.
      return:
        type: <xref uid="botframework-config.IConnectedService" />
        description: ''
  - name: encrypt(string)
    uid: botframework-config.BotConfiguration.encrypt
    package: botframework-config
    summary: Encrypt all values in the in memory config.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function encrypt(secret: string)'
      parameters:
        - id: secret
          type: string
          description: |
            Secret to encrypt.
  - name: findService(string)
    uid: botframework-config.BotConfiguration.findService
    package: botframework-config
    summary: Find service by id.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findService(id: string)'
      parameters:
        - id: id
          type: string
          description: |
            ID of the service to find.
      return:
        type: <xref uid="botframework-config.IConnectedService" />
        description: ''
  - name: findServiceByNameOrId(string)
    uid: botframework-config.BotConfiguration.findServiceByNameOrId
    package: botframework-config
    summary: Find service by name or id.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findServiceByNameOrId(nameOrId: string)'
      parameters:
        - id: nameOrId
          type: string
          description: |
            Name or ID of the service to find.
      return:
        type: <xref uid="botframework-config.IConnectedService" />
        description: ''
  - name: fromJSON(Partial<IBotConfiguration>)
    uid: botframework-config.BotConfiguration.fromJSON
    package: botframework-config
    summary: Returns a new BotConfiguration instance given a JSON based configuration.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function fromJSON(source?: Partial<IBotConfiguration>)'
      parameters:
        - id: source
          type: Partial&lt;<xref uid="botframework-config.IBotConfiguration" />&gt;
          description: |
            JSON based configuration.
      return:
        type: <xref uid="botframework-config.BotConfiguration" />
        description: ''
  - name: generateKey()
    uid: botframework-config.BotConfiguration.generateKey
    package: botframework-config
    summary: Generate a new key suitable for encrypting.
    isPreview: false
    isDeprecated: false
    syntax:
      content: static function generateKey()
      return:
        type: string
        description: ''
  - name: getPath()
    uid: botframework-config.BotConfiguration.getPath
    package: botframework-config
    summary: >-
      Return the path that this config was loaded from.  .save() will save to
      this path.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getPath()
      return:
        type: string
        description: ''
  - name: 'load(string, string)'
    uid: botframework-config.BotConfiguration.load
    package: botframework-config
    summary: Load the configuration from a .bot file.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function load(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type: string
          description: Path to bot file.
        - id: secret
          type: string
          description: |
            (Optional) secret used to decrypt the bot file.
      return:
        type: Promise&lt;<xref uid="botframework-config.BotConfiguration" />&gt;
        description: ''
  - name: 'loadBotFromFolder(string, string)'
    uid: botframework-config.BotConfiguration.loadBotFromFolder
    package: botframework-config
    summary: >-
      Load the bot configuration by looking in a folder and loading the first
      .bot file in the

      folder.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function loadBotFromFolder(folder?: string, secret?: string)'
      parameters:
        - id: folder
          type: string
          description: >-
            (Optional) folder to look for bot files. If not specified the
            current working directory is used.
        - id: secret
          type: string
          description: |
            (Optional) secret used to decrypt the bot file.
      return:
        type: Promise&lt;<xref uid="botframework-config.BotConfiguration" />&gt;
        description: ''
  - name: 'loadBotFromFolderSync(string, string)'
    uid: botframework-config.BotConfiguration.loadBotFromFolderSync
    package: botframework-config
    summary: >-
      Load the bot configuration by looking in a folder and loading the first
      .bot file in the

      folder. (blocking)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function loadBotFromFolderSync(folder?: string, secret?: string)'
      parameters:
        - id: folder
          type: string
          description: >-
            (Optional) folder to look for bot files. If not specified the
            current working directory is used.
        - id: secret
          type: string
          description: |
            (Optional) secret used to decrypt the bot file.
      return:
        type: <xref uid="botframework-config.BotConfiguration" />
        description: ''
  - name: 'loadSync(string, string)'
    uid: botframework-config.BotConfiguration.loadSync
    package: botframework-config
    summary: Load the configuration from a .bot file. (blocking)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function loadSync(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type: string
          description: Path to bot file.
        - id: secret
          type: string
          description: |
            (Optional) secret used to decrypt the bot file.
      return:
        type: <xref uid="botframework-config.BotConfiguration" />
        description: ''
  - name: save(string)
    uid: botframework-config.BotConfiguration.save
    package: botframework-config
    summary: Save the file with secret.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function save(secret?: string)'
      parameters:
        - id: secret
          type: string
          description: |
            (Optional) secret used to encrypt the bot file.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'saveAs(string, string)'
    uid: botframework-config.BotConfiguration.saveAs
    package: botframework-config
    summary: Save the configuration to a .bot file.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function saveAs(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type: string
          description: Path to bot file.
        - id: secret
          type: string
          description: |
            (Optional) secret used to encrypt the bot file.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'saveAsSync(string, string)'
    uid: botframework-config.BotConfiguration.saveAsSync
    package: botframework-config
    summary: Save the configuration to a .bot file. (blocking)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function saveAsSync(botpath: string, secret?: string)'
      parameters:
        - id: botpath
          type: string
          description: Path to bot file.
        - id: secret
          type: string
          description: |
            (Optional) secret used to encrypt the bot file.
  - name: saveSync(string)
    uid: botframework-config.BotConfiguration.saveSync
    package: botframework-config
    summary: Save the file with secret. (blocking)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function saveSync(secret?: string)'
      parameters:
        - id: secret
          type: string
          description: |
            (Optional) secret used to encrypt the bot file.
  - name: serviceFromJSON(IConnectedService)
    uid: botframework-config.BotConfiguration.serviceFromJSON
    package: botframework-config
    summary: >-
      Returns a ConnectedService instance given a JSON based service
      configuration.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function serviceFromJSON(service: IConnectedService)'
      parameters:
        - id: service
          type: <xref uid="botframework-config.IConnectedService" />
          description: |
            JSON based service configuration.
      return:
        type: <xref uid="botframework-config.ConnectedService" />
        description: ''
  - name: toJSON()
    uid: botframework-config.BotConfiguration.toJSON
    package: botframework-config
    summary: Returns a JSON based version of the current bot.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toJSON()
      return:
        type: <xref uid="botframework-config.IBotConfiguration" />
        description: ''
  - name: validateSecret(string)
    uid: botframework-config.BotConfiguration.validateSecret
    package: botframework-config
    summary: Make sure secret is correct by decrypting the secretKey with it.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateSecret(secret: string)'
      parameters:
        - id: secret
          type: string
          description: |
            Secret to use.
extends: <xref uid="botframework-config.BotConfigurationBase" />
