### YamlMime:UniversalReference
items:
  - uid: botframework-config.BotConfigurationBase
    name: BotConfigurationBase
    fullName: BotConfigurationBase
    children:
      - botframework-config.BotConfigurationBase.constructor
      - botframework-config.BotConfigurationBase.connectService
      - botframework-config.BotConfigurationBase.description
      - botframework-config.BotConfigurationBase.disconnectService
      - botframework-config.BotConfigurationBase.disconnectServiceByNameOrId
      - botframework-config.BotConfigurationBase.findService
      - botframework-config.BotConfigurationBase.findServiceByNameOrId
      - botframework-config.BotConfigurationBase.fromJSON
      - botframework-config.BotConfigurationBase.name
      - botframework-config.BotConfigurationBase.padlock
      - botframework-config.BotConfigurationBase.serviceFromJSON
      - botframework-config.BotConfigurationBase.services
      - botframework-config.BotConfigurationBase.toJSON
      - botframework-config.BotConfigurationBase.version
    langs:
      - typeScript
    type: class
    summary: >-
      This is class which allows you to manipulate in memory representations of
      bot configuration with

      no nodejs dependencies.
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.constructor
    name: BotConfigurationBase()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new BotConfigurationBase instance.
    syntax:
      content: new BotConfigurationBase()
      parameters: []
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.connectService
    name: connectService(IConnectedService)
    children: []
    type: method
    langs:
      - typeScript
    summary: Connect a service to the bot file.
    syntax:
      content: 'function connectService(newService: IConnectedService)'
      parameters:
        - id: newService
          type:
            - botframework-config.IConnectedService
          description: Service to add.
      return:
        type:
          - string
        description: Assigned ID for the service.
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'description: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.disconnectService
    name: disconnectService(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove service by id.
    syntax:
      content: 'function disconnectService(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.disconnectServiceByNameOrId
    name: disconnectServiceByNameOrId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove service by name or id.
    syntax:
      content: 'function disconnectServiceByNameOrId(nameOrId: string)'
      parameters:
        - id: nameOrId
          type:
            - string
          description: |
            Name or ID of the service to remove.
      return:
        type:
          - botframework-config.IConnectedService
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.findService
    name: findService(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Find service by id.
    syntax:
      content: 'function findService(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |
            ID of the service to find.
      return:
        type:
          - botframework-config.IConnectedService
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.findServiceByNameOrId
    name: findServiceByNameOrId(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Find service by name or id.
    syntax:
      content: 'function findServiceByNameOrId(nameOrId: string)'
      parameters:
        - id: nameOrId
          type:
            - string
          description: |
            Name or ID of the service to find.
      return:
        type:
          - botframework-config.IConnectedService
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.fromJSON
    name: fromJSON(Partial<IBotConfiguration>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new BotConfigurationBase instance given a JSON based
      configuration.
    syntax:
      content: 'static function fromJSON(source?: Partial<IBotConfiguration>)'
      parameters:
        - id: source
          type:
            - Partial<botframework-config.IBotConfiguration>
          description: |
            JSON based configuration.
          optional: true
      return:
        type:
          - botframework-config.BotConfigurationBase
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.padlock
    name: padlock
    fullName: padlock
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'padlock: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.serviceFromJSON
    name: serviceFromJSON(IConnectedService)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a ConnectedService instance given a JSON based service
      configuration.
    syntax:
      content: 'static function serviceFromJSON(service: IConnectedService)'
      parameters:
        - id: service
          type:
            - botframework-config.IConnectedService
          description: |
            JSON based service configuration.
      return:
        type:
          - botframework-config.ConnectedService
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.services
    name: services
    fullName: services
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'services: IConnectedService[]'
      return:
        type:
          - 'botframework-config.IConnectedService[]'
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.toJSON
    name: toJSON()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a JSON based version of the current bot.
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - botframework-config.IBotConfiguration
        description: ''
    package: botframework-config
  - uid: botframework-config.BotConfigurationBase.version
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'version: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
references:
  - uid: 'botframework-config.IConnectedService[]'
    name: 'IConnectedService[]'
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config.IConnectedService
      - name: '[]'
        fullName: '[]'
  - uid: botframework-config.IConnectedService
    name: IConnectedService
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config.IConnectedService
  - uid: botframework-config.IBotConfiguration
    name: IBotConfiguration
    spec.typeScript:
      - name: IBotConfiguration
        fullName: IBotConfiguration
        uid: botframework-config.IBotConfiguration
  - uid: Partial<botframework-config.IBotConfiguration>
    name: IBotConfiguration>
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: IBotConfiguration
        fullName: IBotConfiguration
        uid: botframework-config.IBotConfiguration
      - name: '>'
        fullName: '>'
  - uid: botframework-config.BotConfigurationBase
    name: BotConfigurationBase
    spec.typeScript:
      - name: BotConfigurationBase
        fullName: BotConfigurationBase
        uid: botframework-config.BotConfigurationBase
  - uid: botframework-config.ConnectedService
    name: ConnectedService
    spec.typeScript:
      - name: ConnectedService
        fullName: ConnectedService
        uid: botframework-config.ConnectedService
