### YamlMime:UniversalReference
items:
  - uid: botframework-config.EndpointService
    name: EndpointService
    fullName: EndpointService
    children:
      - botframework-config.EndpointService.appId
      - botframework-config.EndpointService.appPassword
      - botframework-config.EndpointService.decrypt
      - botframework-config.EndpointService.encrypt
      - botframework-config.EndpointService.endpoint
      - botframework-config.EndpointService.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botframework-config.ConnectedService
    package: botframework-config
  - uid: botframework-config.EndpointService.appId
    name: appId
    fullName: appId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appId: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.EndpointService.appPassword
    name: appPassword
    fullName: appPassword
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appPassword: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.EndpointService.decrypt
    name: decrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(secret: string, decryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: decryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.EndpointService.encrypt
    name: encrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(secret: string, encryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: encryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.EndpointService.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.EndpointService.constructor
    name: EndpointService
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EndpointService(source: IEndpointService)'
      parameters:
        - id: source
          type:
            - botframework-config.IEndpointService
          description: ''
    package: botframework-config
references:
  - uid: botframework-config.ConnectedService
    name: ConnectedService
    spec.typeScript:
      - name: ConnectedService
        fullName: ConnectedService
        uid: botframework-config.ConnectedService
  - uid: botframework-config.IEndpointService
    name: IEndpointService
    spec.typeScript:
      - name: IEndpointService
        fullName: IEndpointService
        uid: botframework-config.IEndpointService
