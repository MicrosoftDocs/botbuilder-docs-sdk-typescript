### YamlMime:UniversalReference
items:
  - uid: botframework-config.CosmosDbService
    name: CosmosDbService
    fullName: CosmosDbService
    children:
      - botframework-config.CosmosDbService.collection
      - botframework-config.CosmosDbService.constructor
      - botframework-config.CosmosDbService.database
      - botframework-config.CosmosDbService.decrypt
      - botframework-config.CosmosDbService.encrypt
      - botframework-config.CosmosDbService.endpoint
      - botframework-config.CosmosDbService.key
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botframework-config.AzureService
    package: botframework-config
  - uid: botframework-config.CosmosDbService.collection
    name: collection
    fullName: collection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'collection: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.CosmosDbService.constructor
    name: CosmosDbService
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new CosmosDbService(source?: ICosmosDBService)'
      parameters:
        - id: source
          type:
            - botframework-config.ICosmosDBService
          description: ''
          optional: true
    package: botframework-config
  - uid: botframework-config.CosmosDbService.database
    name: database
    fullName: database
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'database: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.CosmosDbService.decrypt
    name: decrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(secret: string, decryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: decryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.CosmosDbService.encrypt
    name: encrypt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(secret: string, encryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: encryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.CosmosDbService.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: botframework-config
  - uid: botframework-config.CosmosDbService.key
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'key: string'
      return:
        type:
          - string
    package: botframework-config
references:
  - uid: botframework-config.AzureService
    name: AzureService
    spec.typeScript:
      - name: AzureService
        fullName: AzureService
        uid: botframework-config.AzureService
  - uid: botframework-config.ICosmosDBService
    name: ICosmosDBService
    spec.typeScript:
      - name: ICosmosDBService
        fullName: ICosmosDBService
        uid: botframework-config.ICosmosDBService
