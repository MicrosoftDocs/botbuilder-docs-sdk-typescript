### YamlMime:UniversalReference
items:
  - uid: botframework-config.IEndpointService
    name: IEndpointService
    fullName: IEndpointService
    children:
      - botframework-config.IEndpointService.appId
      - botframework-config.IEndpointService.appPassword
      - botframework-config.IEndpointService.channelService
      - botframework-config.IEndpointService.endpoint
      - botframework-config.IEndpointService.id
      - botframework-config.IEndpointService.name
      - botframework-config.IEndpointService.type
    langs:
      - typeScript
    type: interface
    summary: JSON description of an endpoint service.
    extends:
      name: botframework-config.IConnectedService
    package: botframework-config
    remarks: |-
      - [type](#type) SHOULD be set to `ServiceTypes.Endpoint`.
      - [id](#id) SHOULD be set to the bots ID.
  - uid: botframework-config.IEndpointService.appId
    name: appId
    fullName: appId
    children: []
    langs:
      - typeScript
    type: property
    summary: MSA App ID.
    syntax:
      content: 'appId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.appPassword
    name: appPassword
    fullName: appPassword
    children: []
    langs:
      - typeScript
    type: property
    summary: MSA app password for the bot.
    syntax:
      content: 'appPassword: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.channelService
    name: channelService
    fullName: channelService
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The channel service (Azure or US Government Azure) for the bot.

      A value of 'https://botframework.azure.us' means the bot will be talking
      to a US Government Azure data center.

      An undefined or null value means the bot will be talking to public Azure
    optional: true
    syntax:
      content: 'channelService?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: Endpoint of localhost service.
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) unique Id for the service.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Friendly name for the service.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IEndpointService.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: '(Optional) ServiceType of the service (LUIS, QnA, etc.)'
    optional: true
    syntax:
      content: 'type?: ServiceTypes'
      return:
        type:
          - botframework-config.ServiceTypes
        description: ''
    package: botframework-config
references:
  - uid: botframework-config.IConnectedService
    name: IConnectedService
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config.IConnectedService
  - uid: botframework-config.ServiceTypes
    name: ServiceTypes
    spec.typeScript:
      - name: ServiceTypes
        fullName: ServiceTypes
        uid: botframework-config.ServiceTypes
