### YamlMime:UniversalReference
items:
  - uid: botframework-config.IQnAService
    name: IQnAService
    fullName: IQnAService
    children:
      - botframework-config.IQnAService.endpointKey
      - botframework-config.IQnAService.hostname
      - botframework-config.IQnAService.id
      - botframework-config.IQnAService.kbId
      - botframework-config.IQnAService.name
      - botframework-config.IQnAService.subscriptionKey
      - botframework-config.IQnAService.type
    langs:
      - typeScript
    type: interface
    summary: JSON description of a QnA Maker service.
    extends:
      name: botframework-config.IConnectedService
    package: botframework-config
    remarks: '- [type](#type) SHOULD be set to `ServiceTypes.QnA`.'
  - uid: botframework-config.IQnAService.endpointKey
    name: endpointKey
    fullName: endpointKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Endpoint Key for querying the kb.
    syntax:
      content: 'endpointKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.hostname
    name: hostname
    fullName: hostname
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      hostname for private service endpoint Example:
      https://myqna.azurewebsites.net.
    syntax:
      content: 'hostname: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) unique Id for the service.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.kbId
    name: kbId
    fullName: kbId
    children: []
    langs:
      - typeScript
    type: property
    summary: Knowledge base id.
    syntax:
      content: 'kbId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Friendly name for the service.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.subscriptionKey
    name: subscriptionKey
    fullName: subscriptionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Subscription key for calling admin api.
    syntax:
      content: 'subscriptionKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.IQnAService.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: '(Optional) ServiceType of the service (LUIS, QnA, etc.)'
    optional: true
    syntax:
      content: 'type?: ServiceTypes'
      return:
        type:
          - botframework-config.ServiceTypes
        description: ''
    package: botframework-config
references:
  - uid: botframework-config.IConnectedService
    name: IConnectedService
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config.IConnectedService
  - uid: botframework-config.ServiceTypes
    name: ServiceTypes
    spec.typeScript:
      - name: ServiceTypes
        fullName: ServiceTypes
        uid: botframework-config.ServiceTypes
