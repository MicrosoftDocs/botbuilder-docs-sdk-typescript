### YamlMime:UniversalReference
items:
  - uid: botframework-config.QnaMakerService
    name: QnaMakerService
    fullName: QnaMakerService
    children:
      - botframework-config.QnaMakerService.decrypt
      - botframework-config.QnaMakerService.encrypt
      - botframework-config.QnaMakerService.endpointKey
      - botframework-config.QnaMakerService.hostname
      - botframework-config.QnaMakerService.id
      - botframework-config.QnaMakerService.kbId
      - botframework-config.QnaMakerService.name
      - botframework-config.QnaMakerService.constructor
      - botframework-config.QnaMakerService.subscriptionKey
      - botframework-config.QnaMakerService.toJSON
      - botframework-config.QnaMakerService.type
    langs:
      - typeScript
    type: class
    summary: Defines a QnA Maker service connection.
    extends:
      name: botframework-config.ConnectedService
    package: botframework-config
  - uid: botframework-config.QnaMakerService.decrypt
    name: 'decrypt(string, (value: string, secret: string) => string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(secret: string, decryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: decryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.encrypt
    name: 'encrypt(string, (value: string, secret: string) => string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(secret: string, encryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: encryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.endpointKey
    name: endpointKey
    fullName: endpointKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Endpoint Key for querying the kb.
    syntax:
      content: 'endpointKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.hostname
    name: hostname
    fullName: hostname
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      hostname for private service endpoint Example:
      https://myqna.azurewebsites.net.
    syntax:
      content: 'hostname: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique Id for the service.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.kbId
    name: kbId
    fullName: kbId
    children: []
    langs:
      - typeScript
    type: property
    summary: Knowledge base id.
    syntax:
      content: 'kbId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Friendly name for the service.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.constructor
    name: QnaMakerService(IQnAService)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new QnaMakerService instance.
    syntax:
      content: 'new QnaMakerService(source?: IQnAService)'
      parameters:
        - id: source
          type:
            - botframework-config.IQnAService
          description: |
            (Optional) JSON based service definition.
          optional: true
    package: botframework-config
  - uid: botframework-config.QnaMakerService.subscriptionKey
    name: subscriptionKey
    fullName: subscriptionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Subscription key for calling admin api.
    syntax:
      content: 'subscriptionKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.toJSON
    name: toJSON()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a JSON based version of the model for saving to disk.
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - botframework-config.IConnectedService
        description: ''
    package: botframework-config
  - uid: botframework-config.QnaMakerService.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: ServiceTypes'
      return:
        type:
          - botframework-config.ServiceTypes
        description: ''
    package: botframework-config
references:
  - uid: botframework-config.ConnectedService
    name: ConnectedService
    spec.typeScript:
      - name: ConnectedService
        fullName: ConnectedService
        uid: botframework-config.ConnectedService
  - uid: botframework-config.IQnAService
    name: IQnAService
    spec.typeScript:
      - name: IQnAService
        fullName: IQnAService
        uid: botframework-config.IQnAService
  - uid: botframework-config.ServiceTypes
    name: ServiceTypes
    spec.typeScript:
      - name: ServiceTypes
        fullName: ServiceTypes
        uid: botframework-config.ServiceTypes
  - uid: botframework-config.IConnectedService
    name: IConnectedService
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config.IConnectedService
