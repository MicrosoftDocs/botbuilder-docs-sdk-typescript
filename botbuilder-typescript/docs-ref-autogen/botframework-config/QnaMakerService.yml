### YamlMime:TSType
name: QnaMakerService
uid: botframework-config.QnaMakerService
package: botframework-config
summary: Defines a QnA Maker service connection.
fullName: QnaMakerService
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: QnaMakerService(IQnAService)
    uid: botframework-config.QnaMakerService.constructor
    package: botframework-config
    summary: Creates a new QnaMakerService instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new QnaMakerService(source?: IQnAService)'
      parameters:
        - id: source
          type: <xref uid="botframework-config.IQnAService" />
          description: |
            (Optional) JSON based service definition.
properties:
  - name: endpointKey
    uid: botframework-config.QnaMakerService.endpointKey
    package: botframework-config
    summary: Endpoint Key for querying the kb.
    fullName: endpointKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpointKey: string'
      return:
        type: string
        description: ''
  - name: hostname
    uid: botframework-config.QnaMakerService.hostname
    package: botframework-config
    summary: >-
      hostname for private service endpoint Example:
      https://myqna.azurewebsites.net.
    fullName: hostname
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hostname: string'
      return:
        type: string
        description: ''
  - name: id
    uid: botframework-config.QnaMakerService.id
    package: botframework-config
    summary: Unique Id for the service.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: kbId
    uid: botframework-config.QnaMakerService.kbId
    package: botframework-config
    summary: Knowledge base id.
    fullName: kbId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'kbId: string'
      return:
        type: string
        description: ''
  - name: name
    uid: botframework-config.QnaMakerService.name
    package: botframework-config
    summary: Friendly name for the service.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        type: string
        description: ''
  - name: subscriptionKey
    uid: botframework-config.QnaMakerService.subscriptionKey
    package: botframework-config
    summary: Subscription key for calling admin api.
    fullName: subscriptionKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionKey: string'
      return:
        type: string
        description: ''
  - name: type
    uid: botframework-config.QnaMakerService.type
    package: botframework-config
    summary: ''
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: ServiceTypes'
      return:
        type: <xref uid="botframework-config.ServiceTypes" />
        description: ''
methods:
  - name: 'decrypt(string, (value: string, secret: string) => string)'
    uid: botframework-config.QnaMakerService.decrypt
    package: botframework-config
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decrypt(secret: string, decryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type: string
          description: ''
        - id: decryptString
          type: '(value: string, secret: string) =&gt; string'
          description: ''
  - name: 'encrypt(string, (value: string, secret: string) => string)'
    uid: botframework-config.QnaMakerService.encrypt
    package: botframework-config
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encrypt(secret: string, encryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type: string
          description: ''
        - id: encryptString
          type: '(value: string, secret: string) =&gt; string'
          description: ''
  - name: toJSON()
    uid: botframework-config.QnaMakerService.toJSON
    package: botframework-config
    summary: Returns a JSON based version of the model for saving to disk.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toJSON()
      return:
        type: <xref uid="botframework-config.IConnectedService" />
        description: ''
extends: <xref uid="botframework-config.ConnectedService" />
