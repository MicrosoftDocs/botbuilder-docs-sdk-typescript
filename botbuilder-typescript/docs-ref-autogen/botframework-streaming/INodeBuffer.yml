### YamlMime:TSType
name: INodeBuffer
uid: botframework-streaming.INodeBuffer
package: botframework-streaming
summary: >
  Represents a Buffer from the `net` module in Node.js.

  This interface supports the framework and is not intended to be called
  directly for your code.
fullName: INodeBuffer
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: constructor
    uid: botframework-streaming.INodeBuffer.constructor
    package: botframework-streaming
    summary: ''
    fullName: constructor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor: any'
      return:
        description: ''
        type: any
  - name: Uint8Array
    uid: botframework-streaming.INodeBuffer.Uint8Array
    package: botframework-streaming
    summary: ''
    fullName: Uint8Array
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Uint8Array: Uint8ArrayConstructor'
      return:
        description: ''
        type: Uint8ArrayConstructor
inheritedProperties:
  - name: buffer
    uid: botframework-streaming.INodeBuffer.buffer
    package: botframework-streaming
    summary: The ArrayBuffer instance referenced by the array.
    fullName: buffer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'buffer: ArrayBufferLike'
      return:
        description: ''
        type: ArrayBufferLike
    inheritanceDescription: <b>Inherited From</b> Uint8Array.buffer
  - name: byteLength
    uid: botframework-streaming.INodeBuffer.byteLength
    package: botframework-streaming
    summary: The length in bytes of the array.
    fullName: byteLength
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'byteLength: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.byteLength
  - name: byteOffset
    uid: botframework-streaming.INodeBuffer.byteOffset
    package: botframework-streaming
    summary: The offset in bytes of the array.
    fullName: byteOffset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'byteOffset: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.byteOffset
  - name: BYTES_PER_ELEMENT
    uid: botframework-streaming.INodeBuffer.BYTES_PER_ELEMENT
    package: botframework-streaming
    summary: The size in bytes of each element in the array.
    fullName: BYTES_PER_ELEMENT
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'BYTES_PER_ELEMENT: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.BYTES_PER_ELEMENT
  - name: length
    uid: botframework-streaming.INodeBuffer.length
    package: botframework-streaming
    summary: The length of the array.
    fullName: length
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.length
inheritedMethods:
  - name: 'copyWithin(number, number, number)'
    uid: botframework-streaming.INodeBuffer.copyWithin
    package: botframework-streaming
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: number): this'
      parameters:
        - id: target
          type: number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type: number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type: number
          description: >
            If not specified, length of the this object is used as its default
            value.
      return:
        description: ''
        type: this
    inheritanceDescription: <b>Inherited From</b> Uint8Array.copyWithin
  - name: 'every((value: number, index: number, array: Uint8Array) => boolean, any)'
    uid: botframework-streaming.INodeBuffer.every
    package: botframework-streaming
    summary: Determines whether all the members of an array satisfy the specified test.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function every(callbackfn: (value: number, index: number, array:
        Uint8Array) => boolean, thisArg?: any): boolean
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: Uint8Array) =&gt; boolean'
          description: >-
            A function that accepts up to three arguments. The every method
            calls

            the callbackfn function for each element in array1 until the
            callbackfn returns false,

            or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Uint8Array.every
  - name: 'filter((value: number, index: number, array: Uint8Array) => any, any)'
    uid: botframework-streaming.INodeBuffer.filter
    package: botframework-streaming
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter(callbackfn: (value: number, index: number, array:
        Uint8Array) => any, thisArg?: any): Uint8Array
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: Uint8Array) =&gt; any'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls

            the callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: Uint8Array
    inheritanceDescription: <b>Inherited From</b> Uint8Array.filter
  - name: 'find((value: number, index: number, obj: Uint8Array) => boolean, any)'
    uid: botframework-streaming.INodeBuffer.find
    package: botframework-streaming
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function find(predicate: (value: number, index: number, obj: Uint8Array)
        => boolean, thisArg?: any): number | undefined
      parameters:
        - id: predicate
          type: '(value: number, index: number, obj: Uint8Array) =&gt; boolean'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type: any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        description: ''
        type: number | undefined
    inheritanceDescription: <b>Inherited From</b> Uint8Array.find
  - name: 'findIndex((value: number, index: number, obj: Uint8Array) => boolean, any)'
    uid: botframework-streaming.INodeBuffer.findIndex
    package: botframework-streaming
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function findIndex(predicate: (value: number, index: number, obj:
        Uint8Array) => boolean, thisArg?: any): number
      parameters:
        - id: predicate
          type: '(value: number, index: number, obj: Uint8Array) =&gt; boolean'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type: any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.findIndex
  - name: 'forEach((value: number, index: number, array: Uint8Array) => void, any)'
    uid: botframework-streaming.INodeBuffer.forEach
    package: botframework-streaming
    summary: Performs the specified action for each element in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: number, index: number, array:
        Uint8Array) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: Uint8Array) =&gt; void'
          description: |-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
    inheritanceDescription: <b>Inherited From</b> Uint8Array.forEach
  - name: join(string)
    uid: botframework-streaming.INodeBuffer.join
    package: botframework-streaming
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function join(separator?: string): string'
      parameters:
        - id: separator
          type: string
          description: >
            A string used to separate one element of an array from the next in
            the

            resulting String. If omitted, the array elements are separated with
            a comma.
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Uint8Array.join
  - name: 'map((value: number, index: number, array: Uint8Array) => number, any)'
    uid: botframework-streaming.INodeBuffer.map
    package: botframework-streaming
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that

      contains the results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function map(callbackfn: (value: number, index: number, array:
        Uint8Array) => number, thisArg?: any): Uint8Array
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: Uint8Array) =&gt; number'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the

            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: Uint8Array
    inheritanceDescription: <b>Inherited From</b> Uint8Array.map
  - name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: Uint8Array) => number)
    uid: botframework-streaming.INodeBuffer.reduce
    package: botframework-streaming
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of

      the callback function is the accumulated result, and is provided as an
      argument in the next

      call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number): number
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; number
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the

            callbackfn function one time for each element in the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduce
  - name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: Uint8Array) => number, number)
    uid: botframework-streaming.INodeBuffer.reduce_1
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number,
        initialValue: number): number
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; number
          description: ''
        - id: initialValue
          type: number
          description: ''
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduce
  - name: >-
      reduce<U>((previousValue: U, currentValue: number, currentIndex: number,
      array: Uint8Array) => U, U)
    uid: botframework-streaming.INodeBuffer.reduce_2
    package: botframework-streaming
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of

      the callback function is the accumulated result, and is provided as an
      argument in the next

      call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue: number,
        currentIndex: number, array: Uint8Array) => U, initialValue: U): U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the

            callbackfn function one time for each element in the array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start

            the accumulation. The first call to the callbackfn function provides
            this value as an argument

            instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduce
  - name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: Uint8Array) => number)
    uid: botframework-streaming.INodeBuffer.reduceRight
    package: botframework-streaming
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order.

      The return value of the callback function is the accumulated result, and
      is provided as an

      argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number): number
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; number
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls

            the callbackfn function one time for each element in the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduceRight
  - name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: Uint8Array) => number, number)
    uid: botframework-streaming.INodeBuffer.reduceRight_1
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number,
        initialValue: number): number
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: number, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; number
          description: ''
        - id: initialValue
          type: number
          description: ''
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduceRight
  - name: >-
      reduceRight<U>((previousValue: U, currentValue: number, currentIndex:
      number, array: Uint8Array) => U, U)
    uid: botframework-streaming.INodeBuffer.reduceRight_2
    package: botframework-streaming
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order.

      The return value of the callback function is the accumulated result, and
      is provided as an

      argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        number, currentIndex: number, array: Uint8Array) => U, initialValue: U):
        U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: number, currentIndex: number,
            array: Uint8Array) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls

            the callbackfn function one time for each element in the array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start

            the accumulation. The first call to the callbackfn function provides
            this value as an argument

            instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reduceRight
  - name: reverse()
    uid: botframework-streaming.INodeBuffer.reverse
    package: botframework-streaming
    summary: Reverses the elements in an Array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reverse(): Uint8Array'
      return:
        description: ''
        type: Uint8Array
    inheritanceDescription: <b>Inherited From</b> Uint8Array.reverse
  - name: 'set(ArrayLike<number>, number)'
    uid: botframework-streaming.INodeBuffer.set
    package: botframework-streaming
    summary: Sets a value or an array of values.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function set(array: ArrayLike<number>, offset?: number)'
      parameters:
        - id: array
          type: ArrayLike&lt;number&gt;
          description: A typed or untyped array of values to set.
        - id: offset
          type: number
          description: >
            The index in the current array at which the values are to be
            written.
    inheritanceDescription: <b>Inherited From</b> Uint8Array.set
  - name: 'some((value: number, index: number, array: Uint8Array) => boolean, any)'
    uid: botframework-streaming.INodeBuffer.some
    package: botframework-streaming
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function some(callbackfn: (value: number, index: number, array:
        Uint8Array) => boolean, thisArg?: any): boolean
      parameters:
        - id: callbackfn
          type: '(value: number, index: number, array: Uint8Array) =&gt; boolean'
          description: >-
            A function that accepts up to three arguments. The some method calls
            the

            callbackfn function for each element in array1 until the callbackfn
            returns true, or until

            the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Uint8Array.some
  - name: 'sort((a: number, b: number) => number)'
    uid: botframework-streaming.INodeBuffer.sort
    package: botframework-streaming
    summary: Sorts an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sort(compareFn?: (a: number, b: number) => number): this'
      parameters:
        - id: compareFn
          type: '(a: number, b: number) =&gt; number'
          description: >
            The name of the function used to determine the order of the
            elements. If

            omitted, the elements are sorted in ascending, ASCII character
            order.
      return:
        description: ''
        type: this
    inheritanceDescription: <b>Inherited From</b> Uint8Array.sort
  - name: 'subarray(number, number)'
    uid: botframework-streaming.INodeBuffer.subarray
    package: botframework-streaming
    summary: >-
      Gets a new Uint8Array view of the ArrayBuffer store for this array,
      referencing the elements

      at begin, inclusive, up to end, exclusive.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function subarray(begin: number, end?: number): Uint8Array'
      parameters:
        - id: begin
          type: number
          description: The index of the beginning of the array.
        - id: end
          type: number
          description: |
            The index of the end of the array.
      return:
        description: ''
        type: Uint8Array
    inheritanceDescription: <b>Inherited From</b> Uint8Array.subarray
  - name: toLocaleString()
    uid: botframework-streaming.INodeBuffer.toLocaleString
    package: botframework-streaming
    summary: Converts a number to a string by using the current locale.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toLocaleString(): string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Uint8Array.toLocaleString
methods:
  - name: 'compare(Uint8Array, number, number, number, number)'
    uid: botframework-streaming.INodeBuffer.compare
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function compare(otherBuffer: Uint8Array, targetStart?: number,
        targetEnd?: number, sourceStart?: number, sourceEnd?: number): number
      parameters:
        - id: otherBuffer
          type: Uint8Array
          description: ''
        - id: targetStart
          type: number
          description: ''
        - id: targetEnd
          type: number
          description: ''
        - id: sourceStart
          type: number
          description: ''
        - id: sourceEnd
          type: number
          description: ''
      return:
        description: ''
        type: number
  - name: 'copy(Uint8Array, number, number, number)'
    uid: botframework-streaming.INodeBuffer.copy
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copy(targetBuffer: Uint8Array, targetStart?: number,
        sourceStart?: number, sourceEnd?: number): number
      parameters:
        - id: targetBuffer
          type: Uint8Array
          description: ''
        - id: targetStart
          type: number
          description: ''
        - id: sourceStart
          type: number
          description: ''
        - id: sourceEnd
          type: number
          description: ''
      return:
        description: ''
        type: number
  - name: entries()
    uid: botframework-streaming.INodeBuffer.entries
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function entries(): IterableIterator<[number, number]>'
      return:
        description: ''
        type: 'IterableIterator&lt;[number, number]&gt;'
  - name: equals(Uint8Array)
    uid: botframework-streaming.INodeBuffer.equals
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function equals(otherBuffer: Uint8Array): boolean'
      parameters:
        - id: otherBuffer
          type: Uint8Array
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'fill(any, number, number)'
    uid: botframework-streaming.INodeBuffer.fill
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function fill(value: any, offset?: number, end?: number): this'
      parameters:
        - id: value
          type: any
          description: ''
        - id: offset
          type: number
          description: ''
        - id: end
          type: number
          description: ''
      return:
        description: ''
        type: this
  - name: 'includes(string | number | this, number, string)'
    uid: botframework-streaming.INodeBuffer.includes
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function includes(value: string | number | this, byteOffset?: number,
        encoding?: string): boolean
      parameters:
        - id: value
          type: string | number | this
          description: ''
        - id: byteOffset
          type: number
          description: ''
        - id: encoding
          type: string
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'indexOf(string | number | Uint8Array, number, string)'
    uid: botframework-streaming.INodeBuffer.indexOf
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function indexOf(value: string | number | Uint8Array, byteOffset?:
        number, encoding?: string): number
      parameters:
        - id: value
          type: string | number | Uint8Array
          description: ''
        - id: byteOffset
          type: number
          description: ''
        - id: encoding
          type: string
          description: ''
      return:
        description: ''
        type: number
  - name: keys()
    uid: botframework-streaming.INodeBuffer.keys
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function keys(): IterableIterator<number>'
      return:
        description: ''
        type: IterableIterator&lt;number&gt;
  - name: 'lastIndexOf(string | number | Uint8Array, number, string)'
    uid: botframework-streaming.INodeBuffer.lastIndexOf
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function lastIndexOf(value: string | number | Uint8Array, byteOffset?:
        number, encoding?: string): number
      parameters:
        - id: value
          type: string | number | Uint8Array
          description: ''
        - id: byteOffset
          type: number
          description: ''
        - id: encoding
          type: string
          description: ''
      return:
        description: ''
        type: number
  - name: 'readDoubleBE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readDoubleBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readDoubleBE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readDoubleLE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readDoubleLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readDoubleLE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readFloatBE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readFloatBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readFloatBE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readFloatLE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readFloatLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readFloatLE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readInt16BE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readInt16BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readInt16BE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readInt16LE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readInt16LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readInt16LE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readInt32BE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readInt32BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readInt32BE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readInt32LE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readInt32LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readInt32LE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readInt8(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readInt8
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readInt8(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readIntBE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.readIntBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readIntBE(offset: number, byteLength: number, noAssert?:
        boolean): number
      parameters:
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readIntLE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.readIntLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readIntLE(offset: number, byteLength: number, noAssert?:
        boolean): number
      parameters:
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUInt16BE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUInt16BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readUInt16BE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUInt16LE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUInt16LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readUInt16LE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUInt32BE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUInt32BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readUInt32BE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUInt32LE(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUInt32LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readUInt32LE(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUInt8(number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUInt8
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function readUInt8(offset: number, noAssert?: boolean): number'
      parameters:
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUIntBE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUIntBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readUIntBE(offset: number, byteLength: number, noAssert?:
        boolean): number
      parameters:
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'readUIntLE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.readUIntLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function readUIntLE(offset: number, byteLength: number, noAssert?:
        boolean): number
      parameters:
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'slice(number, number)'
    uid: botframework-streaming.INodeBuffer.slice
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function slice(start?: number, end?: number): this'
      parameters:
        - id: start
          type: number
          description: ''
        - id: end
          type: number
          description: ''
      return:
        description: ''
        type: this
  - name: swap16()
    uid: botframework-streaming.INodeBuffer.swap16
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function swap16(): this'
      return:
        description: ''
        type: this
  - name: swap32()
    uid: botframework-streaming.INodeBuffer.swap32
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function swap32(): this'
      return:
        description: ''
        type: this
  - name: swap64()
    uid: botframework-streaming.INodeBuffer.swap64
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function swap64(): this'
      return:
        description: ''
        type: this
  - name: toJSON()
    uid: botframework-streaming.INodeBuffer.toJSON
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toJSON(): { data: any[], type: "Buffer" }'
      return:
        description: ''
        type: '{ data: any[], type: "Buffer" }'
  - name: 'toString(string, number, number)'
    uid: botframework-streaming.INodeBuffer.toString
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function toString(encoding?: string, start?: number, end?: number):
        string
      parameters:
        - id: encoding
          type: string
          description: ''
        - id: start
          type: number
          description: ''
        - id: end
          type: number
          description: ''
      return:
        description: ''
        type: string
  - name: values()
    uid: botframework-streaming.INodeBuffer.values
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function values(): IterableIterator<number>'
      return:
        description: ''
        type: IterableIterator&lt;number&gt;
  - name: 'write(string, number, number, string)'
    uid: botframework-streaming.INodeBuffer.write
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function write(string: string, offset?: number, length?: number,
        encoding?: string): number
      parameters:
        - id: string
          type: string
          description: ''
        - id: offset
          type: number
          description: ''
        - id: length
          type: number
          description: ''
        - id: encoding
          type: string
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeDoubleBE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeDoubleBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeDoubleBE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeDoubleLE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeDoubleLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeDoubleLE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeFloatBE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeFloatBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeFloatBE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeFloatLE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeFloatLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeFloatLE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeInt16BE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeInt16BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeInt16BE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeInt16LE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeInt16LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeInt16LE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeInt32BE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeInt32BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeInt32BE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeInt32LE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeInt32LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeInt32LE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeInt8(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeInt8
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeInt8(value: number, offset: number, noAssert?: boolean):
        number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeIntBE(number, number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeIntBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeIntBE(value: number, offset: number, byteLength: number,
        noAssert?: boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeIntLE(number, number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeIntLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeIntLE(value: number, offset: number, byteLength: number,
        noAssert?: boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUInt16BE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUInt16BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUInt16BE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUInt16LE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUInt16LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUInt16LE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUInt32BE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUInt32BE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUInt32BE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUInt32LE(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUInt32LE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUInt32LE(value: number, offset: number, noAssert?:
        boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUInt8(number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUInt8
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUInt8(value: number, offset: number, noAssert?: boolean):
        number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUIntBE(number, number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUIntBE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUIntBE(value: number, offset: number, byteLength: number,
        noAssert?: boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: 'writeUIntLE(number, number, number, boolean)'
    uid: botframework-streaming.INodeBuffer.writeUIntLE
    package: botframework-streaming
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function writeUIntLE(value: number, offset: number, byteLength: number,
        noAssert?: boolean): number
      parameters:
        - id: value
          type: number
          description: ''
        - id: offset
          type: number
          description: ''
        - id: byteLength
          type: number
          description: ''
        - id: noAssert
          type: boolean
          description: ''
      return:
        description: ''
        type: number
extends: Uint8Array
