### YamlMime:TSType
name: BrowserWebSocket
uid: botframework-streaming.BrowserWebSocket
package: botframework-streaming
summary: ''
fullName: BrowserWebSocket
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: BrowserWebSocket(IBrowserWebSocket)
    uid: botframework-streaming.BrowserWebSocket.constructor
    package: botframework-streaming
    summary: >-
      Creates a new instance of the
      [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BrowserWebSocket(socket?: IBrowserWebSocket)'
      parameters:
        - id: socket
          type: <xref uid="botframework-streaming.IBrowserWebSocket" />
          description: |
            The socket object to build this connection on.
properties:
  - name: isConnected
    uid: botframework-streaming.BrowserWebSocket.isConnected
    package: botframework-streaming
    summary: True if the socket is currently connected.
    fullName: isConnected
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isConnected
      return:
        type: boolean
        description: ''
methods:
  - name: close()
    uid: botframework-streaming.BrowserWebSocket.close
    package: botframework-streaming
    summary: Close the socket.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function close()
  - name: connect(string)
    uid: botframework-streaming.BrowserWebSocket.connect
    package: botframework-streaming
    summary: Connects to the supporting socket using WebSocket protocol.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function connect(serverAddress: string)'
      parameters:
        - id: serverAddress
          type: string
          description: |
            The address the server is listening on.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'setOnCloseHandler((x: any) => void)'
    uid: botframework-streaming.BrowserWebSocket.setOnCloseHandler
    package: botframework-streaming
    summary: Set the callback to call when encountering socket closures.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setOnCloseHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type: '(x: any) =&gt; void'
          description: ''
  - name: 'setOnErrorHandler((x: any) => void)'
    uid: botframework-streaming.BrowserWebSocket.setOnErrorHandler
    package: botframework-streaming
    summary: Set the callback to call when encountering errors.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setOnErrorHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type: '(x: any) =&gt; void'
          description: ''
  - name: 'setOnMessageHandler((x: any) => void)'
    uid: botframework-streaming.BrowserWebSocket.setOnMessageHandler
    package: botframework-streaming
    summary: Set the handler for text and binary messages received on the socket.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setOnMessageHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type: '(x: any) =&gt; void'
          description: ''
  - name: write(INodeBuffer)
    uid: botframework-streaming.BrowserWebSocket.write
    package: botframework-streaming
    summary: Writes a buffer to the socket and sends it.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function write(buffer: INodeBuffer)'
      parameters:
        - id: buffer
          type: <xref uid="botframework-streaming.INodeBuffer" />
          description: |
            The buffer of data to send across the connection.
