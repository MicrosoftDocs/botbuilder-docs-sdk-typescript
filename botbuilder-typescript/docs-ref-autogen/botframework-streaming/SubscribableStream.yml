### YamlMime:TSType
name: SubscribableStream
uid: botframework-streaming.SubscribableStream
package: botframework-streaming
summary: ''
fullName: SubscribableStream
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SubscribableStream(DuplexOptions)
    uid: botframework-streaming.SubscribableStream.constructor
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SubscribableStream(options?: DuplexOptions)'
      parameters:
        - id: options
          type: DuplexOptions
          description: ''
properties:
  - name: destroyed
    uid: botframework-streaming.SubscribableStream.destroyed
    package: botframework-streaming
    summary: ''
    fullName: destroyed
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'destroyed: boolean'
      return:
        type: boolean
        description: ''
  - name: length
    uid: botframework-streaming.SubscribableStream.length
    package: botframework-streaming
    summary: ''
    fullName: length
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public length: number = 0'
      return:
        type: number
        description: ''
  - name: readable
    uid: botframework-streaming.SubscribableStream.readable
    package: botframework-streaming
    summary: ''
    fullName: readable
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readable: boolean'
      return:
        type: boolean
        description: ''
  - name: readableEncoding
    uid: botframework-streaming.SubscribableStream.readableEncoding
    package: botframework-streaming
    summary: ''
    fullName: readableEncoding
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableEncoding: BufferEncoding | null'
      return:
        type: <xref uid="botframework-streaming.BufferEncoding" /> | null
        description: ''
  - name: readableEnded
    uid: botframework-streaming.SubscribableStream.readableEnded
    package: botframework-streaming
    summary: ''
    fullName: readableEnded
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableEnded: boolean'
      return:
        type: boolean
        description: ''
  - name: readableFlowing
    uid: botframework-streaming.SubscribableStream.readableFlowing
    package: botframework-streaming
    summary: ''
    fullName: readableFlowing
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableFlowing: boolean | null'
      return:
        type: boolean | null
        description: ''
  - name: readableHighWaterMark
    uid: botframework-streaming.SubscribableStream.readableHighWaterMark
    package: botframework-streaming
    summary: ''
    fullName: readableHighWaterMark
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type: number
        description: ''
  - name: readableLength
    uid: botframework-streaming.SubscribableStream.readableLength
    package: botframework-streaming
    summary: ''
    fullName: readableLength
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableLength: number'
      return:
        type: number
        description: ''
  - name: readableObjectMode
    uid: botframework-streaming.SubscribableStream.readableObjectMode
    package: botframework-streaming
    summary: ''
    fullName: readableObjectMode
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type: boolean
        description: ''
  - name: writable
    uid: botframework-streaming.SubscribableStream.writable
    package: botframework-streaming
    summary: ''
    fullName: writable
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writable: boolean'
      return:
        type: boolean
        description: ''
  - name: writableCorked
    uid: botframework-streaming.SubscribableStream.writableCorked
    package: botframework-streaming
    summary: ''
    fullName: writableCorked
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableCorked: number'
      return:
        type: number
        description: ''
  - name: writableEnded
    uid: botframework-streaming.SubscribableStream.writableEnded
    package: botframework-streaming
    summary: ''
    fullName: writableEnded
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableEnded: boolean'
      return:
        type: boolean
        description: ''
  - name: writableFinished
    uid: botframework-streaming.SubscribableStream.writableFinished
    package: botframework-streaming
    summary: ''
    fullName: writableFinished
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableFinished: boolean'
      return:
        type: boolean
        description: ''
  - name: writableHighWaterMark
    uid: botframework-streaming.SubscribableStream.writableHighWaterMark
    package: botframework-streaming
    summary: ''
    fullName: writableHighWaterMark
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type: number
        description: ''
  - name: writableLength
    uid: botframework-streaming.SubscribableStream.writableLength
    package: botframework-streaming
    summary: ''
    fullName: writableLength
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableLength: number'
      return:
        type: number
        description: ''
  - name: writableObjectMode
    uid: botframework-streaming.SubscribableStream.writableObjectMode
    package: botframework-streaming
    summary: ''
    fullName: writableObjectMode
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type: boolean
        description: ''
methods:
  - name: 'addListener("close", () => void)'
    uid: botframework-streaming.SubscribableStream.addListener
    package: botframework-streaming
    summary: |-
      Event emitter
      The defined events on documents including:
      1. close
      2. data
      3. end
      4. error
      5. pause
      6. readable
      7. resume
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.addListener_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("end", () => void)'
    uid: botframework-streaming.SubscribableStream.addListener_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.addListener_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.addListener_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.addListener_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.addListener_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'addListener(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.addListener_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: cork()
    uid: botframework-streaming.SubscribableStream.cork
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function cork()
  - name: destroy(Error)
    uid: botframework-streaming.SubscribableStream.destroy
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type: Error
          description: ''
  - name: emit("close")
    uid: botframework-streaming.SubscribableStream.emit
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type: '"close"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit("data", any)'
    uid: botframework-streaming.SubscribableStream.emit_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "data", chunk: any)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: chunk
          type: any
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("end")
    uid: botframework-streaming.SubscribableStream.emit_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type: '"end"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit("error", Error)'
    uid: botframework-streaming.SubscribableStream.emit_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: err
          type: Error
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("pause")
    uid: botframework-streaming.SubscribableStream.emit_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "pause")'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("readable")
    uid: botframework-streaming.SubscribableStream.emit_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: emit("resume")
    uid: botframework-streaming.SubscribableStream.emit_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: "resume")'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'emit(string | symbol, any[])'
    uid: botframework-streaming.SubscribableStream.emit_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: boolean
        description: ''
  - name: end(() => void)
    uid: botframework-streaming.SubscribableStream.end
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function end(cb?: () => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
  - name: 'end(any, () => void)'
    uid: botframework-streaming.SubscribableStream.end_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function end(chunk: any, cb?: () => void)'
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: cb
          type: () =&gt; void
          description: ''
  - name: 'end(any, BufferEncoding, () => void)'
    uid: botframework-streaming.SubscribableStream.end_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function end(chunk: any, encoding?: BufferEncoding, cb?: () => void)'
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
        - id: cb
          type: () =&gt; void
          description: ''
  - name: eventNames()
    uid: botframework-streaming.SubscribableStream.eventNames
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function eventNames()
      return:
        type: Array&lt;string | symbol&gt;
        description: ''
  - name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    uid: botframework-streaming.SubscribableStream.from
    package: botframework-streaming
    summary: A utility method for creating Readable Streams out of iterators.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;
          description: ''
        - id: options
          type: ReadableOptions
          description: ''
      return:
        type: Readable
        description: ''
  - name: getMaxListeners()
    uid: botframework-streaming.SubscribableStream.getMaxListeners
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMaxListeners()
      return:
        type: number
        description: ''
  - name: isPaused()
    uid: botframework-streaming.SubscribableStream.isPaused
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function isPaused()
      return:
        type: boolean
        description: ''
  - name: listenerCount(string | symbol)
    uid: botframework-streaming.SubscribableStream.listenerCount
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type: string | symbol
          description: ''
      return:
        type: number
        description: ''
  - name: listeners(string | symbol)
    uid: botframework-streaming.SubscribableStream.listeners
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: 'off(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.off
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("close", () => void)'
    uid: botframework-streaming.SubscribableStream.on
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.on_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("end", () => void)'
    uid: botframework-streaming.SubscribableStream.on_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.on_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.on_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.on_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.on_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'on(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.on_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("close", () => void)'
    uid: botframework-streaming.SubscribableStream.once
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.once_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("end", () => void)'
    uid: botframework-streaming.SubscribableStream.once_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.once_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.once_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.once_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.once_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'once(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.once_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: pause()
    uid: botframework-streaming.SubscribableStream.pause
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function pause()
      return:
        type: this
        description: ''
  - name: 'pipe<T>(T, Object)'
    uid: botframework-streaming.SubscribableStream.pipe
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function pipe<T>(destination: T, options?: Object)'
      parameters:
        - id: destination
          type: T
          description: ''
        - id: options
          type: Object
          description: ''
      return:
        type: T
        description: ''
  - name: 'prependListener("close", () => void)'
    uid: botframework-streaming.SubscribableStream.prependListener
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("end", () => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependListener(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.prependListener_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("close", () => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: any) =>
        void)
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("end", () => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function prependOnceListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.prependOnceListener_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'push(any, BufferEncoding)'
    uid: botframework-streaming.SubscribableStream.push
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
      return:
        type: boolean
        description: ''
  - name: rawListeners(string | symbol)
    uid: botframework-streaming.SubscribableStream.rawListeners
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: 'Function[]'
        description: ''
  - name: read(number)
    uid: botframework-streaming.SubscribableStream.read
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function read(size?: number)'
      parameters:
        - id: size
          type: number
          description: ''
      return:
        type: any
        description: ''
  - name: removeAllListeners(string | symbol)
    uid: botframework-streaming.SubscribableStream.removeAllListeners
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type: string | symbol
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("close", () => void)'
    uid: botframework-streaming.SubscribableStream.removeListener
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type: '"close"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("data", (chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type: '"data"'
          description: ''
        - id: listener
          type: '(chunk: any) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("end", () => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_2
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type: '"end"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("error", (err: Error) => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_3
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(err: Error) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("pause", () => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_4
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type: '"pause"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("readable", () => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_5
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type: '"readable"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener("resume", () => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_6
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type: '"resume"'
          description: ''
        - id: listener
          type: () =&gt; void
          description: ''
      return:
        type: this
        description: ''
  - name: 'removeListener(string | symbol, (args: any[]) => void)'
    uid: botframework-streaming.SubscribableStream.removeListener_7
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        type: this
        description: ''
  - name: resume()
    uid: botframework-streaming.SubscribableStream.resume
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function resume()
      return:
        type: this
        description: ''
  - name: setDefaultEncoding(BufferEncoding)
    uid: botframework-streaming.SubscribableStream.setDefaultEncoding
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setDefaultEncoding(encoding: BufferEncoding)'
      parameters:
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
      return:
        type: this
        description: ''
  - name: setEncoding(BufferEncoding)
    uid: botframework-streaming.SubscribableStream.setEncoding
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setEncoding(encoding: BufferEncoding)'
      parameters:
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
      return:
        type: this
        description: ''
  - name: setMaxListeners(number)
    uid: botframework-streaming.SubscribableStream.setMaxListeners
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
      return:
        type: this
        description: ''
  - name: 'subscribe((chunk: any) => void)'
    uid: botframework-streaming.SubscribableStream.subscribe
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function subscribe(onData: (chunk: any) => void)'
      parameters:
        - id: onData
          type: '(chunk: any) =&gt; void'
          description: ''
  - name: uncork()
    uid: botframework-streaming.SubscribableStream.uncork
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function uncork()
  - name: unpipe(WritableStream)
    uid: botframework-streaming.SubscribableStream.unpipe
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unpipe(destination?: WritableStream)'
      parameters:
        - id: destination
          type: WritableStream
          description: ''
      return:
        type: this
        description: ''
  - name: 'unshift(any, BufferEncoding)'
    uid: botframework-streaming.SubscribableStream.unshift
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
  - name: wrap(ReadableStream)
    uid: botframework-streaming.SubscribableStream.wrap
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type: ReadableStream
          description: ''
      return:
        type: this
        description: ''
  - name: 'write(any, (error: Error | null | undefined) => void)'
    uid: botframework-streaming.SubscribableStream.write_1
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function write(chunk: any, cb?: (error: Error | null | undefined) =>
        void)
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: cb
          type: '(error: Error | null | undefined) =&gt; void'
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'write(any, BufferEncoding, (error: Error | null | undefined) => void)'
    uid: botframework-streaming.SubscribableStream.write
    package: botframework-streaming
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error
        | null | undefined) => void)
      parameters:
        - id: chunk
          type: any
          description: ''
        - id: encoding
          type: <xref uid="botframework-streaming.BufferEncoding" />
          description: ''
        - id: cb
          type: '(error: Error | null | undefined) =&gt; void'
          description: ''
      return:
        type: boolean
        description: ''
extends: Duplex
