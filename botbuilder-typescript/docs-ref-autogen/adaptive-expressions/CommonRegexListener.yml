### YamlMime:TSType
name: CommonRegexListener
uid: adaptive-expressions.CommonRegexListener
package: adaptive-expressions
summary: |-
  This interface defines a complete listener for a parse tree produced by
  `CommonRegexParser`.
fullName: CommonRegexListener
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: enterAlpha_nums
    uid: adaptive-expressions.CommonRegexListener.enterAlpha_nums
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.alpha_nums`.
    fullName: enterAlpha_nums
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterAlpha_nums?: (ctx: Alpha_numsContext) => void'
      return:
        type: '(ctx: Alpha_numsContext) =&gt; void'
        description: ''
  - name: enterAlternation
    uid: adaptive-expressions.CommonRegexListener.enterAlternation
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.alternation`.
    fullName: enterAlternation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterAlternation?: (ctx: AlternationContext) => void'
      return:
        type: '(ctx: AlternationContext) =&gt; void'
        description: ''
  - name: enterAtom
    uid: adaptive-expressions.CommonRegexListener.enterAtom
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.atom`.
    fullName: enterAtom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterAtom?: (ctx: AtomContext) => void'
      return:
        type: '(ctx: AtomContext) =&gt; void'
        description: ''
  - name: enterCapture
    uid: adaptive-expressions.CommonRegexListener.enterCapture
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.capture`.
    fullName: enterCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterCapture?: (ctx: CaptureContext) => void'
      return:
        type: '(ctx: CaptureContext) =&gt; void'
        description: ''
  - name: enterCc_atom
    uid: adaptive-expressions.CommonRegexListener.enterCc_atom
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.cc_atom`.
    fullName: enterCc_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterCc_atom?: (ctx: Cc_atomContext) => void'
      return:
        type: '(ctx: Cc_atomContext) =&gt; void'
        description: ''
  - name: enterCc_literal
    uid: adaptive-expressions.CommonRegexListener.enterCc_literal
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.cc_literal`.
    fullName: enterCc_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterCc_literal?: (ctx: Cc_literalContext) => void'
      return:
        type: '(ctx: Cc_literalContext) =&gt; void'
        description: ''
  - name: enterCharacter_class
    uid: adaptive-expressions.CommonRegexListener.enterCharacter_class
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.character_class`.
    fullName: enterCharacter_class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterCharacter_class?: (ctx: Character_classContext) => void'
      return:
        type: '(ctx: Character_classContext) =&gt; void'
        description: ''
  - name: enterDigit
    uid: adaptive-expressions.CommonRegexListener.enterDigit
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.digit`.
    fullName: enterDigit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterDigit?: (ctx: DigitContext) => void'
      return:
        type: '(ctx: DigitContext) =&gt; void'
        description: ''
  - name: enterDigits
    uid: adaptive-expressions.CommonRegexListener.enterDigits
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.digits`.
    fullName: enterDigits
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterDigits?: (ctx: DigitsContext) => void'
      return:
        type: '(ctx: DigitsContext) =&gt; void'
        description: ''
  - name: enterElement
    uid: adaptive-expressions.CommonRegexListener.enterElement
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.element`.
    fullName: enterElement
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterElement?: (ctx: ElementContext) => void'
      return:
        type: '(ctx: ElementContext) =&gt; void'
        description: ''
  - name: enterEveryRule
    uid: adaptive-expressions.CommonRegexListener.enterEveryRule
    package: adaptive-expressions
    summary: ''
    fullName: enterEveryRule
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type: '(ctx: ParserRuleContext) =&gt; void'
        description: ''
  - name: enterExpr
    uid: adaptive-expressions.CommonRegexListener.enterExpr
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.expr`.
    fullName: enterExpr
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterExpr?: (ctx: ExprContext) => void'
      return:
        type: '(ctx: ExprContext) =&gt; void'
        description: ''
  - name: enterLetter
    uid: adaptive-expressions.CommonRegexListener.enterLetter
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.letter`.
    fullName: enterLetter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterLetter?: (ctx: LetterContext) => void'
      return:
        type: '(ctx: LetterContext) =&gt; void'
        description: ''
  - name: enterLiteral
    uid: adaptive-expressions.CommonRegexListener.enterLiteral
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.literal`.
    fullName: enterLiteral
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterLiteral?: (ctx: LiteralContext) => void'
      return:
        type: '(ctx: LiteralContext) =&gt; void'
        description: ''
  - name: enterName
    uid: adaptive-expressions.CommonRegexListener.enterName
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.name`.
    fullName: enterName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterName?: (ctx: NameContext) => void'
      return:
        type: '(ctx: NameContext) =&gt; void'
        description: ''
  - name: enterNon_capture
    uid: adaptive-expressions.CommonRegexListener.enterNon_capture
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.non_capture`.
    fullName: enterNon_capture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterNon_capture?: (ctx: Non_captureContext) => void'
      return:
        type: '(ctx: Non_captureContext) =&gt; void'
        description: ''
  - name: enterNon_close_paren
    uid: adaptive-expressions.CommonRegexListener.enterNon_close_paren
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.non_close_paren`.
    fullName: enterNon_close_paren
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterNon_close_paren?: (ctx: Non_close_parenContext) => void'
      return:
        type: '(ctx: Non_close_parenContext) =&gt; void'
        description: ''
  - name: enterNon_close_parens
    uid: adaptive-expressions.CommonRegexListener.enterNon_close_parens
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.non_close_parens`.
    fullName: enterNon_close_parens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterNon_close_parens?: (ctx: Non_close_parensContext) => void'
      return:
        type: '(ctx: Non_close_parensContext) =&gt; void'
        description: ''
  - name: enterNumber
    uid: adaptive-expressions.CommonRegexListener.enterNumber
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.number`.
    fullName: enterNumber
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterNumber?: (ctx: NumberContext) => void'
      return:
        type: '(ctx: NumberContext) =&gt; void'
        description: ''
  - name: enterOctal_char
    uid: adaptive-expressions.CommonRegexListener.enterOctal_char
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.octal_char`.
    fullName: enterOctal_char
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterOctal_char?: (ctx: Octal_charContext) => void'
      return:
        type: '(ctx: Octal_charContext) =&gt; void'
        description: ''
  - name: enterOctal_digit
    uid: adaptive-expressions.CommonRegexListener.enterOctal_digit
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.octal_digit`.
    fullName: enterOctal_digit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterOctal_digit?: (ctx: Octal_digitContext) => void'
      return:
        type: '(ctx: Octal_digitContext) =&gt; void'
        description: ''
  - name: enterOption
    uid: adaptive-expressions.CommonRegexListener.enterOption
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.option`.
    fullName: enterOption
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterOption?: (ctx: OptionContext) => void'
      return:
        type: '(ctx: OptionContext) =&gt; void'
        description: ''
  - name: enterOption_flag
    uid: adaptive-expressions.CommonRegexListener.enterOption_flag
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.option_flag`.
    fullName: enterOption_flag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterOption_flag?: (ctx: Option_flagContext) => void'
      return:
        type: '(ctx: Option_flagContext) =&gt; void'
        description: ''
  - name: enterParse
    uid: adaptive-expressions.CommonRegexListener.enterParse
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.parse`.
    fullName: enterParse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterParse?: (ctx: ParseContext) => void'
      return:
        type: '(ctx: ParseContext) =&gt; void'
        description: ''
  - name: enterQuantifier
    uid: adaptive-expressions.CommonRegexListener.enterQuantifier
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.quantifier`.
    fullName: enterQuantifier
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterQuantifier?: (ctx: QuantifierContext) => void'
      return:
        type: '(ctx: QuantifierContext) =&gt; void'
        description: ''
  - name: enterQuantifier_type
    uid: adaptive-expressions.CommonRegexListener.enterQuantifier_type
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.quantifier_type`.
    fullName: enterQuantifier_type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterQuantifier_type?: (ctx: Quantifier_typeContext) => void'
      return:
        type: '(ctx: Quantifier_typeContext) =&gt; void'
        description: ''
  - name: enterShared_atom
    uid: adaptive-expressions.CommonRegexListener.enterShared_atom
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.shared_atom`.
    fullName: enterShared_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterShared_atom?: (ctx: Shared_atomContext) => void'
      return:
        type: '(ctx: Shared_atomContext) =&gt; void'
        description: ''
  - name: enterShared_literal
    uid: adaptive-expressions.CommonRegexListener.enterShared_literal
    package: adaptive-expressions
    summary: Enter a parse tree produced by `CommonRegexParser.shared_literal`.
    fullName: enterShared_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterShared_literal?: (ctx: Shared_literalContext) => void'
      return:
        type: '(ctx: Shared_literalContext) =&gt; void'
        description: ''
  - name: exitAlpha_nums
    uid: adaptive-expressions.CommonRegexListener.exitAlpha_nums
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.alpha_nums`.
    fullName: exitAlpha_nums
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitAlpha_nums?: (ctx: Alpha_numsContext) => void'
      return:
        type: '(ctx: Alpha_numsContext) =&gt; void'
        description: ''
  - name: exitAlternation
    uid: adaptive-expressions.CommonRegexListener.exitAlternation
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.alternation`.
    fullName: exitAlternation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitAlternation?: (ctx: AlternationContext) => void'
      return:
        type: '(ctx: AlternationContext) =&gt; void'
        description: ''
  - name: exitAtom
    uid: adaptive-expressions.CommonRegexListener.exitAtom
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.atom`.
    fullName: exitAtom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitAtom?: (ctx: AtomContext) => void'
      return:
        type: '(ctx: AtomContext) =&gt; void'
        description: ''
  - name: exitCapture
    uid: adaptive-expressions.CommonRegexListener.exitCapture
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.capture`.
    fullName: exitCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitCapture?: (ctx: CaptureContext) => void'
      return:
        type: '(ctx: CaptureContext) =&gt; void'
        description: ''
  - name: exitCc_atom
    uid: adaptive-expressions.CommonRegexListener.exitCc_atom
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.cc_atom`.
    fullName: exitCc_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitCc_atom?: (ctx: Cc_atomContext) => void'
      return:
        type: '(ctx: Cc_atomContext) =&gt; void'
        description: ''
  - name: exitCc_literal
    uid: adaptive-expressions.CommonRegexListener.exitCc_literal
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.cc_literal`.
    fullName: exitCc_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitCc_literal?: (ctx: Cc_literalContext) => void'
      return:
        type: '(ctx: Cc_literalContext) =&gt; void'
        description: ''
  - name: exitCharacter_class
    uid: adaptive-expressions.CommonRegexListener.exitCharacter_class
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.character_class`.
    fullName: exitCharacter_class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitCharacter_class?: (ctx: Character_classContext) => void'
      return:
        type: '(ctx: Character_classContext) =&gt; void'
        description: ''
  - name: exitDigit
    uid: adaptive-expressions.CommonRegexListener.exitDigit
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.digit`.
    fullName: exitDigit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitDigit?: (ctx: DigitContext) => void'
      return:
        type: '(ctx: DigitContext) =&gt; void'
        description: ''
  - name: exitDigits
    uid: adaptive-expressions.CommonRegexListener.exitDigits
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.digits`.
    fullName: exitDigits
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitDigits?: (ctx: DigitsContext) => void'
      return:
        type: '(ctx: DigitsContext) =&gt; void'
        description: ''
  - name: exitElement
    uid: adaptive-expressions.CommonRegexListener.exitElement
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.element`.
    fullName: exitElement
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitElement?: (ctx: ElementContext) => void'
      return:
        type: '(ctx: ElementContext) =&gt; void'
        description: ''
  - name: exitEveryRule
    uid: adaptive-expressions.CommonRegexListener.exitEveryRule
    package: adaptive-expressions
    summary: ''
    fullName: exitEveryRule
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type: '(ctx: ParserRuleContext) =&gt; void'
        description: ''
  - name: exitExpr
    uid: adaptive-expressions.CommonRegexListener.exitExpr
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.expr`.
    fullName: exitExpr
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitExpr?: (ctx: ExprContext) => void'
      return:
        type: '(ctx: ExprContext) =&gt; void'
        description: ''
  - name: exitLetter
    uid: adaptive-expressions.CommonRegexListener.exitLetter
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.letter`.
    fullName: exitLetter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitLetter?: (ctx: LetterContext) => void'
      return:
        type: '(ctx: LetterContext) =&gt; void'
        description: ''
  - name: exitLiteral
    uid: adaptive-expressions.CommonRegexListener.exitLiteral
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.literal`.
    fullName: exitLiteral
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitLiteral?: (ctx: LiteralContext) => void'
      return:
        type: '(ctx: LiteralContext) =&gt; void'
        description: ''
  - name: exitName
    uid: adaptive-expressions.CommonRegexListener.exitName
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.name`.
    fullName: exitName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitName?: (ctx: NameContext) => void'
      return:
        type: '(ctx: NameContext) =&gt; void'
        description: ''
  - name: exitNon_capture
    uid: adaptive-expressions.CommonRegexListener.exitNon_capture
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.non_capture`.
    fullName: exitNon_capture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitNon_capture?: (ctx: Non_captureContext) => void'
      return:
        type: '(ctx: Non_captureContext) =&gt; void'
        description: ''
  - name: exitNon_close_paren
    uid: adaptive-expressions.CommonRegexListener.exitNon_close_paren
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.non_close_paren`.
    fullName: exitNon_close_paren
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitNon_close_paren?: (ctx: Non_close_parenContext) => void'
      return:
        type: '(ctx: Non_close_parenContext) =&gt; void'
        description: ''
  - name: exitNon_close_parens
    uid: adaptive-expressions.CommonRegexListener.exitNon_close_parens
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.non_close_parens`.
    fullName: exitNon_close_parens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitNon_close_parens?: (ctx: Non_close_parensContext) => void'
      return:
        type: '(ctx: Non_close_parensContext) =&gt; void'
        description: ''
  - name: exitNumber
    uid: adaptive-expressions.CommonRegexListener.exitNumber
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.number`.
    fullName: exitNumber
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitNumber?: (ctx: NumberContext) => void'
      return:
        type: '(ctx: NumberContext) =&gt; void'
        description: ''
  - name: exitOctal_char
    uid: adaptive-expressions.CommonRegexListener.exitOctal_char
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.octal_char`.
    fullName: exitOctal_char
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitOctal_char?: (ctx: Octal_charContext) => void'
      return:
        type: '(ctx: Octal_charContext) =&gt; void'
        description: ''
  - name: exitOctal_digit
    uid: adaptive-expressions.CommonRegexListener.exitOctal_digit
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.octal_digit`.
    fullName: exitOctal_digit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitOctal_digit?: (ctx: Octal_digitContext) => void'
      return:
        type: '(ctx: Octal_digitContext) =&gt; void'
        description: ''
  - name: exitOption
    uid: adaptive-expressions.CommonRegexListener.exitOption
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.option`.
    fullName: exitOption
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitOption?: (ctx: OptionContext) => void'
      return:
        type: '(ctx: OptionContext) =&gt; void'
        description: ''
  - name: exitOption_flag
    uid: adaptive-expressions.CommonRegexListener.exitOption_flag
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.option_flag`.
    fullName: exitOption_flag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitOption_flag?: (ctx: Option_flagContext) => void'
      return:
        type: '(ctx: Option_flagContext) =&gt; void'
        description: ''
  - name: exitParse
    uid: adaptive-expressions.CommonRegexListener.exitParse
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.parse`.
    fullName: exitParse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitParse?: (ctx: ParseContext) => void'
      return:
        type: '(ctx: ParseContext) =&gt; void'
        description: ''
  - name: exitQuantifier
    uid: adaptive-expressions.CommonRegexListener.exitQuantifier
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.quantifier`.
    fullName: exitQuantifier
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitQuantifier?: (ctx: QuantifierContext) => void'
      return:
        type: '(ctx: QuantifierContext) =&gt; void'
        description: ''
  - name: exitQuantifier_type
    uid: adaptive-expressions.CommonRegexListener.exitQuantifier_type
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.quantifier_type`.
    fullName: exitQuantifier_type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitQuantifier_type?: (ctx: Quantifier_typeContext) => void'
      return:
        type: '(ctx: Quantifier_typeContext) =&gt; void'
        description: ''
  - name: exitShared_atom
    uid: adaptive-expressions.CommonRegexListener.exitShared_atom
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.shared_atom`.
    fullName: exitShared_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitShared_atom?: (ctx: Shared_atomContext) => void'
      return:
        type: '(ctx: Shared_atomContext) =&gt; void'
        description: ''
  - name: exitShared_literal
    uid: adaptive-expressions.CommonRegexListener.exitShared_literal
    package: adaptive-expressions
    summary: Exit a parse tree produced by `CommonRegexParser.shared_literal`.
    fullName: exitShared_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitShared_literal?: (ctx: Shared_literalContext) => void'
      return:
        type: '(ctx: Shared_literalContext) =&gt; void'
        description: ''
  - name: visitErrorNode
    uid: adaptive-expressions.CommonRegexListener.visitErrorNode
    package: adaptive-expressions
    summary: ''
    fullName: visitErrorNode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visitErrorNode?: (node: ErrorNode) => void'
      return:
        type: '(node: ErrorNode) =&gt; void'
        description: ''
  - name: visitTerminal
    uid: adaptive-expressions.CommonRegexListener.visitTerminal
    package: adaptive-expressions
    summary: ''
    fullName: visitTerminal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visitTerminal?: (node: TerminalNode) => void'
      return:
        type: '(node: TerminalNode) =&gt; void'
        description: ''
extends: ParseTreeListener
