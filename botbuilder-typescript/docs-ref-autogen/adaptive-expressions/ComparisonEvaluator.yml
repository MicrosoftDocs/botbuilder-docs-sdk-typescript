### YamlMime:TSType
name: ComparisonEvaluator
uid: adaptive-expressions.ComparisonEvaluator
package: adaptive-expressions
summary: >-
  Comparison operators.

  A comparison operator returns false if the comparison is false, or there is an
  error.  This prevents errors from short-circuiting boolean expressions.
fullName: ComparisonEvaluator
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ComparisonEvaluator(string, (arg0: any[]) => boolean,
      ValidateExpressionDelegate, VerifyExpression)
    uid: adaptive-expressions.ComparisonEvaluator.constructor
    package: adaptive-expressions
    summary: >-
      Initializes a new instance of the
      [ComparisonEvaluator](xref:adaptive-expressions.ComparisonEvaluator)
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ComparisonEvaluator(type: string, func: (arg0: any[]) => boolean,
        validator: ValidateExpressionDelegate, verify?: VerifyExpression)
      parameters:
        - id: type
          type: string
          description: Name of the built-in function.
        - id: func
          type: '(arg0: any[]) =&gt; boolean'
          description: >-
            The comparison function, it takes a list of objects and returns a
            boolean.
        - id: validator
          type: <xref uid="adaptive-expressions.ValidateExpressionDelegate" />
          description: >-
            (xref:adaptive-expressions.ValidateExpressionDelegate) for input
            arguments.
        - id: verify
          type: <xref uid="adaptive-expressions.VerifyExpression" />
          description: >
            Optional.
            [VerifyExpression](xref:adaptive-expressions.VerifyExpression)
            function to verify each child's result.
properties:
  - name: negation
    uid: adaptive-expressions.ComparisonEvaluator.negation
    package: adaptive-expressions
    summary: |-
      Gets the evaluator that is a negation of this one.
      Sets the evaluator that is a negation of this one.
    fullName: negation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: ExpressionEvaluator negation
      return:
        description: The evaluator that is a negation of this one.
        type: <xref uid="adaptive-expressions.ExpressionEvaluator" />
inheritedProperties:
  - name: returnType
    uid: adaptive-expressions.ComparisonEvaluator.returnType
    package: adaptive-expressions
    summary: Type expected by evaluating the expression.
    fullName: returnType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'returnType: ReturnType'
      return:
        description: ''
        type: <xref uid="adaptive-expressions.ReturnType" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionEvaluator.returnType](xref:adaptive-expressions.ExpressionEvaluator.returnType)
  - name: type
    uid: adaptive-expressions.ComparisonEvaluator.type
    package: adaptive-expressions
    summary: Gets the expression type for evaluator.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionEvaluator.type](xref:adaptive-expressions.ExpressionEvaluator.type)
inheritedMethods:
  - name: 'tryEvaluate(Expression, MemoryInterface, Options)'
    uid: adaptive-expressions.ComparisonEvaluator.tryEvaluate
    package: adaptive-expressions
    summary: Evaluate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function tryEvaluate(expression: Expression, state: MemoryInterface,
        options: Options): ValueWithError
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to evaluate.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: Global state information.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: Options used in the evaluation.
      return:
        description: The value and error string that is non-null if there is an error.
        type: <xref uid="adaptive-expressions.ValueWithError" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionEvaluator.tryEvaluate](xref:adaptive-expressions.ExpressionEvaluator.tryEvaluate)
  - name: validateExpression(Expression)
    uid: adaptive-expressions.ComparisonEvaluator.validateExpression
    package: adaptive-expressions
    summary: Validate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateExpression(expression: Expression)'
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to validate.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionEvaluator.validateExpression](xref:adaptive-expressions.ExpressionEvaluator.validateExpression)
extends: <xref uid="adaptive-expressions.ExpressionEvaluator" />
