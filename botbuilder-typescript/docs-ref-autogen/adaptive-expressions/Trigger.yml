### YamlMime:TSType
name: Trigger
uid: adaptive-expressions.Trigger
package: adaptive-expressions
summary: >-
  A trigger is a combination of a trigger expression and the corresponding
  action.
fullName: Trigger
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Trigger(TriggerTree, Expression, any, Quantifier[])'
    uid: adaptive-expressions.Trigger.constructor
    package: adaptive-expressions
    summary: Intializes a new instance of the `Trigger` class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new Trigger(tree: TriggerTree, expression?: Expression, action?: any,
        quantifiers: Quantifier[])
      parameters:
        - id: tree
          type: <xref uid="adaptive-expressions.TriggerTree" />
          description: Trigger tree that contains this trigger.
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression for when the trigger action is possible.
        - id: action
          type: any
          description: Action to take when a trigger matches.
        - id: quantifiers
          type: '<xref uid="adaptive-expressions.Quantifier" />[]'
          description: |
            Quantifiers to dynamically expand the expression.
properties:
  - name: action
    uid: adaptive-expressions.Trigger.action
    package: adaptive-expressions
    summary: Action to take when trigger is true.
    fullName: action
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'action: any'
      return:
        description: ''
        type: any
  - name: clauses
    uid: adaptive-expressions.Trigger.clauses
    package: adaptive-expressions
    summary: >-
      Gets list of expressions converted into Disjunctive Normal Form where ! is
      pushed to the leaves and

      there is an implicit || between clauses and && within a clause.
    fullName: clauses
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Clause[] clauses'
      return:
        description: The list of clauses.
        type: '<xref uid="adaptive-expressions.Clause" />[]'
  - name: originalExpression
    uid: adaptive-expressions.Trigger.originalExpression
    package: adaptive-expressions
    summary: Original trigger expression.
    fullName: originalExpression
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'originalExpression: Expression'
      return:
        description: ''
        type: <xref uid="adaptive-expressions.Expression" />
methods:
  - name: 'matches(Clause, MemoryInterface | any)'
    uid: adaptive-expressions.Trigger.matches
    package: adaptive-expressions
    summary: >-
      Determines whether there is a member in the current `Clause` that matches
      the nodeClause parameter.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function matches(nodeClause: Clause, state: MemoryInterface | any):
        boolean
      parameters:
        - id: nodeClause
          type: <xref uid="adaptive-expressions.Clause" />
          description: The other Clause instance to match.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" /> | any
          description: The scope for looking up variables.
      return:
        description: A boolean value inidicating whether there is a member matches.
        type: boolean
  - name: 'relationship(Trigger, PredicateComparers)'
    uid: adaptive-expressions.Trigger.relationship
    package: adaptive-expressions
    summary: >-
      Determines the relationship between current instance and another `Trigger`
      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function relationship(other: Trigger, comparers: PredicateComparers):
        RelationshipType
      parameters:
        - id: other
          type: <xref uid="adaptive-expressions.Trigger" />
          description: The other Trigger instance.
        - id: comparers
          type: <xref uid="adaptive-expressions.PredicateComparers" />
          description: The comparer dictionary.
      return:
        description: A `RelationshipType` value.
        type: <xref uid="adaptive-expressions.RelationshipType" />
  - name: 'toString(string[], number)'
    uid: adaptive-expressions.Trigger.toString
    package: adaptive-expressions
    summary: Gets a string that represents the current trigger.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(builder: string[], indent: number): string'
      parameters:
        - id: builder
          type: 'string[]'
          description: An array of string to build the string of trigger.
        - id: indent
          type: number
          description: An integer represents the number of spaces at the start of a line.
      return:
        description: A string that represents the current trigger.
        type: string
