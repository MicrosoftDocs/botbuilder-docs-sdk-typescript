### YamlMime:TSType
name: BoolExpression
uid: adaptive-expressions.BoolExpression
package: adaptive-expressions
summary: >-
  Represents a property which is either a boolean or a string expression which
  resolves to a boolean.
fullName: BoolExpression
remarks: >-
  String values are always interpreted as an expression, whether it has '='
  prefix or not.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: BoolExpression(boolean | string | Expression)
    uid: adaptive-expressions.BoolExpression.constructor
    package: adaptive-expressions
    summary: >-
      Initializes a new instance of the
      [BoolExpression](xref:adaptive-expressions.BoolExpression) class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BoolExpression(value?: boolean | string | Expression)'
      parameters:
        - id: value
          type: boolean | string | <xref uid="adaptive-expressions.Expression" />
          description: |
            A `boolean` or a `string` expression which resolves to a `boolean`.
properties:
  - name: expressionText
    uid: adaptive-expressions.BoolExpression.expressionText
    package: adaptive-expressions
    summary: Getes or sets the expression text to evaluate to get the value.
    fullName: expressionText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public expressionText: string'
      return:
        description: ''
        type: string
  - name: value
    uid: adaptive-expressions.BoolExpression.value
    package: adaptive-expressions
    summary: Gets or sets the raw value of the expression property.
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public value: boolean'
      return:
        description: ''
        type: boolean
inheritedMethods:
  - name: getValue(object)
    uid: adaptive-expressions.BoolExpression.getValue
    package: adaptive-expressions
    summary: Get the value.
    remarks: An error will be thrown if value is an invalid expression.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getValue(data: object): boolean'
      parameters:
        - id: data
          type: object
          description: Data to use for expression binding.
      return:
        description: The value.
        type: boolean
  - name: toExpression()
    uid: adaptive-expressions.BoolExpression.toExpression
    package: adaptive-expressions
    summary: This will return the existing expression if the value is non-complex type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toExpression(): Expression'
      return:
        description: The existing expression if the value is non-complex type.
        type: <xref uid="adaptive-expressions.Expression" />
  - name: toString()
    uid: adaptive-expressions.BoolExpression.toString
    package: adaptive-expressions
    summary: Convert an expression property to string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: The converted string.
        type: string
  - name: tryGetValue(object)
    uid: adaptive-expressions.BoolExpression.tryGetValue
    package: adaptive-expressions
    summary: Try to Get the value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function tryGetValue(data: object): { error: Error, value: boolean }'
      parameters:
        - id: data
          type: object
          description: Data to use for expression binding.
      return:
        description: the value or an error.
        type: '{ error: Error, value: boolean }'
methods:
  - name: setValue(boolean | string | Expression)
    uid: adaptive-expressions.BoolExpression.setValue
    package: adaptive-expressions
    summary: Set a boolean value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setValue(value: boolean | string | Expression)'
      parameters:
        - id: value
          type: boolean | string | <xref uid="adaptive-expressions.Expression" />
          description: |
            Value to set.
extends: <xref uid="adaptive-expressions.ExpressionProperty" />&lt;boolean&gt;
