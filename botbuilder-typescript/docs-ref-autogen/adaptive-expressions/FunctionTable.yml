### YamlMime:TSType
name: FunctionTable
uid: adaptive-expressions.FunctionTable
package: adaptive-expressions
summary: >-
  FunctionTable is a dictionary which merges BuiltinFunctions.Functions with a
  CustomDictionary.
fullName: FunctionTable
isPreview: false
isDeprecated: false
type: class
properties:
  - name: isReadOnly
    uid: adaptive-expressions.FunctionTable.isReadOnly
    package: adaptive-expressions
    summary: ''
    fullName: isReadOnly
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isReadOnly
      return:
        type: boolean
        description: ''
  - name: size
    uid: adaptive-expressions.FunctionTable.size
    package: adaptive-expressions
    summary: ''
    fullName: size
    isPreview: false
    isDeprecated: false
    syntax:
      content: number size
      return:
        type: number
        description: ''
methods:
  - name: add(Object)
    uid: adaptive-expressions.FunctionTable.add
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add(item: Object)'
      parameters:
        - id: item
          type: Object
          description: ''
  - name: 'add(string, customFunction)'
    uid: adaptive-expressions.FunctionTable.add_2
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add(key: string, value: customFunction)'
      parameters:
        - id: key
          type: string
          description: ''
        - id: value
          type: customFunction
          description: ''
  - name: 'add(string, ExpressionEvaluator)'
    uid: adaptive-expressions.FunctionTable.add_1
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add(key: string, value: ExpressionEvaluator)'
      parameters:
        - id: key
          type: string
          description: ''
        - id: value
          type: <xref uid="adaptive-expressions.ExpressionEvaluator" />
          description: ''
  - name: clear()
    uid: adaptive-expressions.FunctionTable.clear
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function clear()
  - name: delete(string)
    uid: adaptive-expressions.FunctionTable.delete
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(key: string)'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: entries()
    uid: adaptive-expressions.FunctionTable.entries
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function entries()
      return:
        type: IterableIterator&lt;Object&gt;
        description: ''
  - name: >-
      forEach((value: ExpressionEvaluator, key: string, map: Map<string,
      ExpressionEvaluator>) => void, any)
    uid: adaptive-expressions.FunctionTable.forEach
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(_callbackfn: (value: ExpressionEvaluator, key: string,
        map: Map<string, ExpressionEvaluator>) => void, thisArg?: any)
      parameters:
        - id: _callbackfn
          type: >-
            (value: ExpressionEvaluator, key: string, map: Map&lt;string,
            ExpressionEvaluator&gt;) =&gt; void
          description: ''
        - id: thisArg
          type: any
          description: ''
  - name: get(string)
    uid: adaptive-expressions.FunctionTable.get
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(key: string)'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        type: <xref uid="adaptive-expressions.ExpressionEvaluator" />
        description: ''
  - name: has(string)
    uid: adaptive-expressions.FunctionTable.has
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function has(key: string)'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: keys()
    uid: adaptive-expressions.FunctionTable.keys
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function keys()
      return:
        type: IterableIterator&lt;string&gt;
        description: ''
  - name: 'set(string, ExpressionEvaluator)'
    uid: adaptive-expressions.FunctionTable.set
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function set(key: string, value: ExpressionEvaluator)'
      parameters:
        - id: key
          type: string
          description: ''
        - id: value
          type: <xref uid="adaptive-expressions.ExpressionEvaluator" />
          description: ''
      return:
        type: this
        description: ''
  - name: values()
    uid: adaptive-expressions.FunctionTable.values
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function values()
      return:
        type: >-
          IterableIterator&lt;<xref
          uid="adaptive-expressions.ExpressionEvaluator" />&gt;
        description: ''
