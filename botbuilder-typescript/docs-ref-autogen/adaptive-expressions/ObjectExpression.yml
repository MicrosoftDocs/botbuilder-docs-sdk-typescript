### YamlMime:TSType
name: ObjectExpression
uid: adaptive-expressions.ObjectExpression
package: adaptive-expressions
summary: >-
  Represents a property which is either an object of type T or a string
  expression which resolves

  to a object of type T.
fullName: ObjectExpression<T>
remarks: >-
  String values are always interpreted as an expression, whether it has '='
  prefix or not.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ObjectExpression(T | string | Expression)
    uid: adaptive-expressions.ObjectExpression.constructor
    package: adaptive-expressions
    summary: >-
      Initializes a new instance of the
      [ObjectExpression<T>](xref:adaptive-expressions.ObjectExpression) class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ObjectExpression(value?: T | string | Expression)'
      parameters:
        - id: value
          type: T | string | <xref uid="adaptive-expressions.Expression" />
          description: >
            An object of type `T` or a `string` expression which resolves to a
            object of type `T`.
inheritedProperties:
  - name: expressionText
    uid: adaptive-expressions.ObjectExpression.expressionText
    package: adaptive-expressions
    summary: Getes or sets the expression text to evaluate to get the value.
    fullName: expressionText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expressionText: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.expressionText](xref:adaptive-expressions.ExpressionProperty.expressionText)
  - name: value
    uid: adaptive-expressions.ObjectExpression.value
    package: adaptive-expressions
    summary: Gets or sets the raw value of the expression property.
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value: T'
      return:
        description: ''
        type: T
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.value](xref:adaptive-expressions.ExpressionProperty.value)
inheritedMethods:
  - name: getValue(object)
    uid: adaptive-expressions.ObjectExpression.getValue
    package: adaptive-expressions
    summary: Get the value.
    remarks: An error will be thrown if value is an invalid expression.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getValue(data: object): T'
      parameters:
        - id: data
          type: object
          description: Data to use for expression binding.
      return:
        description: The value.
        type: T
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.getValue](xref:adaptive-expressions.ExpressionProperty.getValue)
  - name: setValue(T | string | Expression)
    uid: adaptive-expressions.ObjectExpression.setValue
    package: adaptive-expressions
    summary: Set the value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setValue(value: T | string | Expression)'
      parameters:
        - id: value
          type: T | string | <xref uid="adaptive-expressions.Expression" />
          description: |
            Value to set.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.setValue](xref:adaptive-expressions.ExpressionProperty.setValue)
  - name: toExpression()
    uid: adaptive-expressions.ObjectExpression.toExpression
    package: adaptive-expressions
    summary: This will return the existing expression if the value is non-complex type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toExpression(): Expression'
      return:
        description: The existing expression if the value is non-complex type.
        type: <xref uid="adaptive-expressions.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.toExpression](xref:adaptive-expressions.ExpressionProperty.toExpression)
  - name: toString()
    uid: adaptive-expressions.ObjectExpression.toString
    package: adaptive-expressions
    summary: Convert an expression property to string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: The converted string.
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.toString](xref:adaptive-expressions.ExpressionProperty.toString)
  - name: tryGetValue(object)
    uid: adaptive-expressions.ObjectExpression.tryGetValue
    package: adaptive-expressions
    summary: Try to Get the value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function tryGetValue(data: object): { error: Error, value: T }'
      parameters:
        - id: data
          type: object
          description: Data to use for expression binding.
      return:
        description: the value or an error.
        type: '{ error: Error, value: T }'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ExpressionProperty.tryGetValue](xref:adaptive-expressions.ExpressionProperty.tryGetValue)
extends: <xref uid="adaptive-expressions.ExpressionProperty" />&lt;T&gt;
