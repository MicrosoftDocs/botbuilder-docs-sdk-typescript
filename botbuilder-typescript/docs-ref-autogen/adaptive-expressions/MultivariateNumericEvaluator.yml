### YamlMime:TSType
name: MultivariateNumericEvaluator
uid: adaptive-expressions.MultivariateNumericEvaluator
package: adaptive-expressions
summary: Numeric operators that can have 2 or more args.
fullName: MultivariateNumericEvaluator
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      MultivariateNumericEvaluator(string, (args: any[]) => number,
      VerifyExpression)
    uid: adaptive-expressions.MultivariateNumericEvaluator.constructor
    package: adaptive-expressions
    summary: >-
      Initializes a new instance of the
      [MultivariateNumericEvaluator](xref:adaptive-expressions.MultivariateNumericEvaluator)
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new MultivariateNumericEvaluator(type: string, func: (args: any[]) =>
        number, verify?: VerifyExpression)
      parameters:
        - id: type
          type: string
          description: Name of the built-in function.
        - id: func
          type: '(args: any[]) =&gt; number'
          description: >-
            The evaluation function, it takes a list of objects and returns a
            number.
        - id: verify
          type: <xref uid="adaptive-expressions.VerifyExpression" />
          description: >
            Optional.
            [VerifyExpression](xref:adaptive-expressions.VerifyExpression)
            function to verify each child's result.
properties:
  - name: negation
    uid: adaptive-expressions.MultivariateNumericEvaluator.negation
    package: adaptive-expressions
    summary: |-
      Gets the evaluator that is a negation of this one.
      Sets the evaluator that is a negation of this one.
    fullName: negation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: ExpressionEvaluator negation
      return:
        description: The evaluator that is a negation of this one.
        type: <xref uid="adaptive-expressions.ExpressionEvaluator" />
  - name: returnType
    uid: adaptive-expressions.MultivariateNumericEvaluator.returnType
    package: adaptive-expressions
    summary: Type expected by evaluating the expression.
    fullName: returnType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public returnType: ReturnType'
      return:
        description: ''
        type: <xref uid="adaptive-expressions.ReturnType" />
  - name: type
    uid: adaptive-expressions.MultivariateNumericEvaluator.type
    package: adaptive-expressions
    summary: Gets the expression type for evaluator.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public type: string'
      return:
        description: ''
        type: string
inheritedMethods:
  - name: 'tryEvaluate(Expression, MemoryInterface, Options)'
    uid: adaptive-expressions.MultivariateNumericEvaluator.tryEvaluate
    package: adaptive-expressions
    summary: Evaluate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function tryEvaluate(expression: Expression, state: MemoryInterface,
        options: Options): ValueWithError
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to evaluate.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: Global state information.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: Options used in the evaluation.
      return:
        description: The value and error string that is non-null if there is an error.
        type: <xref uid="adaptive-expressions.ValueWithError" />
  - name: validateExpression(Expression)
    uid: adaptive-expressions.MultivariateNumericEvaluator.validateExpression
    package: adaptive-expressions
    summary: Validate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateExpression(expression: Expression)'
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to validate.
extends: <xref uid="adaptive-expressions.ExpressionEvaluator" />
