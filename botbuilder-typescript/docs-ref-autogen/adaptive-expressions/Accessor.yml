### YamlMime:TSType
name: Accessor
uid: adaptive-expressions.Accessor
package: adaptive-expressions
summary: Used to access the variable value corresponding to the path.
fullName: Accessor
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Accessor()
    uid: adaptive-expressions.Accessor.constructor
    package: adaptive-expressions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new Accessor()
properties:
  - name: returnType
    uid: adaptive-expressions.Accessor.returnType
    package: adaptive-expressions
    summary: Type expected by evaluating the expression.
    fullName: returnType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public returnType: ReturnType'
      return:
        type: <xref uid="adaptive-expressions.ReturnType" />
        description: ''
  - name: type
    uid: adaptive-expressions.Accessor.type
    package: adaptive-expressions
    summary: Gets the expression type for evaluator.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public type: string'
      return:
        type: string
        description: ''
methods:
  - name: 'tryEvaluate(Expression, MemoryInterface, Options)'
    uid: adaptive-expressions.Accessor.tryEvaluate
    package: adaptive-expressions
    summary: Evaluate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function tryEvaluate(expression: Expression, state: MemoryInterface,
        options: Options)
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to evaluate.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: |
            Global state information.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: ''
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: ''
  - name: validateExpression(Expression)
    uid: adaptive-expressions.Accessor.validateExpression
    package: adaptive-expressions
    summary: Validate an expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateExpression(expression: Expression)'
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: |
            Expression to validate.
extends: <xref uid="adaptive-expressions.ExpressionEvaluator" />
