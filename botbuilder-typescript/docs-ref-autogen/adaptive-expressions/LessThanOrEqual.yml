### YamlMime:TSType
name: LessThanOrEqual
uid: adaptive-expressions.LessThanOrEqual
package: adaptive-expressions
summary: >-
  Check whether the first value is less than or equal to the second value.

  Return true if the first value is less than or equal, or return false if the
  first value is more.
fullName: LessThanOrEqual
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: LessThanOrEqual()
    uid: adaptive-expressions.LessThanOrEqual.constructor
    package: adaptive-expressions
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new LessThanOrEqual()
properties:
  - name: returnType
    uid: adaptive-expressions.LessThanOrEqual.returnType
    package: adaptive-expressions
    summary: Type expected by evaluating the expression.
    fullName: returnType
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public returnType: ReturnType'
      return:
        type: <xref uid="adaptive-expressions.ReturnType" />
        description: ''
  - name: type
    uid: adaptive-expressions.LessThanOrEqual.type
    package: adaptive-expressions
    summary: Gets the expression type for evaluator.
    fullName: type
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public type: string'
      return:
        type: string
        description: ''
methods:
  - name: 'tryEvaluate(Expression, MemoryInterface, Options)'
    uid: adaptive-expressions.LessThanOrEqual.tryEvaluate
    package: adaptive-expressions
    summary: Evaluate an expression.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function tryEvaluate(expression: Expression, state: MemoryInterface,
        options: Options)
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression to evaluate.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: |
            Global state information.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: ''
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: ''
  - name: validateExpression(Expression)
    uid: adaptive-expressions.LessThanOrEqual.validateExpression
    package: adaptive-expressions
    summary: Validate an expression.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateExpression(expression: Expression)'
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: |
            Expression to validate.
extends: <xref uid="adaptive-expressions.ComparisonEvaluator" />
