### YamlMime:TSType
name: Extensions
uid: adaptive-expressions.Extensions
package: adaptive-expressions
summary: Some util and extension functions
fullName: Extensions
remarks: ''
isDeprecated: false
type: class
methods:
  - name: isMemoryInterface(any)
    uid: adaptive-expressions.Extensions.isMemoryInterface
    package: adaptive-expressions
    summary: >-
      Patch method

      TODO: is there any better solution?

      To judge if an object is implements MemoryInterface. Same with 'is
      MemoryInterface' in C#
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function isMemoryInterface(obj: any): boolean'
      parameters:
        - id: obj
          type: any
          description: The object to evaluate.
      return:
        description: True if the object implements MemoryInterface; False if it isn't.
        type: boolean
  - name: randomNext(MemoryInterface, number, number)
    uid: adaptive-expressions.Extensions.randomNext
    package: adaptive-expressions
    summary: >-
      Generator random seed and value from properties.

      If value is not null, the mock random value result would be: min + (value
      % (max - min)).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function randomNext(memory: MemoryInterface, min: number, max:
        number): number
      parameters:
        - id: memory
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: memory state.
        - id: min
          type: number
          description: The inclusive lower bound of the random number returned.
        - id: max
          type: number
          description: >-
            The exclusive upper bound of the random number returned. max must be
            greater than or equal to min.
      return:
        description: Random value.
        type: number
