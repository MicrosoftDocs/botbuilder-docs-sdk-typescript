### YamlMime:TSType
name: UserTokenBasicMockConfiguration
uid: botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration
package: botbuilder-dialogs-adaptive-testing
summary: ''
fullName: UserTokenBasicMockConfiguration
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: channelId
    uid: >-
      botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration.channelId
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    fullName: channelId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'channelId?: string'
      return:
        description: ''
        type: string
  - name: connectionName
    uid: >-
      botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration.connectionName
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    fullName: connectionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectionName?: string'
      return:
        description: ''
        type: string
  - name: magicCode
    uid: >-
      botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration.magicCode
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    fullName: magicCode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'magicCode?: string'
      return:
        description: ''
        type: string
  - name: token
    uid: botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration.token
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    fullName: token
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'token?: string'
      return:
        description: ''
        type: string
  - name: userId
    uid: botbuilder-dialogs-adaptive-testing.UserTokenBasicMockConfiguration.userId
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    fullName: userId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userId?: string'
      return:
        description: ''
        type: string
