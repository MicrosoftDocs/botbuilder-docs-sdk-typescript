### YamlMime:TSType
name: MockLuisRecognizer
uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer
package: botbuilder-dialogs-adaptive-testing
summary: Test class for creating cached LUIS responses for testing.
fullName: MockLuisRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'MockLuisRecognizer(LuisAdaptiveRecognizer, string, string)'
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.constructor
    package: botbuilder-dialogs-adaptive-testing
    summary: Initializes a new instance of the MockLuisRecognizer class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new MockLuisRecognizer(recognizer: LuisAdaptiveRecognizer, resourceDir:
        string, name: string)
      parameters:
        - id: recognizer
          type: LuisAdaptiveRecognizer
          description: LUIS recognizer definition.
        - id: resourceDir
          type: string
          description: Where the settings file generated by lubuild is found.
        - id: name
          type: string
          description: |
            Name of the LUIS model
inheritedProperties:
  - name: id
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.id
    package: botbuilder-dialogs-adaptive-testing
    summary: Recognizers unique ID.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Recognizer.id
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.telemetryClient
    package: botbuilder-dialogs-adaptive-testing
    summary: |-
      The telemetry client for logging events.
      Default this to the NullTelemetryClient, which does nothing.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        description: ''
        type: BotTelemetryClient
    inheritanceDescription: <b>Inherited From</b> Recognizer.telemetryClient
inheritedMethods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.configure
    package: botbuilder-dialogs-adaptive-testing
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: <b>Inherited From</b> Configurable.configure
  - name: getConverter(string)
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.getConverter
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(_property: string): Converter | ConverterFactory'
      parameters:
        - id: _property
          type: string
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: Converter | ConverterFactory
    inheritanceDescription: <b>Inherited From</b> Configurable.getConverter
methods:
  - name: >-
      recognize(DialogContext, Activity, Record<string, string>, Record<string,
      number>)
    uid: botbuilder-dialogs-adaptive-testing.MockLuisRecognizer.recognize
    package: botbuilder-dialogs-adaptive-testing
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(dialogContext: DialogContext, activity: Activity,
        telemetryProperties?: Record<string, string>, telemetryMetrics?:
        Record<string, number>): Promise<RecognizerResult>
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Dialog context.
        - id: activity
          type: Activity
          description: Activity to recognize.
        - id: telemetryProperties
          type: 'Record&lt;string, string&gt;'
          description: >-
            Additional properties to be logged to telemetry with the LuisResult
            event.
        - id: telemetryMetrics
          type: 'Record&lt;string, number&gt;'
          description: >-
            Additional metrics to be logged to telemetry with the LuisResult
            event.
      return:
        description: Analysis of utterance.
        type: Promise&lt;RecognizerResult&gt;
extends: Recognizer
