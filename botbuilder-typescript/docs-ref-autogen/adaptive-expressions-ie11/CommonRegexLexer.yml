### YamlMime:TSType
name: CommonRegexLexer
uid: adaptive-expressions-ie11.CommonRegexLexer
package: adaptive-expressions-ie11
summary: ''
fullName: CommonRegexLexer
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CommonRegexLexer(CharStream)
    uid: adaptive-expressions-ie11.CommonRegexLexer.constructor
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new CommonRegexLexer(input: CharStream)'
      parameters:
        - id: input
          type: CharStream
          description: ''
properties:
  - name: ALC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ALC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ALC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ALC: 44 = 44'
      return:
        description: ''
        type: '44'
  - name: Ampersand
    uid: adaptive-expressions-ie11.CommonRegexLexer.Ampersand
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Ampersand
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Ampersand: 43 = 43'
      return:
        description: ''
        type: '43'
  - name: AUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.AUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: AUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static AUC: 70 = 70'
      return:
        description: ''
        type: '70'
  - name: Backslash
    uid: adaptive-expressions-ie11.CommonRegexLexer.Backslash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Backslash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Backslash: 10 = 10'
      return:
        description: ''
        type: '10'
  - name: BellChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.BellChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BellChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BellChar: 3 = 3'
      return:
        description: ''
        type: '3'
  - name: BLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.BLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BLC: 45 = 45'
      return:
        description: ''
        type: '45'
  - name: BlockQuoted
    uid: adaptive-expressions-ie11.CommonRegexLexer.BlockQuoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BlockQuoted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BlockQuoted: 2 = 2'
      return:
        description: ''
        type: '2'
  - name: BUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.BUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BUC: 71 = 71'
      return:
        description: ''
        type: '71'
  - name: Caret
    uid: adaptive-expressions-ie11.CommonRegexLexer.Caret
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Caret
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Caret: 23 = 23'
      return:
        description: ''
        type: '23'
  - name: CarriageReturn
    uid: adaptive-expressions-ie11.CommonRegexLexer.CarriageReturn
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CarriageReturn
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CarriageReturn: 8 = 8'
      return:
        description: ''
        type: '8'
  - name: channelNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.channelNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: channelNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'channelNames: string[]'
      return:
        description: ''
        type: string[]
  - name: channelNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.channelNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: channelNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static channelNames: string[]'
      return:
        description: ''
        type: string[]
  - name: CharacterClassEnd
    uid: adaptive-expressions-ie11.CommonRegexLexer.CharacterClassEnd
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharacterClassEnd: 22 = 22'
      return:
        description: ''
        type: '22'
  - name: CharacterClassStart
    uid: adaptive-expressions-ie11.CommonRegexLexer.CharacterClassStart
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharacterClassStart: 21 = 21'
      return:
        description: ''
        type: '21'
  - name: CharWithoutProperty
    uid: adaptive-expressions-ie11.CommonRegexLexer.CharWithoutProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithoutProperty
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharWithoutProperty: 16 = 16'
      return:
        description: ''
        type: '16'
  - name: CharWithProperty
    uid: adaptive-expressions-ie11.CommonRegexLexer.CharWithProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithProperty
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharWithProperty: 15 = 15'
      return:
        description: ''
        type: '15'
  - name: CLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.CLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CLC: 46 = 46'
      return:
        description: ''
        type: '46'
  - name: CloseBrace
    uid: adaptive-expressions-ie11.CommonRegexLexer.CloseBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseBrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CloseBrace: 29 = 29'
      return:
        description: ''
        type: '29'
  - name: CloseParen
    uid: adaptive-expressions-ie11.CommonRegexLexer.CloseParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseParen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CloseParen: 34 = 34'
      return:
        description: ''
        type: '34'
  - name: Colon
    uid: adaptive-expressions-ie11.CommonRegexLexer.Colon
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Colon
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Colon: 39 = 39'
      return:
        description: ''
        type: '39'
  - name: Comma
    uid: adaptive-expressions-ie11.CommonRegexLexer.Comma
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Comma
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Comma: 30 = 30'
      return:
        description: ''
        type: '30'
  - name: ControlChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.ControlChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ControlChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ControlChar: 4 = 4'
      return:
        description: ''
        type: '4'
  - name: CUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.CUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CUC: 72 = 72'
      return:
        description: ''
        type: '72'
  - name: D0
    uid: adaptive-expressions-ie11.CommonRegexLexer.D0
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D0
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D0: 105 = 105'
      return:
        description: ''
        type: '105'
  - name: D1
    uid: adaptive-expressions-ie11.CommonRegexLexer.D1
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D1
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D1: 96 = 96'
      return:
        description: ''
        type: '96'
  - name: D2
    uid: adaptive-expressions-ie11.CommonRegexLexer.D2
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D2
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D2: 97 = 97'
      return:
        description: ''
        type: '97'
  - name: D3
    uid: adaptive-expressions-ie11.CommonRegexLexer.D3
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D3
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D3: 98 = 98'
      return:
        description: ''
        type: '98'
  - name: D4
    uid: adaptive-expressions-ie11.CommonRegexLexer.D4
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D4
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D4: 99 = 99'
      return:
        description: ''
        type: '99'
  - name: D5
    uid: adaptive-expressions-ie11.CommonRegexLexer.D5
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D5
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D5: 100 = 100'
      return:
        description: ''
        type: '100'
  - name: D6
    uid: adaptive-expressions-ie11.CommonRegexLexer.D6
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D6
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D6: 101 = 101'
      return:
        description: ''
        type: '101'
  - name: D7
    uid: adaptive-expressions-ie11.CommonRegexLexer.D7
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D7
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D7: 102 = 102'
      return:
        description: ''
        type: '102'
  - name: D8
    uid: adaptive-expressions-ie11.CommonRegexLexer.D8
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D8
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D8: 103 = 103'
      return:
        description: ''
        type: '103'
  - name: D9
    uid: adaptive-expressions-ie11.CommonRegexLexer.D9
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D9
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D9: 104 = 104'
      return:
        description: ''
        type: '104'
  - name: DecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexLexer.DecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DecimalDigit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DecimalDigit: 13 = 13'
      return:
        description: ''
        type: '13'
  - name: DLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.DLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DLC: 47 = 47'
      return:
        description: ''
        type: '47'
  - name: Dot
    uid: adaptive-expressions-ie11.CommonRegexLexer.Dot
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Dot
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Dot: 12 = 12'
      return:
        description: ''
        type: '12'
  - name: DUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.DUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DUC: 73 = 73'
      return:
        description: ''
        type: '73'
  - name: ELC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ELC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ELC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ELC: 48 = 48'
      return:
        description: ''
        type: '48'
  - name: EndOfSubject
    uid: adaptive-expressions-ie11.CommonRegexLexer.EndOfSubject
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EndOfSubject
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EndOfSubject: 31 = 31'
      return:
        description: ''
        type: '31'
  - name: Equals
    uid: adaptive-expressions-ie11.CommonRegexLexer.Equals
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Equals
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Equals: 41 = 41'
      return:
        description: ''
        type: '41'
  - name: EscapeChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.EscapeChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EscapeChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EscapeChar: 5 = 5'
      return:
        description: ''
        type: '5'
  - name: EUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.EUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EUC: 74 = 74'
      return:
        description: ''
        type: '74'
  - name: Exclamation
    uid: adaptive-expressions-ie11.CommonRegexLexer.Exclamation
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Exclamation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Exclamation: 42 = 42'
      return:
        description: ''
        type: '42'
  - name: FLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.FLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FLC: 49 = 49'
      return:
        description: ''
        type: '49'
  - name: FormFeed
    uid: adaptive-expressions-ie11.CommonRegexLexer.FormFeed
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FormFeed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FormFeed: 6 = 6'
      return:
        description: ''
        type: '6'
  - name: FUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.FUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FUC: 75 = 75'
      return:
        description: ''
        type: '75'
  - name: GLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.GLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GLC: 50 = 50'
      return:
        description: ''
        type: '50'
  - name: grammarFileName
    uid: adaptive-expressions-ie11.CommonRegexLexer.grammarFileName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: grammarFileName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'grammarFileName: string'
      return:
        description: ''
        type: string
  - name: GreaterThan
    uid: adaptive-expressions-ie11.CommonRegexLexer.GreaterThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GreaterThan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GreaterThan: 36 = 36'
      return:
        description: ''
        type: '36'
  - name: GUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.GUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GUC: 76 = 76'
      return:
        description: ''
        type: '76'
  - name: Hash
    uid: adaptive-expressions-ie11.CommonRegexLexer.Hash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Hash: 40 = 40'
      return:
        description: ''
        type: '40'
  - name: HexChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.HexChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HexChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HexChar: 11 = 11'
      return:
        description: ''
        type: '11'
  - name: HLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.HLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HLC: 51 = 51'
      return:
        description: ''
        type: '51'
  - name: HUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.HUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HUC: 77 = 77'
      return:
        description: ''
        type: '77'
  - name: Hyphen
    uid: adaptive-expressions-ie11.CommonRegexLexer.Hyphen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hyphen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Hyphen: 24 = 24'
      return:
        description: ''
        type: '24'
  - name: ILC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ILC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ILC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ILC: 52 = 52'
      return:
        description: ''
        type: '52'
  - name: IUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.IUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: IUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static IUC: 78 = 78'
      return:
        description: ''
        type: '78'
  - name: JLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.JLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static JLC: 53 = 53'
      return:
        description: ''
        type: '53'
  - name: JUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.JUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static JUC: 79 = 79'
      return:
        description: ''
        type: '79'
  - name: KLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.KLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static KLC: 54 = 54'
      return:
        description: ''
        type: '54'
  - name: KUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.KUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static KUC: 80 = 80'
      return:
        description: ''
        type: '80'
  - name: LessThan
    uid: adaptive-expressions-ie11.CommonRegexLexer.LessThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LessThan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LessThan: 35 = 35'
      return:
        description: ''
        type: '35'
  - name: LLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.LLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LLC: 55 = 55'
      return:
        description: ''
        type: '55'
  - name: LUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.LUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LUC: 81 = 81'
      return:
        description: ''
        type: '81'
  - name: MLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.MLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MLC: 56 = 56'
      return:
        description: ''
        type: '56'
  - name: modeNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.modeNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: modeNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'modeNames: string[]'
      return:
        description: ''
        type: string[]
  - name: modeNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.modeNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: modeNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static modeNames: string[]'
      return:
        description: ''
        type: string[]
  - name: MUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.MUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MUC: 82 = 82'
      return:
        description: ''
        type: '82'
  - name: NewLine
    uid: adaptive-expressions-ie11.CommonRegexLexer.NewLine
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NewLine
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NewLine: 7 = 7'
      return:
        description: ''
        type: '7'
  - name: NLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.NLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NLC: 57 = 57'
      return:
        description: ''
        type: '57'
  - name: NotDecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexLexer.NotDecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotDecimalDigit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotDecimalDigit: 14 = 14'
      return:
        description: ''
        type: '14'
  - name: NotWhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexLexer.NotWhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWhiteSpace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotWhiteSpace: 18 = 18'
      return:
        description: ''
        type: '18'
  - name: NotWordChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.NotWordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWordChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotWordChar: 20 = 20'
      return:
        description: ''
        type: '20'
  - name: NUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.NUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NUC: 83 = 83'
      return:
        description: ''
        type: '83'
  - name: OLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.OLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OLC: 58 = 58'
      return:
        description: ''
        type: '58'
  - name: OpenBrace
    uid: adaptive-expressions-ie11.CommonRegexLexer.OpenBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenBrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OpenBrace: 28 = 28'
      return:
        description: ''
        type: '28'
  - name: OpenParen
    uid: adaptive-expressions-ie11.CommonRegexLexer.OpenParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenParen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OpenParen: 33 = 33'
      return:
        description: ''
        type: '33'
  - name: OtherChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.OtherChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OtherChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OtherChar: 106 = 106'
      return:
        description: ''
        type: '106'
  - name: OUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.OUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OUC: 84 = 84'
      return:
        description: ''
        type: '84'
  - name: Pipe
    uid: adaptive-expressions-ie11.CommonRegexLexer.Pipe
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Pipe
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Pipe: 32 = 32'
      return:
        description: ''
        type: '32'
  - name: PLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.PLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static PLC: 59 = 59'
      return:
        description: ''
        type: '59'
  - name: Plus
    uid: adaptive-expressions-ie11.CommonRegexLexer.Plus
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Plus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Plus: 26 = 26'
      return:
        description: ''
        type: '26'
  - name: PUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.PUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static PUC: 85 = 85'
      return:
        description: ''
        type: '85'
  - name: QLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.QLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QLC: 60 = 60'
      return:
        description: ''
        type: '60'
  - name: QUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.QUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QUC: 86 = 86'
      return:
        description: ''
        type: '86'
  - name: QuestionMark
    uid: adaptive-expressions-ie11.CommonRegexLexer.QuestionMark
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QuestionMark
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QuestionMark: 25 = 25'
      return:
        description: ''
        type: '25'
  - name: Quoted
    uid: adaptive-expressions-ie11.CommonRegexLexer.Quoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Quoted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Quoted: 1 = 1'
      return:
        description: ''
        type: '1'
  - name: RLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.RLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RLC: 61 = 61'
      return:
        description: ''
        type: '61'
  - name: RUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.RUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RUC: 87 = 87'
      return:
        description: ''
        type: '87'
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ruleNames: string[]'
      return:
        description: ''
        type: string[]
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexLexer.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ruleNames: string[]'
      return:
        description: ''
        type: string[]
  - name: serializedATN
    uid: adaptive-expressions-ie11.CommonRegexLexer.serializedATN
    package: adaptive-expressions-ie11
    summary: ''
    fullName: serializedATN
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'serializedATN: string'
      return:
        description: ''
        type: string
  - name: SingleQuote
    uid: adaptive-expressions-ie11.CommonRegexLexer.SingleQuote
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SingleQuote
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SingleQuote: 37 = 37'
      return:
        description: ''
        type: '37'
  - name: SLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.SLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SLC: 62 = 62'
      return:
        description: ''
        type: '62'
  - name: Star
    uid: adaptive-expressions-ie11.CommonRegexLexer.Star
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Star
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Star: 27 = 27'
      return:
        description: ''
        type: '27'
  - name: SUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.SUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SUC: 88 = 88'
      return:
        description: ''
        type: '88'
  - name: Tab
    uid: adaptive-expressions-ie11.CommonRegexLexer.Tab
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Tab
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Tab: 9 = 9'
      return:
        description: ''
        type: '9'
  - name: TLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.TLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static TLC: 63 = 63'
      return:
        description: ''
        type: '63'
  - name: TUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.TUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static TUC: 89 = 89'
      return:
        description: ''
        type: '89'
  - name: ULC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ULC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ULC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ULC: 64 = 64'
      return:
        description: ''
        type: '64'
  - name: Underscore
    uid: adaptive-expressions-ie11.CommonRegexLexer.Underscore
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Underscore
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Underscore: 38 = 38'
      return:
        description: ''
        type: '38'
  - name: UUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.UUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: UUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static UUC: 90 = 90'
      return:
        description: ''
        type: '90'
  - name: VLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.VLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VLC: 65 = 65'
      return:
        description: ''
        type: '65'
  - name: vocabulary
    uid: adaptive-expressions-ie11.CommonRegexLexer.vocabulary
    package: adaptive-expressions-ie11
    summary: ''
    fullName: vocabulary
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vocabulary: Vocabulary'
      return:
        description: ''
        type: Vocabulary
  - name: VOCABULARY
    uid: adaptive-expressions-ie11.CommonRegexLexer.VOCABULARY
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VOCABULARY
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VOCABULARY: Vocabulary'
      return:
        description: ''
        type: Vocabulary
  - name: VUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.VUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VUC: 91 = 91'
      return:
        description: ''
        type: '91'
  - name: WhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexLexer.WhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WhiteSpace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WhiteSpace: 17 = 17'
      return:
        description: ''
        type: '17'
  - name: WLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.WLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WLC: 66 = 66'
      return:
        description: ''
        type: '66'
  - name: WordChar
    uid: adaptive-expressions-ie11.CommonRegexLexer.WordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WordChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WordChar: 19 = 19'
      return:
        description: ''
        type: '19'
  - name: WUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.WUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WUC: 92 = 92'
      return:
        description: ''
        type: '92'
  - name: XLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.XLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static XLC: 67 = 67'
      return:
        description: ''
        type: '67'
  - name: XUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.XUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static XUC: 93 = 93'
      return:
        description: ''
        type: '93'
  - name: YLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.YLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static YLC: 68 = 68'
      return:
        description: ''
        type: '68'
  - name: YUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.YUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static YUC: 94 = 94'
      return:
        description: ''
        type: '94'
  - name: ZLC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ZLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ZLC: 69 = 69'
      return:
        description: ''
        type: '69'
  - name: ZUC
    uid: adaptive-expressions-ie11.CommonRegexLexer.ZUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ZUC: 95 = 95'
      return:
        description: ''
        type: '95'
inheritedProperties:
  - name: atn
    uid: adaptive-expressions-ie11.CommonRegexLexer.atn
    package: adaptive-expressions-ie11
    summary: >-
      Get the <xref:adaptive-expressions-ie11.CommonRegexLexer.serializedATN>
      used by the recognizer for prediction.
    fullName: atn
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'atn: ATN'
      return:
        description: >-
          The <xref:adaptive-expressions-ie11.CommonRegexLexer.serializedATN>
          used by the recognizer for prediction.
        type: ATN
    inheritanceDescription: <b>Inherited From</b> Lexer.atn
  - name: channel
    uid: adaptive-expressions-ie11.CommonRegexLexer.channel
    package: adaptive-expressions-ie11
    summary: ''
    fullName: channel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'channel: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.channel
  - name: charIndex
    uid: adaptive-expressions-ie11.CommonRegexLexer.charIndex
    package: adaptive-expressions-ie11
    summary: What is the index of the current character of lookahead?
    fullName: charIndex
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'charIndex: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.charIndex
  - name: charPositionInLine
    uid: adaptive-expressions-ie11.CommonRegexLexer.charPositionInLine
    package: adaptive-expressions-ie11
    summary: ''
    fullName: charPositionInLine
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'charPositionInLine: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.charPositionInLine
  - name: DEFAULT_MODE
    uid: adaptive-expressions-ie11.CommonRegexLexer.DEFAULT_MODE
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DEFAULT_MODE
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DEFAULT_MODE: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.DEFAULT_MODE
  - name: DEFAULT_TOKEN_CHANNEL
    uid: adaptive-expressions-ie11.CommonRegexLexer.DEFAULT_TOKEN_CHANNEL
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DEFAULT_TOKEN_CHANNEL
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DEFAULT_TOKEN_CHANNEL: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.DEFAULT_TOKEN_CHANNEL
  - name: EOF
    uid: adaptive-expressions-ie11.CommonRegexLexer.EOF
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EOF
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EOF: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.EOF
  - name: HIDDEN
    uid: adaptive-expressions-ie11.CommonRegexLexer.HIDDEN
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HIDDEN
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HIDDEN: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.HIDDEN
  - name: inputStream
    uid: adaptive-expressions-ie11.CommonRegexLexer.inputStream
    package: adaptive-expressions-ie11
    summary: Set the char stream and reset the lexer
    fullName: inputStream
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'inputStream: CharStream'
      return:
        description: ''
        type: CharStream
    inheritanceDescription: <b>Inherited From</b> Lexer.inputStream
  - name: interpreter
    uid: adaptive-expressions-ie11.CommonRegexLexer.interpreter
    package: adaptive-expressions-ie11
    summary: Set the ATN interpreter used by the recognizer for prediction.
    fullName: interpreter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'interpreter: LexerATNSimulator'
      return:
        description: ''
        type: LexerATNSimulator
    inheritanceDescription: <b>Inherited From</b> Lexer.interpreter
  - name: line
    uid: adaptive-expressions-ie11.CommonRegexLexer.line
    package: adaptive-expressions-ie11
    summary: ''
    fullName: line
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'line: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.line
  - name: MAX_CHAR_VALUE
    uid: adaptive-expressions-ie11.CommonRegexLexer.MAX_CHAR_VALUE
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MAX_CHAR_VALUE
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MAX_CHAR_VALUE: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.MAX_CHAR_VALUE
  - name: MIN_CHAR_VALUE
    uid: adaptive-expressions-ie11.CommonRegexLexer.MIN_CHAR_VALUE
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MIN_CHAR_VALUE
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MIN_CHAR_VALUE: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.MIN_CHAR_VALUE
  - name: MORE
    uid: adaptive-expressions-ie11.CommonRegexLexer.MORE
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MORE
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MORE: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.MORE
  - name: parseInfo
    uid: adaptive-expressions-ie11.CommonRegexLexer.parseInfo
    package: adaptive-expressions-ie11
    summary: |-
      If profiling during the parse/lex, this will return DecisionInfo records
       for each decision in recognizer in a ParseInfo object.
    fullName: parseInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'parseInfo: Promise<undefined | ParseInfo>'
      return:
        description: ''
        type: Promise&lt;undefined | ParseInfo&gt;
    inheritanceDescription: <b>Inherited From</b> Lexer.parseInfo
  - name: SKIP
    uid: adaptive-expressions-ie11.CommonRegexLexer.SKIP
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SKIP
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SKIP: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.SKIP
  - name: sourceName
    uid: adaptive-expressions-ie11.CommonRegexLexer.sourceName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: sourceName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sourceName: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Lexer.sourceName
  - name: state
    uid: adaptive-expressions-ie11.CommonRegexLexer.state
    package: adaptive-expressions-ie11
    summary: |-
      Indicate that the recognizer has changed internal state that is
       consistent with the ATN state passed in.  This way we always know
       where we are in the ATN as the parser goes along. The rule
       context objects form a stack that lets us see the stack of
       invoking rules. Combine this and we have complete ATN
       configuration information.
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.state
  - name: text
    uid: adaptive-expressions-ie11.CommonRegexLexer.text
    package: adaptive-expressions-ie11
    summary: |-
      Set the complete text of this token; it wipes any previous
       changes to the text.
    fullName: text
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'text: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Lexer.text
  - name: token
    uid: adaptive-expressions-ie11.CommonRegexLexer.token
    package: adaptive-expressions-ie11
    summary: Override if emitting multiple tokens.
    fullName: token
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'token: undefined | Token'
      return:
        description: ''
        type: undefined | Token
    inheritanceDescription: <b>Inherited From</b> Lexer.token
  - name: tokenFactory
    uid: adaptive-expressions-ie11.CommonRegexLexer.tokenFactory
    package: adaptive-expressions-ie11
    summary: ''
    fullName: tokenFactory
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tokenFactory: TokenFactory'
      return:
        description: ''
        type: TokenFactory
    inheritanceDescription: <b>Inherited From</b> Lexer.tokenFactory
  - name: type
    uid: adaptive-expressions-ie11.CommonRegexLexer.type
    package: adaptive-expressions-ie11
    summary: ''
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.type
inheritedMethods:
  - name: action(undefined | RuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.action
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function action(_localctx: undefined | RuleContext, ruleIndex: number,
        actionIndex: number)
      parameters:
        - id: _localctx
          type: undefined | RuleContext
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.action
  - name: addErrorListener(ANTLRErrorListener<number>)
    uid: adaptive-expressions-ie11.CommonRegexLexer.addErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function addErrorListener(listener: ANTLRErrorListener<number>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;number&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.addErrorListener
  - name: emit()
    uid: adaptive-expressions-ie11.CommonRegexLexer.emit_1
    package: adaptive-expressions-ie11
    summary: |-
      By default does not support multiple emits per nextToken invocation
       for efficiency reasons.  Subclass and override this method, nextToken,
       and getToken (to push tokens into a list and pull from that list
       rather than a single variable as this implementation does).
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function emit(): Token'
      return:
        description: ''
        type: Token
    inheritanceDescription: <b>Inherited From</b> Lexer.emit
  - name: emit(Token)
    uid: adaptive-expressions-ie11.CommonRegexLexer.emit
    package: adaptive-expressions-ie11
    summary: |-
      The standard method called to automatically emit a token at the
       outermost lexical rule.  The token object should point into the
       char buffer start..stop.  If there is a text override in 'text',
       use that to set the token's text.  Override this method to emit
       custom Token objects or provide a new factory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function emit(token: Token): Token'
      parameters:
        - id: token
          type: Token
          description: ''
      return:
        description: ''
        type: Token
    inheritanceDescription: <b>Inherited From</b> Lexer.emit
  - name: emitEOF()
    uid: adaptive-expressions-ie11.CommonRegexLexer.emitEOF
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function emitEOF(): Token'
      return:
        description: ''
        type: Token
    inheritanceDescription: <b>Inherited From</b> Lexer.emitEOF
  - name: getAllTokens()
    uid: adaptive-expressions-ie11.CommonRegexLexer.getAllTokens
    package: adaptive-expressions-ie11
    summary: |-
      Return a list of all Token objects in input char stream.
       Forces load of all tokens. Does not include EOF token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAllTokens(): Token[]'
      return:
        description: ''
        type: Token[]
    inheritanceDescription: <b>Inherited From</b> Lexer.getAllTokens
  - name: getCharErrorDisplay(number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.getCharErrorDisplay
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getCharErrorDisplay(c: number): string'
      parameters:
        - id: c
          type: number
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Lexer.getCharErrorDisplay
  - name: getErrorDisplay(string | number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.getErrorDisplay
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorDisplay(s: string | number): string'
      parameters:
        - id: s
          type: string | number
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Lexer.getErrorDisplay
  - name: getErrorHeader(RecognitionException)
    uid: adaptive-expressions-ie11.CommonRegexLexer.getErrorHeader
    package: adaptive-expressions-ie11
    summary: What is the error header, normally line/character position information?
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorHeader(e: RecognitionException): string'
      parameters:
        - id: e
          type: RecognitionException
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Lexer.getErrorHeader
  - name: getErrorListenerDispatch()
    uid: adaptive-expressions-ie11.CommonRegexLexer.getErrorListenerDispatch
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorListenerDispatch(): ANTLRErrorListener<number>'
      return:
        description: ''
        type: ANTLRErrorListener&lt;number&gt;
    inheritanceDescription: <b>Inherited From</b> Lexer.getErrorListenerDispatch
  - name: getErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexLexer.getErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorListeners(): ANTLRErrorListener<number>[]'
      return:
        description: ''
        type: ANTLRErrorListener&lt;number&gt;[]
    inheritanceDescription: <b>Inherited From</b> Lexer.getErrorListeners
  - name: getRuleIndexMap()
    uid: adaptive-expressions-ie11.CommonRegexLexer.getRuleIndexMap
    package: adaptive-expressions-ie11
    summary: |-
      Get a map from rule names to rule indexes.

      Used for XPath and tree pattern compilation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getRuleIndexMap(): ReadonlyMap<string, number>'
      return:
        description: ''
        type: ReadonlyMap&lt;string, number&gt;
    inheritanceDescription: <b>Inherited From</b> Lexer.getRuleIndexMap
  - name: getTokenType(string)
    uid: adaptive-expressions-ie11.CommonRegexLexer.getTokenType
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTokenType(tokenName: string): number'
      parameters:
        - id: tokenName
          type: string
          description: ''
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.getTokenType
  - name: getTokenTypeMap()
    uid: adaptive-expressions-ie11.CommonRegexLexer.getTokenTypeMap
    package: adaptive-expressions-ie11
    summary: |-
      Get a map from token names to token types.

      Used for XPath and tree pattern compilation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTokenTypeMap(): ReadonlyMap<string, number>'
      return:
        description: ''
        type: ReadonlyMap&lt;string, number&gt;
    inheritanceDescription: <b>Inherited From</b> Lexer.getTokenTypeMap
  - name: mode(number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.mode
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mode(m: number)'
      parameters:
        - id: m
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.mode
  - name: more()
    uid: adaptive-expressions-ie11.CommonRegexLexer.more
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function more()
    inheritanceDescription: <b>Inherited From</b> Lexer.more
  - name: nextToken()
    uid: adaptive-expressions-ie11.CommonRegexLexer.nextToken
    package: adaptive-expressions-ie11
    summary: |-
      Return a token from this source; i.e., match a token on the char
       stream.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function nextToken(): Token'
      return:
        description: ''
        type: Token
    inheritanceDescription: <b>Inherited From</b> Lexer.nextToken
  - name: notifyListeners(LexerNoViableAltException)
    uid: adaptive-expressions-ie11.CommonRegexLexer.notifyListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function notifyListeners(e: LexerNoViableAltException)'
      parameters:
        - id: e
          type: LexerNoViableAltException
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.notifyListeners
  - name: popMode()
    uid: adaptive-expressions-ie11.CommonRegexLexer.popMode
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function popMode(): number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Lexer.popMode
  - name: precpred(undefined | RuleContext, number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.precpred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function precpred(localctx: undefined | RuleContext, precedence:
        number): boolean
      parameters:
        - id: localctx
          type: undefined | RuleContext
          description: ''
        - id: precedence
          type: number
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Lexer.precpred
  - name: pushMode(number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.pushMode
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function pushMode(m: number)'
      parameters:
        - id: m
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.pushMode
  - name: recover(LexerNoViableAltException)
    uid: adaptive-expressions-ie11.CommonRegexLexer.recover_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function recover(re: LexerNoViableAltException)'
      parameters:
        - id: re
          type: LexerNoViableAltException
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.recover
  - name: recover(RecognitionException)
    uid: adaptive-expressions-ie11.CommonRegexLexer.recover
    package: adaptive-expressions-ie11
    summary: |-
      Lexers can normally match any char in it's vocabulary after matching
       a token, so do the easy thing and just kill a character and hope
       it all works out.  You can instead use the rule invocation stack
       to do sophisticated error recovery if you are in a fragment rule.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function recover(re: RecognitionException)'
      parameters:
        - id: re
          type: RecognitionException
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.recover
  - name: removeErrorListener(ANTLRErrorListener<number>)
    uid: adaptive-expressions-ie11.CommonRegexLexer.removeErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeErrorListener(listener: ANTLRErrorListener<number>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;number&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.removeErrorListener
  - name: removeErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexLexer.removeErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function removeErrorListeners()
    inheritanceDescription: <b>Inherited From</b> Lexer.removeErrorListeners
  - name: reset()
    uid: adaptive-expressions-ie11.CommonRegexLexer.reset
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function reset()
    inheritanceDescription: <b>Inherited From</b> Lexer.reset
  - name: reset(boolean)
    uid: adaptive-expressions-ie11.CommonRegexLexer.reset_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function reset(resetInput: boolean)'
      parameters:
        - id: resetInput
          type: boolean
          description: ''
    inheritanceDescription: <b>Inherited From</b> Lexer.reset
  - name: sempred(undefined | RuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexLexer.sempred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sempred(_localctx: undefined | RuleContext, ruleIndex: number,
        actionIndex: number): boolean
      parameters:
        - id: _localctx
          type: undefined | RuleContext
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Lexer.sempred
  - name: skip()
    uid: adaptive-expressions-ie11.CommonRegexLexer.skip
    package: adaptive-expressions-ie11
    summary: |-
      Instruct the lexer to skip creating a token for current lexer rule
       and look for another token.  nextToken() knows to keep looking when
       a lexer rule finishes with token set to SKIP_TOKEN.  Recall that
       if token==undefined at end of any token rule, it creates one for you
       and emits it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function skip()
    inheritanceDescription: <b>Inherited From</b> Lexer.skip
extends: Lexer
