### YamlMime:TSType
name: CommonRegexParser
uid: adaptive-expressions-ie11.CommonRegexParser
package: adaptive-expressions-ie11
summary: ''
fullName: CommonRegexParser
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CommonRegexParser(TokenStream)
    uid: adaptive-expressions-ie11.CommonRegexParser.constructor
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new CommonRegexParser(input: TokenStream)'
      parameters:
        - id: input
          type: TokenStream
          description: ''
properties:
  - name: ALC
    uid: adaptive-expressions-ie11.CommonRegexParser.ALC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ALC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ALC: 44 = 44'
      return:
        description: ''
        type: '44'
  - name: Ampersand
    uid: adaptive-expressions-ie11.CommonRegexParser.Ampersand
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Ampersand
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Ampersand: 43 = 43'
      return:
        description: ''
        type: '43'
  - name: atn
    uid: adaptive-expressions-ie11.CommonRegexParser.atn
    package: adaptive-expressions-ie11
    summary: >-
      Get the <xref:adaptive-expressions-ie11.CommonRegexLexer.serializedATN>
      used by the recognizer for prediction.
    fullName: atn
    remarks: ''
    isDeprecated: false
    syntax:
      content: ATN atn
      return:
        description: >-
          The <xref:adaptive-expressions-ie11.CommonRegexLexer.serializedATN>
          used by the recognizer for prediction.
        type: ATN
  - name: AUC
    uid: adaptive-expressions-ie11.CommonRegexParser.AUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: AUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static AUC: 70 = 70'
      return:
        description: ''
        type: '70'
  - name: Backslash
    uid: adaptive-expressions-ie11.CommonRegexParser.Backslash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Backslash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Backslash: 10 = 10'
      return:
        description: ''
        type: '10'
  - name: BellChar
    uid: adaptive-expressions-ie11.CommonRegexParser.BellChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BellChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BellChar: 3 = 3'
      return:
        description: ''
        type: '3'
  - name: BLC
    uid: adaptive-expressions-ie11.CommonRegexParser.BLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BLC: 45 = 45'
      return:
        description: ''
        type: '45'
  - name: BlockQuoted
    uid: adaptive-expressions-ie11.CommonRegexParser.BlockQuoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BlockQuoted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BlockQuoted: 2 = 2'
      return:
        description: ''
        type: '2'
  - name: BUC
    uid: adaptive-expressions-ie11.CommonRegexParser.BUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static BUC: 71 = 71'
      return:
        description: ''
        type: '71'
  - name: buildParseTree
    uid: adaptive-expressions-ie11.CommonRegexParser.buildParseTree
    package: adaptive-expressions-ie11
    summary: |-
      Gets whether or not a complete parse tree will be constructed while
      parsing. This property is `true` for a newly constructed parser.
    fullName: buildParseTree
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean buildParseTree
      return:
        description: |-
          `true` if a complete parse tree will be constructed while
          parsing, otherwise `false`
        type: boolean
  - name: Caret
    uid: adaptive-expressions-ie11.CommonRegexParser.Caret
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Caret
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Caret: 23 = 23'
      return:
        description: ''
        type: '23'
  - name: CarriageReturn
    uid: adaptive-expressions-ie11.CommonRegexParser.CarriageReturn
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CarriageReturn
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CarriageReturn: 8 = 8'
      return:
        description: ''
        type: '8'
  - name: CharacterClassEnd
    uid: adaptive-expressions-ie11.CommonRegexParser.CharacterClassEnd
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharacterClassEnd: 22 = 22'
      return:
        description: ''
        type: '22'
  - name: CharacterClassStart
    uid: adaptive-expressions-ie11.CommonRegexParser.CharacterClassStart
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharacterClassStart: 21 = 21'
      return:
        description: ''
        type: '21'
  - name: CharWithoutProperty
    uid: adaptive-expressions-ie11.CommonRegexParser.CharWithoutProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithoutProperty
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharWithoutProperty: 16 = 16'
      return:
        description: ''
        type: '16'
  - name: CharWithProperty
    uid: adaptive-expressions-ie11.CommonRegexParser.CharWithProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithProperty
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CharWithProperty: 15 = 15'
      return:
        description: ''
        type: '15'
  - name: CLC
    uid: adaptive-expressions-ie11.CommonRegexParser.CLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CLC: 46 = 46'
      return:
        description: ''
        type: '46'
  - name: CloseBrace
    uid: adaptive-expressions-ie11.CommonRegexParser.CloseBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseBrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CloseBrace: 29 = 29'
      return:
        description: ''
        type: '29'
  - name: CloseParen
    uid: adaptive-expressions-ie11.CommonRegexParser.CloseParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseParen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CloseParen: 34 = 34'
      return:
        description: ''
        type: '34'
  - name: Colon
    uid: adaptive-expressions-ie11.CommonRegexParser.Colon
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Colon
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Colon: 39 = 39'
      return:
        description: ''
        type: '39'
  - name: Comma
    uid: adaptive-expressions-ie11.CommonRegexParser.Comma
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Comma
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Comma: 30 = 30'
      return:
        description: ''
        type: '30'
  - name: context
    uid: adaptive-expressions-ie11.CommonRegexParser.context
    package: adaptive-expressions-ie11
    summary: ''
    fullName: context
    remarks: ''
    isDeprecated: false
    syntax:
      content: ParserRuleContext context
      return:
        description: ''
        type: ParserRuleContext
  - name: ControlChar
    uid: adaptive-expressions-ie11.CommonRegexParser.ControlChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ControlChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ControlChar: 4 = 4'
      return:
        description: ''
        type: '4'
  - name: CUC
    uid: adaptive-expressions-ie11.CommonRegexParser.CUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static CUC: 72 = 72'
      return:
        description: ''
        type: '72'
  - name: currentToken
    uid: adaptive-expressions-ie11.CommonRegexParser.currentToken
    package: adaptive-expressions-ie11
    summary: |-
      Match needs to return the current input symbol, which gets put
       into the label for the associated token ref; e.g., x=ID.
    fullName: currentToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: Token currentToken
      return:
        description: ''
        type: Token
  - name: D0
    uid: adaptive-expressions-ie11.CommonRegexParser.D0
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D0
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D0: 105 = 105'
      return:
        description: ''
        type: '105'
  - name: D1
    uid: adaptive-expressions-ie11.CommonRegexParser.D1
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D1
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D1: 96 = 96'
      return:
        description: ''
        type: '96'
  - name: D2
    uid: adaptive-expressions-ie11.CommonRegexParser.D2
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D2
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D2: 97 = 97'
      return:
        description: ''
        type: '97'
  - name: D3
    uid: adaptive-expressions-ie11.CommonRegexParser.D3
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D3
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D3: 98 = 98'
      return:
        description: ''
        type: '98'
  - name: D4
    uid: adaptive-expressions-ie11.CommonRegexParser.D4
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D4
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D4: 99 = 99'
      return:
        description: ''
        type: '99'
  - name: D5
    uid: adaptive-expressions-ie11.CommonRegexParser.D5
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D5
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D5: 100 = 100'
      return:
        description: ''
        type: '100'
  - name: D6
    uid: adaptive-expressions-ie11.CommonRegexParser.D6
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D6
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D6: 101 = 101'
      return:
        description: ''
        type: '101'
  - name: D7
    uid: adaptive-expressions-ie11.CommonRegexParser.D7
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D7
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D7: 102 = 102'
      return:
        description: ''
        type: '102'
  - name: D8
    uid: adaptive-expressions-ie11.CommonRegexParser.D8
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D8
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D8: 103 = 103'
      return:
        description: ''
        type: '103'
  - name: D9
    uid: adaptive-expressions-ie11.CommonRegexParser.D9
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D9
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static D9: 104 = 104'
      return:
        description: ''
        type: '104'
  - name: DecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexParser.DecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DecimalDigit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DecimalDigit: 13 = 13'
      return:
        description: ''
        type: '13'
  - name: DLC
    uid: adaptive-expressions-ie11.CommonRegexParser.DLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DLC: 47 = 47'
      return:
        description: ''
        type: '47'
  - name: Dot
    uid: adaptive-expressions-ie11.CommonRegexParser.Dot
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Dot
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Dot: 12 = 12'
      return:
        description: ''
        type: '12'
  - name: DUC
    uid: adaptive-expressions-ie11.CommonRegexParser.DUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static DUC: 73 = 73'
      return:
        description: ''
        type: '73'
  - name: ELC
    uid: adaptive-expressions-ie11.CommonRegexParser.ELC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ELC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ELC: 48 = 48'
      return:
        description: ''
        type: '48'
  - name: EndOfSubject
    uid: adaptive-expressions-ie11.CommonRegexParser.EndOfSubject
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EndOfSubject
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EndOfSubject: 31 = 31'
      return:
        description: ''
        type: '31'
  - name: Equals
    uid: adaptive-expressions-ie11.CommonRegexParser.Equals
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Equals
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Equals: 41 = 41'
      return:
        description: ''
        type: '41'
  - name: errorHandler
    uid: adaptive-expressions-ie11.CommonRegexParser.errorHandler
    package: adaptive-expressions-ie11
    summary: ''
    fullName: errorHandler
    remarks: ''
    isDeprecated: false
    syntax:
      content: ANTLRErrorStrategy errorHandler
      return:
        description: ''
        type: ANTLRErrorStrategy
  - name: EscapeChar
    uid: adaptive-expressions-ie11.CommonRegexParser.EscapeChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EscapeChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EscapeChar: 5 = 5'
      return:
        description: ''
        type: '5'
  - name: EUC
    uid: adaptive-expressions-ie11.CommonRegexParser.EUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EUC: 74 = 74'
      return:
        description: ''
        type: '74'
  - name: Exclamation
    uid: adaptive-expressions-ie11.CommonRegexParser.Exclamation
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Exclamation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Exclamation: 42 = 42'
      return:
        description: ''
        type: '42'
  - name: FLC
    uid: adaptive-expressions-ie11.CommonRegexParser.FLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FLC: 49 = 49'
      return:
        description: ''
        type: '49'
  - name: FormFeed
    uid: adaptive-expressions-ie11.CommonRegexParser.FormFeed
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FormFeed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FormFeed: 6 = 6'
      return:
        description: ''
        type: '6'
  - name: FUC
    uid: adaptive-expressions-ie11.CommonRegexParser.FUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static FUC: 75 = 75'
      return:
        description: ''
        type: '75'
  - name: GLC
    uid: adaptive-expressions-ie11.CommonRegexParser.GLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GLC: 50 = 50'
      return:
        description: ''
        type: '50'
  - name: grammarFileName
    uid: adaptive-expressions-ie11.CommonRegexParser.grammarFileName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: grammarFileName
    remarks: ''
    isDeprecated: false
    syntax:
      content: string grammarFileName
      return:
        description: ''
        type: string
  - name: GreaterThan
    uid: adaptive-expressions-ie11.CommonRegexParser.GreaterThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GreaterThan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GreaterThan: 36 = 36'
      return:
        description: ''
        type: '36'
  - name: GUC
    uid: adaptive-expressions-ie11.CommonRegexParser.GUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static GUC: 76 = 76'
      return:
        description: ''
        type: '76'
  - name: Hash
    uid: adaptive-expressions-ie11.CommonRegexParser.Hash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Hash: 40 = 40'
      return:
        description: ''
        type: '40'
  - name: HexChar
    uid: adaptive-expressions-ie11.CommonRegexParser.HexChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HexChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HexChar: 11 = 11'
      return:
        description: ''
        type: '11'
  - name: HLC
    uid: adaptive-expressions-ie11.CommonRegexParser.HLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HLC: 51 = 51'
      return:
        description: ''
        type: '51'
  - name: HUC
    uid: adaptive-expressions-ie11.CommonRegexParser.HUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static HUC: 77 = 77'
      return:
        description: ''
        type: '77'
  - name: Hyphen
    uid: adaptive-expressions-ie11.CommonRegexParser.Hyphen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hyphen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Hyphen: 24 = 24'
      return:
        description: ''
        type: '24'
  - name: ILC
    uid: adaptive-expressions-ie11.CommonRegexParser.ILC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ILC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ILC: 52 = 52'
      return:
        description: ''
        type: '52'
  - name: inputStream
    uid: adaptive-expressions-ie11.CommonRegexParser.inputStream
    package: adaptive-expressions-ie11
    summary: ''
    fullName: inputStream
    remarks: ''
    isDeprecated: false
    syntax:
      content: TokenStream inputStream
      return:
        description: ''
        type: TokenStream
  - name: interpreter
    uid: adaptive-expressions-ie11.CommonRegexParser.interpreter
    package: adaptive-expressions-ie11
    summary: Get the ATN interpreter used by the recognizer for prediction.
    fullName: interpreter
    remarks: ''
    isDeprecated: false
    syntax:
      content: ATNInterpreter interpreter
      return:
        description: The ATN interpreter used by the recognizer for prediction.
        type: ATNInterpreter
  - name: isMatchedEOF
    uid: adaptive-expressions-ie11.CommonRegexParser.isMatchedEOF
    package: adaptive-expressions-ie11
    summary: ''
    fullName: isMatchedEOF
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean isMatchedEOF
      return:
        description: ''
        type: boolean
  - name: isTrace
    uid: adaptive-expressions-ie11.CommonRegexParser.isTrace
    package: adaptive-expressions-ie11
    summary: |-
      Gets whether a <xref:TraceListener> is registered as a parse listener
      for the parser.
    fullName: isTrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean isTrace
      return:
        description: ''
        type: boolean
  - name: IUC
    uid: adaptive-expressions-ie11.CommonRegexParser.IUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: IUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static IUC: 78 = 78'
      return:
        description: ''
        type: '78'
  - name: JLC
    uid: adaptive-expressions-ie11.CommonRegexParser.JLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static JLC: 53 = 53'
      return:
        description: ''
        type: '53'
  - name: JUC
    uid: adaptive-expressions-ie11.CommonRegexParser.JUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static JUC: 79 = 79'
      return:
        description: ''
        type: '79'
  - name: KLC
    uid: adaptive-expressions-ie11.CommonRegexParser.KLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static KLC: 54 = 54'
      return:
        description: ''
        type: '54'
  - name: KUC
    uid: adaptive-expressions-ie11.CommonRegexParser.KUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static KUC: 80 = 80'
      return:
        description: ''
        type: '80'
  - name: LessThan
    uid: adaptive-expressions-ie11.CommonRegexParser.LessThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LessThan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LessThan: 35 = 35'
      return:
        description: ''
        type: '35'
  - name: LLC
    uid: adaptive-expressions-ie11.CommonRegexParser.LLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LLC: 55 = 55'
      return:
        description: ''
        type: '55'
  - name: LUC
    uid: adaptive-expressions-ie11.CommonRegexParser.LUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static LUC: 81 = 81'
      return:
        description: ''
        type: '81'
  - name: MLC
    uid: adaptive-expressions-ie11.CommonRegexParser.MLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MLC: 56 = 56'
      return:
        description: ''
        type: '56'
  - name: MUC
    uid: adaptive-expressions-ie11.CommonRegexParser.MUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static MUC: 82 = 82'
      return:
        description: ''
        type: '82'
  - name: NewLine
    uid: adaptive-expressions-ie11.CommonRegexParser.NewLine
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NewLine
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NewLine: 7 = 7'
      return:
        description: ''
        type: '7'
  - name: NLC
    uid: adaptive-expressions-ie11.CommonRegexParser.NLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NLC: 57 = 57'
      return:
        description: ''
        type: '57'
  - name: NotDecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexParser.NotDecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotDecimalDigit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotDecimalDigit: 14 = 14'
      return:
        description: ''
        type: '14'
  - name: NotWhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexParser.NotWhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWhiteSpace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotWhiteSpace: 18 = 18'
      return:
        description: ''
        type: '18'
  - name: NotWordChar
    uid: adaptive-expressions-ie11.CommonRegexParser.NotWordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWordChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NotWordChar: 20 = 20'
      return:
        description: ''
        type: '20'
  - name: NUC
    uid: adaptive-expressions-ie11.CommonRegexParser.NUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static NUC: 83 = 83'
      return:
        description: ''
        type: '83'
  - name: numberOfSyntaxErrors
    uid: adaptive-expressions-ie11.CommonRegexParser.numberOfSyntaxErrors
    package: adaptive-expressions-ie11
    summary: |-
      Gets the number of syntax errors reported during parsing. This value is
      incremented each time <xref:%23notifyErrorListeners> is called.

      See #notifyErrorListeners
    fullName: numberOfSyntaxErrors
    remarks: ''
    isDeprecated: false
    syntax:
      content: number numberOfSyntaxErrors
      return:
        description: ''
        type: number
  - name: OLC
    uid: adaptive-expressions-ie11.CommonRegexParser.OLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OLC: 58 = 58'
      return:
        description: ''
        type: '58'
  - name: OpenBrace
    uid: adaptive-expressions-ie11.CommonRegexParser.OpenBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenBrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OpenBrace: 28 = 28'
      return:
        description: ''
        type: '28'
  - name: OpenParen
    uid: adaptive-expressions-ie11.CommonRegexParser.OpenParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenParen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OpenParen: 33 = 33'
      return:
        description: ''
        type: '33'
  - name: OtherChar
    uid: adaptive-expressions-ie11.CommonRegexParser.OtherChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OtherChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OtherChar: 106 = 106'
      return:
        description: ''
        type: '106'
  - name: OUC
    uid: adaptive-expressions-ie11.CommonRegexParser.OUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static OUC: 84 = 84'
      return:
        description: ''
        type: '84'
  - name: parseInfo
    uid: adaptive-expressions-ie11.CommonRegexParser.parseInfo
    package: adaptive-expressions-ie11
    summary: ''
    fullName: parseInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: Promise<undefined | ParseInfo> parseInfo
      return:
        description: ''
        type: Promise&lt;undefined | ParseInfo&gt;
  - name: Pipe
    uid: adaptive-expressions-ie11.CommonRegexParser.Pipe
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Pipe
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Pipe: 32 = 32'
      return:
        description: ''
        type: '32'
  - name: PLC
    uid: adaptive-expressions-ie11.CommonRegexParser.PLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static PLC: 59 = 59'
      return:
        description: ''
        type: '59'
  - name: Plus
    uid: adaptive-expressions-ie11.CommonRegexParser.Plus
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Plus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Plus: 26 = 26'
      return:
        description: ''
        type: '26'
  - name: precedence
    uid: adaptive-expressions-ie11.CommonRegexParser.precedence
    package: adaptive-expressions-ie11
    summary: Get the precedence level for the top-most precedence rule.
    fullName: precedence
    remarks: ''
    isDeprecated: false
    syntax:
      content: number precedence
      return:
        description: |-
          The precedence level for the top-most precedence rule, or -1 if
          the parser context is not nested within a precedence rule.
        type: number
  - name: PUC
    uid: adaptive-expressions-ie11.CommonRegexParser.PUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static PUC: 85 = 85'
      return:
        description: ''
        type: '85'
  - name: QLC
    uid: adaptive-expressions-ie11.CommonRegexParser.QLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QLC: 60 = 60'
      return:
        description: ''
        type: '60'
  - name: QUC
    uid: adaptive-expressions-ie11.CommonRegexParser.QUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QUC: 86 = 86'
      return:
        description: ''
        type: '86'
  - name: QuestionMark
    uid: adaptive-expressions-ie11.CommonRegexParser.QuestionMark
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QuestionMark
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static QuestionMark: 25 = 25'
      return:
        description: ''
        type: '25'
  - name: Quoted
    uid: adaptive-expressions-ie11.CommonRegexParser.Quoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Quoted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Quoted: 1 = 1'
      return:
        description: ''
        type: '1'
  - name: RLC
    uid: adaptive-expressions-ie11.CommonRegexParser.RLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RLC: 61 = 61'
      return:
        description: ''
        type: '61'
  - name: RUC
    uid: adaptive-expressions-ie11.CommonRegexParser.RUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RUC: 87 = 87'
      return:
        description: ''
        type: '87'
  - name: ruleContext
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleContext
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleContext
    remarks: ''
    isDeprecated: false
    syntax:
      content: ParserRuleContext ruleContext
      return:
        description: ''
        type: ParserRuleContext
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ruleNames: string[]'
      return:
        description: ''
        type: string[]
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isDeprecated: false
    syntax:
      content: string[] ruleNames
      return:
        description: ''
        type: string[]
  - name: RULE_alpha_nums
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_alpha_nums
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_alpha_nums
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_alpha_nums: 23 = 23'
      return:
        description: ''
        type: '23'
  - name: RULE_alternation
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_alternation
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_alternation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_alternation: 1 = 1'
      return:
        description: ''
        type: '1'
  - name: RULE_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_atom
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_atom: 11 = 11'
      return:
        description: ''
        type: '11'
  - name: RULE_capture
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_capture
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_capture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_capture: 7 = 7'
      return:
        description: ''
        type: '7'
  - name: RULE_cc_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_cc_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_cc_atom
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_cc_atom: 12 = 12'
      return:
        description: ''
        type: '12'
  - name: RULE_cc_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_cc_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_cc_literal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_cc_literal: 15 = 15'
      return:
        description: ''
        type: '15'
  - name: RULE_character_class
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_character_class
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_character_class
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_character_class: 6 = 6'
      return:
        description: ''
        type: '6'
  - name: RULE_digit
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_digit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_digit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_digit: 21 = 21'
      return:
        description: ''
        type: '21'
  - name: RULE_digits
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_digits
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_digits
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_digits: 20 = 20'
      return:
        description: ''
        type: '20'
  - name: RULE_element
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_element
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_element
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_element: 3 = 3'
      return:
        description: ''
        type: '3'
  - name: RULE_expr
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_expr
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_expr
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_expr: 2 = 2'
      return:
        description: ''
        type: '2'
  - name: RULE_letter
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_letter
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_letter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_letter: 26 = 26'
      return:
        description: ''
        type: '26'
  - name: RULE_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_literal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_literal: 14 = 14'
      return:
        description: ''
        type: '14'
  - name: RULE_name
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_name
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_name: 22 = 22'
      return:
        description: ''
        type: '22'
  - name: RULE_non_capture
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_capture
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_capture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_non_capture: 8 = 8'
      return:
        description: ''
        type: '8'
  - name: RULE_non_close_paren
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_close_paren
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_close_paren
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_non_close_paren: 25 = 25'
      return:
        description: ''
        type: '25'
  - name: RULE_non_close_parens
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_close_parens
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_close_parens
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_non_close_parens: 24 = 24'
      return:
        description: ''
        type: '24'
  - name: RULE_number
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_number
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_number
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_number: 17 = 17'
      return:
        description: ''
        type: '17'
  - name: RULE_octal_char
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_octal_char
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_octal_char
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_octal_char: 18 = 18'
      return:
        description: ''
        type: '18'
  - name: RULE_octal_digit
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_octal_digit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_octal_digit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_octal_digit: 19 = 19'
      return:
        description: ''
        type: '19'
  - name: RULE_option
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_option
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_option
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_option: 9 = 9'
      return:
        description: ''
        type: '9'
  - name: RULE_option_flag
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_option_flag
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_option_flag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_option_flag: 10 = 10'
      return:
        description: ''
        type: '10'
  - name: RULE_parse
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_parse
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_parse
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_parse: 0 = 0'
      return:
        description: ''
        type: '0'
  - name: RULE_quantifier
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_quantifier
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_quantifier
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_quantifier: 4 = 4'
      return:
        description: ''
        type: '4'
  - name: RULE_quantifier_type
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_quantifier_type
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_quantifier_type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_quantifier_type: 5 = 5'
      return:
        description: ''
        type: '5'
  - name: RULE_shared_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_shared_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_shared_atom
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_shared_atom: 13 = 13'
      return:
        description: ''
        type: '13'
  - name: RULE_shared_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_shared_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_shared_literal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static RULE_shared_literal: 16 = 16'
      return:
        description: ''
        type: '16'
  - name: serializedATN
    uid: adaptive-expressions-ie11.CommonRegexParser.serializedATN
    package: adaptive-expressions-ie11
    summary: ''
    fullName: serializedATN
    remarks: ''
    isDeprecated: false
    syntax:
      content: string serializedATN
      return:
        description: ''
        type: string
  - name: SingleQuote
    uid: adaptive-expressions-ie11.CommonRegexParser.SingleQuote
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SingleQuote
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SingleQuote: 37 = 37'
      return:
        description: ''
        type: '37'
  - name: SLC
    uid: adaptive-expressions-ie11.CommonRegexParser.SLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SLC: 62 = 62'
      return:
        description: ''
        type: '62'
  - name: sourceName
    uid: adaptive-expressions-ie11.CommonRegexParser.sourceName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: sourceName
    remarks: ''
    isDeprecated: false
    syntax:
      content: string sourceName
      return:
        description: ''
        type: string
  - name: Star
    uid: adaptive-expressions-ie11.CommonRegexParser.Star
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Star
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Star: 27 = 27'
      return:
        description: ''
        type: '27'
  - name: state
    uid: adaptive-expressions-ie11.CommonRegexParser.state
    package: adaptive-expressions-ie11
    summary: ''
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: number state
      return:
        description: ''
        type: number
  - name: SUC
    uid: adaptive-expressions-ie11.CommonRegexParser.SUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static SUC: 88 = 88'
      return:
        description: ''
        type: '88'
  - name: Tab
    uid: adaptive-expressions-ie11.CommonRegexParser.Tab
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Tab
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Tab: 9 = 9'
      return:
        description: ''
        type: '9'
  - name: TLC
    uid: adaptive-expressions-ie11.CommonRegexParser.TLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static TLC: 63 = 63'
      return:
        description: ''
        type: '63'
  - name: tokenFactory
    uid: adaptive-expressions-ie11.CommonRegexParser.tokenFactory
    package: adaptive-expressions-ie11
    summary: ''
    fullName: tokenFactory
    remarks: ''
    isDeprecated: false
    syntax:
      content: TokenFactory tokenFactory
      return:
        description: ''
        type: TokenFactory
  - name: TUC
    uid: adaptive-expressions-ie11.CommonRegexParser.TUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static TUC: 89 = 89'
      return:
        description: ''
        type: '89'
  - name: ULC
    uid: adaptive-expressions-ie11.CommonRegexParser.ULC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ULC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ULC: 64 = 64'
      return:
        description: ''
        type: '64'
  - name: Underscore
    uid: adaptive-expressions-ie11.CommonRegexParser.Underscore
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Underscore
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static Underscore: 38 = 38'
      return:
        description: ''
        type: '38'
  - name: UUC
    uid: adaptive-expressions-ie11.CommonRegexParser.UUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: UUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static UUC: 90 = 90'
      return:
        description: ''
        type: '90'
  - name: VLC
    uid: adaptive-expressions-ie11.CommonRegexParser.VLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VLC: 65 = 65'
      return:
        description: ''
        type: '65'
  - name: VOCABULARY
    uid: adaptive-expressions-ie11.CommonRegexParser.VOCABULARY
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VOCABULARY
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VOCABULARY: Vocabulary'
      return:
        description: ''
        type: Vocabulary
  - name: vocabulary
    uid: adaptive-expressions-ie11.CommonRegexParser.vocabulary
    package: adaptive-expressions-ie11
    summary: ''
    fullName: vocabulary
    remarks: ''
    isDeprecated: false
    syntax:
      content: Vocabulary vocabulary
      return:
        description: ''
        type: Vocabulary
  - name: VUC
    uid: adaptive-expressions-ie11.CommonRegexParser.VUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static VUC: 91 = 91'
      return:
        description: ''
        type: '91'
  - name: WhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexParser.WhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WhiteSpace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WhiteSpace: 17 = 17'
      return:
        description: ''
        type: '17'
  - name: WLC
    uid: adaptive-expressions-ie11.CommonRegexParser.WLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WLC: 66 = 66'
      return:
        description: ''
        type: '66'
  - name: WordChar
    uid: adaptive-expressions-ie11.CommonRegexParser.WordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WordChar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WordChar: 19 = 19'
      return:
        description: ''
        type: '19'
  - name: WUC
    uid: adaptive-expressions-ie11.CommonRegexParser.WUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static WUC: 92 = 92'
      return:
        description: ''
        type: '92'
  - name: XLC
    uid: adaptive-expressions-ie11.CommonRegexParser.XLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static XLC: 67 = 67'
      return:
        description: ''
        type: '67'
  - name: XUC
    uid: adaptive-expressions-ie11.CommonRegexParser.XUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static XUC: 93 = 93'
      return:
        description: ''
        type: '93'
  - name: YLC
    uid: adaptive-expressions-ie11.CommonRegexParser.YLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static YLC: 68 = 68'
      return:
        description: ''
        type: '68'
  - name: YUC
    uid: adaptive-expressions-ie11.CommonRegexParser.YUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static YUC: 94 = 94'
      return:
        description: ''
        type: '94'
  - name: ZLC
    uid: adaptive-expressions-ie11.CommonRegexParser.ZLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZLC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ZLC: 69 = 69'
      return:
        description: ''
        type: '69'
  - name: ZUC
    uid: adaptive-expressions-ie11.CommonRegexParser.ZUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZUC
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static ZUC: 95 = 95'
      return:
        description: ''
        type: '95'
inheritedProperties:
  - name: EOF
    uid: adaptive-expressions-ie11.CommonRegexParser.EOF
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EOF
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static EOF: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Parser.EOF
inheritedMethods:
  - name: action(undefined | RuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.action
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function action(_localctx: undefined | RuleContext, ruleIndex: number,
        actionIndex: number)
      parameters:
        - id: _localctx
          type: undefined | RuleContext
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.action
  - name: addErrorListener(ANTLRErrorListener<Token>)
    uid: adaptive-expressions-ie11.CommonRegexParser.addErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function addErrorListener(listener: ANTLRErrorListener<Token>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;Token&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.addErrorListener
  - name: addParseListener(ParseTreeListener)
    uid: adaptive-expressions-ie11.CommonRegexParser.addParseListener
    package: adaptive-expressions-ie11
    summary: |-
      Registers `listener` to receive events during the parsing process.

      To support output-preserving grammar transformations (including but not
      limited to left-recursion removal, automated left-factoring, and
      optimized code generation), calls to listener methods during the parse
      may differ substantially from calls made by
      <xref:ParseTreeWalker%23DEFAULT> used after the parse is complete. In
      particular, rule entry and exit events may occur in a different order
      during the parse than after the parser. In addition, calls to certain
      rule entry methods may be omitted.

      With the following specific exceptions, calls to listener events are
      *deterministic*, i.e. for identical input the calls to listener
      methods will be the same.

      * Alterations to the grammar used to generate code may change the
        behavior of the listener calls.
      * Alterations to the command line options passed to ANTLR 4 when
        generating the parser may change the behavior of the listener calls.
      * Changing the version of the ANTLR Tool used to generate the parser
        may change the behavior of the listener calls.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function addParseListener(listener: ParseTreeListener)'
      parameters:
        - id: listener
          type: ParseTreeListener
          description: the listener to add
    inheritanceDescription: <b>Inherited From</b> Parser.addParseListener
  - name: compileParseTreePattern(string, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.compileParseTreePattern
    package: adaptive-expressions-ie11
    summary: >-
      The preferred method of getting a tree pattern. For example, here's a

      sample use:


      ```

      let t: ParseTree = parser.expr();

      let p: ParseTreePattern = await parser.compileParseTreePattern("<ID>+0",
      MyParser.RULE_expr);

      let m: ParseTreeMatch = p.match(t);

      let id: string = m.get("ID");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function compileParseTreePattern(pattern: string, patternRuleIndex:
        number): Promise<ParseTreePattern>
      parameters:
        - id: pattern
          type: string
          description: ''
        - id: patternRuleIndex
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;ParseTreePattern&gt;
    inheritanceDescription: <b>Inherited From</b> Parser.compileParseTreePattern
  - name: compileParseTreePattern(string, number, Lexer)
    uid: adaptive-expressions-ie11.CommonRegexParser.compileParseTreePattern_1
    package: adaptive-expressions-ie11
    summary: >-
      The same as [int)](xref:%23compileParseTreePattern(String%2C) but specify
      a

      <xref:adaptive-expressions-ie11.CommonRegexLexer> rather than trying to
      deduce it from this parser.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function compileParseTreePattern(pattern: string, patternRuleIndex:
        number, lexer?: Lexer): Promise<ParseTreePattern>
      parameters:
        - id: pattern
          type: string
          description: ''
        - id: patternRuleIndex
          type: number
          description: ''
        - id: lexer
          type: Lexer
          description: ''
      return:
        description: ''
        type: Promise&lt;ParseTreePattern&gt;
    inheritanceDescription: <b>Inherited From</b> Parser.compileParseTreePattern
  - name: consume()
    uid: adaptive-expressions-ie11.CommonRegexParser.consume
    package: adaptive-expressions-ie11
    summary: >-
      Consume and return the [current symbol](`currentToken`).


      E.g., given the following input with `A` being the current

      lookahead symbol, this function moves the cursor to `B` and returns

      `A`.


      ```

      A B

      ^

      ```


      If the parser is not in error recovery mode, the consumed symbol is added

      to the parse tree using <xref:ParserRuleContext%23addChild(TerminalNode)>,
      and

      <xref:ParseTreeListener%23visitTerminal> is called on any parse listeners.

      If the parser *is* in error recovery mode, the consumed symbol is

      added to the parse tree using
      [Token)](xref:%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)> and

      <xref:ParseTreeListener%23visitErrorNode> is called on any parse

      listeners.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function consume(): Token'
      return:
        description: ''
        type: Token
    inheritanceDescription: <b>Inherited From</b> Parser.consume
  - name: createErrorNode(ParserRuleContext, Token)
    uid: adaptive-expressions-ie11.CommonRegexParser.createErrorNode
    package: adaptive-expressions-ie11
    summary: |-
      How to create an error node, given a token, associated with a parent.
      Typically, the error node to create is not a function of the parent.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createErrorNode(parent: ParserRuleContext, t: Token): ErrorNode'
      parameters:
        - id: parent
          type: ParserRuleContext
          description: ''
        - id: t
          type: Token
          description: ''
      return:
        description: ''
        type: ErrorNode
    inheritanceDescription: <b>Inherited From</b> Parser.createErrorNode
  - name: createTerminalNode(ParserRuleContext, Token)
    uid: adaptive-expressions-ie11.CommonRegexParser.createTerminalNode
    package: adaptive-expressions-ie11
    summary: |-
      How to create a token leaf node associated with a parent.
      Typically, the terminal node to create is not a function of the parent.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createTerminalNode(parent: ParserRuleContext, t: Token):
        TerminalNode
      parameters:
        - id: parent
          type: ParserRuleContext
          description: ''
        - id: t
          type: Token
          description: ''
      return:
        description: ''
        type: TerminalNode
    inheritanceDescription: <b>Inherited From</b> Parser.createTerminalNode
  - name: dumpDFA()
    uid: adaptive-expressions-ie11.CommonRegexParser.dumpDFA
    package: adaptive-expressions-ie11
    summary: For debugging and other purposes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function dumpDFA()
    inheritanceDescription: <b>Inherited From</b> Parser.dumpDFA
  - name: enterLeftFactoredRule(ParserRuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.enterLeftFactoredRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function enterLeftFactoredRule(localctx: ParserRuleContext, state:
        number, ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.enterLeftFactoredRule
  - name: enterOuterAlt(ParserRuleContext, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.enterOuterAlt
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function enterOuterAlt(localctx: ParserRuleContext, altNum: number)'
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: altNum
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.enterOuterAlt
  - name: enterRecursionRule(ParserRuleContext, number, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.enterRecursionRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function enterRecursionRule(localctx: ParserRuleContext, state: number,
        ruleIndex: number, precedence: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: precedence
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.enterRecursionRule
  - name: enterRule(ParserRuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.enterRule
    package: adaptive-expressions-ie11
    summary: |-
      Always called by generated parsers upon entry to a rule. Access field
      <xref:%23_ctx> get the current context.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function enterRule(localctx: ParserRuleContext, state: number,
        ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.enterRule
  - name: exitRule()
    uid: adaptive-expressions-ie11.CommonRegexParser.exitRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function exitRule()
    inheritanceDescription: <b>Inherited From</b> Parser.exitRule
  - name: getATNWithBypassAlts()
    uid: adaptive-expressions-ie11.CommonRegexParser.getATNWithBypassAlts
    package: adaptive-expressions-ie11
    summary: |-
      The ATN with bypass alternatives is expensive to create so we create it
      lazily.

      @ if the current parser does not
      implement the `serializedATN` property.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getATNWithBypassAlts(): ATN'
      return:
        description: ''
        type: ATN
    inheritanceDescription: <b>Inherited From</b> Parser.getATNWithBypassAlts
  - name: getDFAStrings()
    uid: adaptive-expressions-ie11.CommonRegexParser.getDFAStrings
    package: adaptive-expressions-ie11
    summary: For debugging and other purposes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getDFAStrings(): string[]'
      return:
        description: ''
        type: string[]
    inheritanceDescription: <b>Inherited From</b> Parser.getDFAStrings
  - name: getErrorHeader(RecognitionException)
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorHeader
    package: adaptive-expressions-ie11
    summary: What is the error header, normally line/character position information?
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorHeader(e: RecognitionException): string'
      parameters:
        - id: e
          type: RecognitionException
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Parser.getErrorHeader
  - name: getErrorListenerDispatch()
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorListenerDispatch
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorListenerDispatch(): ParserErrorListener'
      return:
        description: ''
        type: ParserErrorListener
    inheritanceDescription: <b>Inherited From</b> Parser.getErrorListenerDispatch
  - name: getErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getErrorListeners(): ANTLRErrorListener<Token>[]'
      return:
        description: ''
        type: ANTLRErrorListener&lt;Token&gt;[]
    inheritanceDescription: <b>Inherited From</b> Parser.getErrorListeners
  - name: getExpectedTokens()
    uid: adaptive-expressions-ie11.CommonRegexParser.getExpectedTokens
    package: adaptive-expressions-ie11
    summary: >-
      Computes the set of input symbols which could follow the current parser

      state and context, as given by <xref:%23getState> and
      <xref:%23getContext>,

      respectively.


      See ATN#getExpectedTokens(int, RuleContext)
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getExpectedTokens(): IntervalSet'
      return:
        description: ''
        type: IntervalSet
    inheritanceDescription: <b>Inherited From</b> Parser.getExpectedTokens
  - name: getExpectedTokensWithinCurrentRule()
    uid: >-
      adaptive-expressions-ie11.CommonRegexParser.getExpectedTokensWithinCurrentRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getExpectedTokensWithinCurrentRule(): IntervalSet'
      return:
        description: ''
        type: IntervalSet
    inheritanceDescription: <b>Inherited From</b> Parser.getExpectedTokensWithinCurrentRule
  - name: getInvokingContext(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.getInvokingContext
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getInvokingContext(ruleIndex: number): undefined |
        ParserRuleContext
      parameters:
        - id: ruleIndex
          type: number
          description: ''
      return:
        description: ''
        type: undefined | ParserRuleContext
    inheritanceDescription: <b>Inherited From</b> Parser.getInvokingContext
  - name: getParseListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.getParseListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getParseListeners(): ParseTreeListener[]'
      return:
        description: ''
        type: ParseTreeListener[]
    inheritanceDescription: <b>Inherited From</b> Parser.getParseListeners
  - name: getRuleIndex(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleIndex
    package: adaptive-expressions-ie11
    summary: Get a rule's index (i.e., `RULE_ruleName` field) or -1 if not found.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getRuleIndex(ruleName: string): number'
      parameters:
        - id: ruleName
          type: string
          description: ''
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Parser.getRuleIndex
  - name: getRuleIndexMap()
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleIndexMap
    package: adaptive-expressions-ie11
    summary: |-
      Get a map from rule names to rule indexes.

      Used for XPath and tree pattern compilation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getRuleIndexMap(): ReadonlyMap<string, number>'
      return:
        description: ''
        type: ReadonlyMap&lt;string, number&gt;
    inheritanceDescription: <b>Inherited From</b> Parser.getRuleIndexMap
  - name: getRuleInvocationStack(RuleContext)
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleInvocationStack
    package: adaptive-expressions-ie11
    summary: |-
      Return List&lt;String&gt; of the rule names in your parser instance
       leading up to a call to the current rule.  You could override if
       you want more details such as the file/line info of where
       in the ATN a rule is invoked.

       This is very useful for error messages.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getRuleInvocationStack(ctx?: RuleContext): string[]'
      parameters:
        - id: ctx
          type: RuleContext
          description: ''
      return:
        description: ''
        type: string[]
    inheritanceDescription: <b>Inherited From</b> Parser.getRuleInvocationStack
  - name: getTokenType(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.getTokenType
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTokenType(tokenName: string): number'
      parameters:
        - id: tokenName
          type: string
          description: ''
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Parser.getTokenType
  - name: getTokenTypeMap()
    uid: adaptive-expressions-ie11.CommonRegexParser.getTokenTypeMap
    package: adaptive-expressions-ie11
    summary: |-
      Get a map from token names to token types.

      Used for XPath and tree pattern compilation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTokenTypeMap(): ReadonlyMap<string, number>'
      return:
        description: ''
        type: ReadonlyMap&lt;string, number&gt;
    inheritanceDescription: <b>Inherited From</b> Parser.getTokenTypeMap
  - name: inContext(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.inContext
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function inContext(context: string): boolean'
      parameters:
        - id: context
          type: string
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Parser.inContext
  - name: isExpectedToken(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.isExpectedToken
    package: adaptive-expressions-ie11
    summary: |-
      Checks whether or not `symbol` can follow the current state in the
      ATN. The behavior of this method is equivalent to the following, but is
      implemented such that the complete context-sensitive follow set does not
      need to be explicitly constructed.

      ```
      return getExpectedTokens().contains(symbol);
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isExpectedToken(symbol: number): boolean'
      parameters:
        - id: symbol
          type: number
          description: the symbol type to check
      return:
        description: |-
          `true` if `symbol` can follow the current state in
          the ATN, otherwise `false`.
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Parser.isExpectedToken
  - name: match(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.match
    package: adaptive-expressions-ie11
    summary: >-
      Match current input symbol against `ttype`. If the symbol type

      matches, <xref:ANTLRErrorStrategy%23reportMatch> and <xref:%23consume> are

      called to complete the match process.


      If the symbol type does not match,

      <xref:ANTLRErrorStrategy%23recoverInline> is called on the current error

      strategy to attempt recovery. If <xref:%23getBuildParseTree> is

      `true` and the token index of the symbol returned by

      <xref:ANTLRErrorStrategy%23recoverInline> is -1, the symbol is added to

      the parse tree by calling
      [Token)](xref:%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)>.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function match(ttype: number): Token'
      parameters:
        - id: ttype
          type: number
          description: the token type to match
      return:
        description: |-
          the matched symbol
          @ if the current input symbol did not match
          `ttype` and the error strategy could not recover from the
          mismatched symbol
        type: Token
    inheritanceDescription: <b>Inherited From</b> Parser.match
  - name: matchWildcard()
    uid: adaptive-expressions-ie11.CommonRegexParser.matchWildcard
    package: adaptive-expressions-ie11
    summary: >-
      Match current input symbol as a wildcard. If the symbol type matches

      (i.e. has a value greater than 0), <xref:ANTLRErrorStrategy%23reportMatch>

      and <xref:%23consume> are called to complete the match process.


      If the symbol type does not match,

      <xref:ANTLRErrorStrategy%23recoverInline> is called on the current error

      strategy to attempt recovery. If <xref:%23getBuildParseTree> is

      `true` and the token index of the symbol returned by

      <xref:ANTLRErrorStrategy%23recoverInline> is -1, the symbol is added to

      the parse tree by calling
      [Token)](xref:Parser%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)>.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function matchWildcard(): Token'
      return:
        description: >-
          the matched symbol

          @ if the current input symbol did not match

          a wildcard and the error strategy could not recover from the
          mismatched

          symbol
        type: Token
    inheritanceDescription: <b>Inherited From</b> Parser.matchWildcard
  - name: notifyErrorListeners(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.notifyErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function notifyErrorListeners(msg: string)'
      parameters:
        - id: msg
          type: string
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.notifyErrorListeners
  - name: >-
      notifyErrorListeners(string, null | Token, undefined |
      RecognitionException)
    uid: adaptive-expressions-ie11.CommonRegexParser.notifyErrorListeners_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function notifyErrorListeners(msg: string, offendingToken: null | Token,
        e: undefined | RecognitionException)
      parameters:
        - id: msg
          type: string
          description: ''
        - id: offendingToken
          type: null | Token
          description: ''
        - id: e
          type: undefined | RecognitionException
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.notifyErrorListeners
  - name: precpred(RuleContext, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.precpred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function precpred(localctx: RuleContext, precedence: number): boolean'
      parameters:
        - id: localctx
          type: RuleContext
          description: ''
        - id: precedence
          type: number
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Parser.precpred
  - name: pushNewRecursionContext(ParserRuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.pushNewRecursionContext
    package: adaptive-expressions-ie11
    summary: |-
      Like <xref:%23enterRule> but for recursive rules.
       Make the current context the child of the incoming localctx.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pushNewRecursionContext(localctx: ParserRuleContext, state:
        number, ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.pushNewRecursionContext
  - name: removeErrorListener(ANTLRErrorListener<Token>)
    uid: adaptive-expressions-ie11.CommonRegexParser.removeErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeErrorListener(listener: ANTLRErrorListener<Token>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;Token&gt;
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.removeErrorListener
  - name: removeErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.removeErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function removeErrorListeners()
    inheritanceDescription: <b>Inherited From</b> Parser.removeErrorListeners
  - name: removeParseListener(ParseTreeListener)
    uid: adaptive-expressions-ie11.CommonRegexParser.removeParseListener
    package: adaptive-expressions-ie11
    summary: |-
      Remove `listener` from the list of parse listeners.

      If `listener` is `undefined` or has not been added as a parse
      listener, this method does nothing.

      See #addParseListener
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParseListener(listener: ParseTreeListener)'
      parameters:
        - id: listener
          type: ParseTreeListener
          description: the listener to remove
    inheritanceDescription: <b>Inherited From</b> Parser.removeParseListener
  - name: removeParseListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.removeParseListeners
    package: adaptive-expressions-ie11
    summary: |-
      Remove all parse listeners.

      See #addParseListener
    remarks: ''
    isDeprecated: false
    syntax:
      content: function removeParseListeners()
    inheritanceDescription: <b>Inherited From</b> Parser.removeParseListeners
  - name: reset()
    uid: adaptive-expressions-ie11.CommonRegexParser.reset
    package: adaptive-expressions-ie11
    summary: reset the parser's state
    remarks: ''
    isDeprecated: false
    syntax:
      content: function reset()
    inheritanceDescription: <b>Inherited From</b> Parser.reset
  - name: reset(boolean)
    uid: adaptive-expressions-ie11.CommonRegexParser.reset_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function reset(resetInput: boolean)'
      parameters:
        - id: resetInput
          type: boolean
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.reset
  - name: sempred(undefined | RuleContext, number, number)
    uid: adaptive-expressions-ie11.CommonRegexParser.sempred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sempred(_localctx: undefined | RuleContext, ruleIndex: number,
        actionIndex: number): boolean
      parameters:
        - id: _localctx
          type: undefined | RuleContext
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Parser.sempred
  - name: setProfile(boolean)
    uid: adaptive-expressions-ie11.CommonRegexParser.setProfile
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setProfile(profile: boolean): Promise<void>'
      parameters:
        - id: profile
          type: boolean
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> Parser.setProfile
  - name: unrollRecursionContexts(ParserRuleContext)
    uid: adaptive-expressions-ie11.CommonRegexParser.unrollRecursionContexts
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unrollRecursionContexts(_parentctx: ParserRuleContext)'
      parameters:
        - id: _parentctx
          type: ParserRuleContext
          description: ''
    inheritanceDescription: <b>Inherited From</b> Parser.unrollRecursionContexts
methods:
  - name: alpha_nums()
    uid: adaptive-expressions-ie11.CommonRegexParser.alpha_nums
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function alpha_nums(): Alpha_numsContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Alpha_numsContext" />
  - name: alternation()
    uid: adaptive-expressions-ie11.CommonRegexParser.alternation
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function alternation(): AlternationContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.AlternationContext" />
  - name: atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function atom(): AtomContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.AtomContext" />
  - name: capture()
    uid: adaptive-expressions-ie11.CommonRegexParser.capture
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function capture(): CaptureContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.CaptureContext" />
  - name: cc_atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.cc_atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function cc_atom(): Cc_atomContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Cc_atomContext" />
  - name: cc_literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.cc_literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function cc_literal(): Cc_literalContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Cc_literalContext" />
  - name: character_class()
    uid: adaptive-expressions-ie11.CommonRegexParser.character_class
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function character_class(): Character_classContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Character_classContext" />
  - name: digit()
    uid: adaptive-expressions-ie11.CommonRegexParser.digit
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function digit(): DigitContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.DigitContext" />
  - name: digits()
    uid: adaptive-expressions-ie11.CommonRegexParser.digits
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function digits(): DigitsContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.DigitsContext" />
  - name: element()
    uid: adaptive-expressions-ie11.CommonRegexParser.element
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function element(): ElementContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.ElementContext" />
  - name: expr()
    uid: adaptive-expressions-ie11.CommonRegexParser.expr
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function expr(): ExprContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.ExprContext" />
  - name: letter()
    uid: adaptive-expressions-ie11.CommonRegexParser.letter
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function letter(): LetterContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.LetterContext" />
  - name: literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function literal(): LiteralContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.LiteralContext" />
  - name: name()
    uid: adaptive-expressions-ie11.CommonRegexParser.name
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function name(): NameContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.NameContext" />
  - name: non_capture()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_capture
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function non_capture(): Non_captureContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Non_captureContext" />
  - name: non_close_paren()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_close_paren
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function non_close_paren(): Non_close_parenContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Non_close_parenContext" />
  - name: non_close_parens()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_close_parens
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function non_close_parens(): Non_close_parensContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Non_close_parensContext" />
  - name: number()
    uid: adaptive-expressions-ie11.CommonRegexParser.number
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function number(): NumberContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.NumberContext" />
  - name: octal_char()
    uid: adaptive-expressions-ie11.CommonRegexParser.octal_char
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function octal_char(): Octal_charContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Octal_charContext" />
  - name: octal_digit()
    uid: adaptive-expressions-ie11.CommonRegexParser.octal_digit
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function octal_digit(): Octal_digitContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Octal_digitContext" />
  - name: option()
    uid: adaptive-expressions-ie11.CommonRegexParser.option
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function option(): OptionContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.OptionContext" />
  - name: option_flag()
    uid: adaptive-expressions-ie11.CommonRegexParser.option_flag
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function option_flag(): Option_flagContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Option_flagContext" />
  - name: parse()
    uid: adaptive-expressions-ie11.CommonRegexParser.parse
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function parse(): ParseContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.ParseContext" />
  - name: quantifier()
    uid: adaptive-expressions-ie11.CommonRegexParser.quantifier
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function quantifier(): QuantifierContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.QuantifierContext" />
  - name: quantifier_type()
    uid: adaptive-expressions-ie11.CommonRegexParser.quantifier_type
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function quantifier_type(): Quantifier_typeContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Quantifier_typeContext" />
  - name: shared_atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.shared_atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function shared_atom(): Shared_atomContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Shared_atomContext" />
  - name: shared_literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.shared_literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function shared_literal(): Shared_literalContext'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Shared_literalContext" />
extends: Parser
