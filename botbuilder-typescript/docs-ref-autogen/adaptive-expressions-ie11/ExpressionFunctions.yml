### YamlMime:TSType
name: ExpressionFunctions
uid: adaptive-expressions-ie11.ExpressionFunctions
package: adaptive-expressions-ie11
summary: |-
  <summary>
   Definition of default built-in functions for expressions.
   </summary>
   <remarks>
   These functions are largely from WDL https://docs.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference
   with a few extensions like infix operators for math, logic and comparisons.
   This class also has some methods that are useful to use when defining custom functions.
   You can always construct a <see cref="ExpressionEvaluator"/> directly which gives the maximum amount of control over validation and evaluation.
   Validators are static checkers that should throw an exception if something is not valid statically.
   Evaluators are called to evaluate an expression and should try not to throw.
   There are some evaluators in this file that take in a verifier that is called at runtime to verify arguments are proper.
   </remarks>
fullName: ExpressionFunctions
remarks: ''
isDeprecated: false
type: class
properties:
  - name: standardFunctions
    uid: adaptive-expressions-ie11.ExpressionFunctions.standardFunctions
    package: adaptive-expressions-ie11
    summary: Read only Dictionary of built in functions.
    fullName: standardFunctions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static standardFunctions: ReadonlyMap<string, ExpressionEvaluator>'
      return:
        description: ''
        type: >-
          ReadonlyMap&lt;string, <xref
          uid="adaptive-expressions-ie11.ExpressionEvaluator" />&gt;
