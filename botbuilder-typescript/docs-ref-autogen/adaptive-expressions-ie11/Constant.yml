### YamlMime:TSType
name: Constant
uid: adaptive-expressions-ie11.Constant
package: adaptive-expressions-ie11
summary: Construct an expression constant.
fullName: Constant
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: Constant(any)
    uid: adaptive-expressions-ie11.Constant.constructor
    package: adaptive-expressions-ie11
    summary: >-
      Initializes a new instance of the
      [Constant](xref:adaptive-expressions.Constant) class.

      Constructs an expression constant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new Constant(value: any)'
      parameters:
        - id: value
          type: any
          description: Constant value.
properties:
  - name: value
    uid: adaptive-expressions-ie11.Constant.value
    package: adaptive-expressions-ie11
    summary: Sets constant value.
    fullName: value
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'value: any'
      return:
        description: ''
        type: any
inheritedProperties:
  - name: children
    uid: adaptive-expressions-ie11.Constant.children
    package: adaptive-expressions-ie11
    summary: Children expressions.
    fullName: children
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'children: Expression[]'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.Expression" />[]
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.children](xref:adaptive-expressions-ie11.Expression.children)
  - name: evaluator
    uid: adaptive-expressions-ie11.Constant.evaluator
    package: adaptive-expressions-ie11
    summary: Evaluator of expression.
    fullName: evaluator
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'evaluator: ExpressionEvaluator'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.ExpressionEvaluator" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.evaluator](xref:adaptive-expressions-ie11.Expression.evaluator)
  - name: functions
    uid: adaptive-expressions-ie11.Constant.functions
    package: adaptive-expressions-ie11
    summary: >-
      Dictionary of function => ExpressionEvaluator.

      This is all available functions, you can add custom functions to it, but
      you cannot

      replace builtin functions.  If you clear the dictionary, it will be reset
      to the built in functions.
    fullName: functions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static functions: FunctionTable'
      return:
        description: ''
        type: <xref uid="adaptive-expressions-ie11.FunctionTable" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.functions](xref:adaptive-expressions-ie11.Expression.functions)
  - name: returnType
    uid: adaptive-expressions-ie11.Constant.returnType
    package: adaptive-expressions-ie11
    summary: Expected result of evaluating the expression.
    fullName: returnType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'returnType: ReturnType'
      return:
        description: The expected result of evaluating the expression.
        type: <xref uid="adaptive-expressions-ie11.ReturnType" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.returnType](xref:adaptive-expressions-ie11.Expression.returnType)
  - name: type
    uid: adaptive-expressions-ie11.Constant.type
    package: adaptive-expressions-ie11
    summary: Type of expression.
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        description: The type of the expression.
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.type](xref:adaptive-expressions-ie11.Expression.type)
  - name: validate
    uid: adaptive-expressions-ie11.Constant.validate
    package: adaptive-expressions-ie11
    summary: Validate immediate expression.
    fullName: validate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'validate: () => void'
      return:
        description: ''
        type: () =&gt; void
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.validate](xref:adaptive-expressions-ie11.Expression.validate)
inheritedMethods:
  - name: andExpression(Expression[])
    uid: adaptive-expressions-ie11.Constant.andExpression
    package: adaptive-expressions-ie11
    summary: Construct and validate an And expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function andExpression(children: Expression[]): Expression'
      parameters:
        - id: children
          type: <xref uid="adaptive-expressions-ie11.Expression" />[]
          description: Child clauses.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.andExpression](xref:adaptive-expressions-ie11.Expression.andExpression)
  - name: equalsExpression(Expression[])
    uid: adaptive-expressions-ie11.Constant.equalsExpression
    package: adaptive-expressions-ie11
    summary: Construct and validate an Equals expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function equalsExpression(children: Expression[]): Expression'
      parameters:
        - id: children
          type: <xref uid="adaptive-expressions-ie11.Expression" />[]
          description: Child clauses.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.equalsExpression](xref:adaptive-expressions-ie11.Expression.equalsExpression)
  - name: lambaExpression(EvaluateExpressionDelegate)
    uid: adaptive-expressions-ie11.Constant.lambaExpression
    package: adaptive-expressions-ie11
    summary: Construct an expression from a EvaluateExpressionDelegate
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function lambaExpression(func: EvaluateExpressionDelegate):
        Expression
      parameters:
        - id: func
          type: <xref uid="adaptive-expressions-ie11.EvaluateExpressionDelegate" />
          description: Function to create an expression from.
      return:
        description: The new expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.lambaExpression](xref:adaptive-expressions-ie11.Expression.lambaExpression)
  - name: 'lambda((arg0: any) => any)'
    uid: adaptive-expressions-ie11.Constant.lambda
    package: adaptive-expressions-ie11
    summary: |-
      Construct an expression from a lamba expression over the state.
      Exceptions will be caught and surfaced as an error string.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function lambda(func: (arg0: any) => any): Expression'
      parameters:
        - id: func
          type: '(arg0: any) =&gt; any'
          description: ambda expression to evaluate.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.lambda](xref:adaptive-expressions-ie11.Expression.lambda)
  - name: lookup(string)
    uid: adaptive-expressions-ie11.Constant.lookup
    package: adaptive-expressions-ie11
    summary: >-
      Lookup an
      [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator)
      function by name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function lookup(functionName: string): ExpressionEvaluator'
      parameters:
        - id: functionName
          type: string
          description: Name of function to lookup.
      return:
        description: >-
          An
          [ExpressionEvaluator](xref:adaptive-expressions.ExpressionEvaluator)
          corresponding to the function name.
        type: <xref uid="adaptive-expressions-ie11.ExpressionEvaluator" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.lookup](xref:adaptive-expressions-ie11.Expression.lookup)
  - name: makeExpression(string, ExpressionEvaluator, Expression[])
    uid: adaptive-expressions-ie11.Constant.makeExpression
    package: adaptive-expressions-ie11
    summary: Make an expression and validate it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function makeExpression(type: string, evaluator:
        ExpressionEvaluator, children: Expression[]): Expression
      parameters:
        - id: type
          type: string
          description: Type of expression from ExpressionType.
        - id: evaluator
          type: <xref uid="adaptive-expressions-ie11.ExpressionEvaluator" />
          description: Information about how to validate and evaluate expression.
        - id: children
          type: <xref uid="adaptive-expressions-ie11.Expression" />[]
          description: Child expressions.
      return:
        description: The new expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.makeExpression](xref:adaptive-expressions-ie11.Expression.makeExpression)
  - name: notExpression(Expression)
    uid: adaptive-expressions-ie11.Constant.notExpression
    package: adaptive-expressions-ie11
    summary: Construct and validate an Not expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function notExpression(child: Expression): Expression'
      parameters:
        - id: child
          type: <xref uid="adaptive-expressions-ie11.Expression" />
          description: Child clauses.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.notExpression](xref:adaptive-expressions-ie11.Expression.notExpression)
  - name: orExpression(Expression[])
    uid: adaptive-expressions-ie11.Constant.orExpression
    package: adaptive-expressions-ie11
    summary: Construct and validate an Or expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function orExpression(children: Expression[]): Expression'
      parameters:
        - id: children
          type: <xref uid="adaptive-expressions-ie11.Expression" />[]
          description: Child clauses.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.orExpression](xref:adaptive-expressions-ie11.Expression.orExpression)
  - name: parse(string, EvaluatorLookup)
    uid: adaptive-expressions-ie11.Constant.parse
    package: adaptive-expressions-ie11
    summary: >-
      Parse an expression string into an
      [Expression](xref:adaptive-expressions.Expression) object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function parse(expression: string, lookup?: EvaluatorLookup):
        Expression
      parameters:
        - id: expression
          type: string
          description: Expression string.
        - id: lookup
          type: <xref uid="adaptive-expressions-ie11.EvaluatorLookup" />
          description: >-
            Optional.
            [EvaluatorLookup](xref:adaptive-expressions.EvaluatorLookup)
            function lookup when parsing the expression. Default is
            [Expression.lookup](xref:adaptive-expressions.Expression.lookup)
            which uses
            [Expression.functions](xref:adaptive-expressions.Expression.functions)
            table.
      return:
        description: The expression object.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.parse](xref:adaptive-expressions-ie11.Expression.parse)
  - name: references()
    uid: adaptive-expressions-ie11.Constant.references
    package: adaptive-expressions-ie11
    summary: >-
      Return the static reference paths to memory.

      Return all static paths to memory.  If there is a computed element index,
      then the path is terminated there,

      but you might get other paths from the computed part as well.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function references(): string[]'
      return:
        description: List of the static reference paths.
        type: string[]
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.references](xref:adaptive-expressions-ie11.Expression.references)
  - name: 'referenceWalk(Expression, (arg0: Expression) => boolean)'
    uid: adaptive-expressions-ie11.Constant.referenceWalk
    package: adaptive-expressions-ie11
    summary: >-
      Walking function for identifying static memory references in an
      expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function referenceWalk(expression: Expression, extension?: (arg0:
        Expression) => boolean): { path: string, refs: Set<string> }
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions-ie11.Expression" />
          description: Expression to analyze.
        - id: extension
          type: '(arg0: Expression) =&gt; boolean'
          description: >-
            If present, called to override lookup for things like template
            expansion.
      return:
        description: Accessor path of expression.
        type: '{ path: string, refs: Set&lt;string&gt; }'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.referenceWalk](xref:adaptive-expressions-ie11.Expression.referenceWalk)
  - name: setPathToValue(Expression, any)
    uid: adaptive-expressions-ie11.Constant.setPathToValue
    package: adaptive-expressions-ie11
    summary: Construct and validate an Set a property expression to a value expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function setPathToValue(property: Expression, value: any):
        Expression
      parameters:
        - id: property
          type: <xref uid="adaptive-expressions-ie11.Expression" />
          description: property expression.
        - id: value
          type: any
          description: value expression.
      return:
        description: New expression.
        type: <xref uid="adaptive-expressions-ie11.Expression" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.setPathToValue](xref:adaptive-expressions-ie11.Expression.setPathToValue)
  - name: tryEvaluate(any, Options)
    uid: adaptive-expressions-ie11.Constant.tryEvaluate
    package: adaptive-expressions-ie11
    summary: Evaluate the expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function tryEvaluate(state: any, options?: Options): ValueWithError'
      parameters:
        - id: state
          type: any
          description: >-
            Global state to evaluate accessor expressions against. Can be
            Dictionary, otherwise reflection is used to access property and then
            indexer.
        - id: options
          type: <xref uid="adaptive-expressions-ie11.Options" />
          description: Options used in the evaluation.
      return:
        description: >-
          Computed value and an error string. If the string is non-null, then
          there was an evaluation error.
        type: <xref uid="adaptive-expressions-ie11.ValueWithError" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.tryEvaluate](xref:adaptive-expressions-ie11.Expression.tryEvaluate)
  - name: validateTree()
    uid: adaptive-expressions-ie11.Constant.validateTree
    package: adaptive-expressions-ie11
    summary: Recursively validate the expression tree.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function validateTree()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Expression.validateTree](xref:adaptive-expressions-ie11.Expression.validateTree)
methods:
  - name: deepEquals(Expression)
    uid: adaptive-expressions-ie11.Constant.deepEquals
    package: adaptive-expressions-ie11
    summary: >-
      Determines if the current
      [Expression](xref:adaptive-expressions.Expression) instance is deep equal
      to another one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deepEquals(other: Expression): boolean'
      parameters:
        - id: other
          type: <xref uid="adaptive-expressions-ie11.Expression" />
          description: >-
            The other [Expression](xref:adaptive-expressions.Expression)
            instance to compare.
      return:
        description: >-
          A boolean value indicating whether the two expressions are deep equal
          (`true`) or not (`false`).
        type: boolean
  - name: toString()
    uid: adaptive-expressions-ie11.Constant.toString
    package: adaptive-expressions-ie11
    summary: Returns a string that represents the current constant object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: A string that represents the current constant object.
        type: string
extends: <xref uid="adaptive-expressions-ie11.Expression" />
