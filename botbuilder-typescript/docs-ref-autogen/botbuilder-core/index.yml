### YamlMime:TSPackage
uid: botbuilder-core
name: botbuilder-core
summary: ''
type: package
classes:
  - botbuilder-core.ActivityFactory
  - botbuilder-core.ActivityHandler
  - botbuilder-core.ActivityHandlerBase
  - botbuilder-core.AutoSaveStateMiddleware
  - botbuilder-core.BotAdapter
  - botbuilder-core.BotComponent
  - botbuilder-core.BotState
  - botbuilder-core.BotStatePropertyAccessor
  - botbuilder-core.BotStateSet
  - botbuilder-core.NullTelemetryClient
  - botbuilder-core.BrowserLocalStorage
  - botbuilder-core.BrowserSessionStorage
  - botbuilder-core.CardFactory
  - botbuilder-core.CloudAdapterBase
  - botbuilder-core.ComponentRegistration
  - botbuilder-core.ConfigurationBotFrameworkAuthentication
  - botbuilder-core.ConfigurationServiceClientCredentialFactory
  - botbuilder-core.ConversationState
  - botbuilder-core.InvokeException
  - botbuilder-core.MemoryStorage
  - botbuilder-core.MemoryTranscriptStore
  - botbuilder-core.MessageFactory
  - botbuilder-core.MiddlewareSet
  - botbuilder-core.PrivateConversationState
  - botbuilder-core.QueueStorage
  - botbuilder-core.RegisterClassMiddleware
  - botbuilder-core.ShowTypingMiddleware
  - botbuilder-core.SkillConversationIdFactory
  - botbuilder-core.SkillConversationIdFactoryBase
  - botbuilder-core.SkypeMentionNormalizeMiddleware
  - botbuilder-core.StringUtils
  - botbuilder-core.TelemetryConstants
  - botbuilder-core.TelemetryLoggerMiddleware
  - botbuilder-core.TestAdapter
  - botbuilder-core.TestFlow
  - botbuilder-core.ConsoleTranscriptLogger
  - botbuilder-core.TranscriptLoggerMiddleware
  - botbuilder-core.TurnContext
  - botbuilder-core.TurnContextStateCollection
  - botbuilder-core.UserState
typeAliases:
  - botbuilder-core.BotHandler
  - botbuilder-core.ConfigurationBotFrameworkAuthenticationOptions
  - botbuilder-core.ConfigurationServiceClientCredentialFactoryOptions
  - botbuilder-core.MiddlewareHandler
  - botbuilder-core.StorageKeyFactory
  - botbuilder-core.TestActivityInspector
  - botbuilder-core.DeleteActivityHandler
  - botbuilder-core.SendActivitiesHandler
  - botbuilder-core.UpdateActivityHandler
functions:
  - name: 'useBotState(BotAdapter, BotState[])'
    uid: botbuilder-core.useBotState
    package: botbuilder-core
    summary: >-
      Adds middleware to the adapter to register one or more BotState objects on
      the turn context.

      The middleware registers the state objects on the turn context at the
      start of each turn.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function useBotState(botAdapter: BotAdapter, botStates: BotState[]):
        BotAdapter
      parameters:
        - id: botAdapter
          type: <xref uid="botbuilder-core.BotAdapter" />
          description: The adapter on which to register the state objects.
        - id: botStates
          type: '<xref uid="botbuilder-core.BotState" />[]'
          description: The state objects to register.
      return:
        description: The updated adapter.
        type: <xref uid="botbuilder-core.BotAdapter" />
  - name: 'assertBotComponent(unknown, unknown[])'
    uid: botbuilder-core.assertBotComponent
    package: botbuilder-core
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `BotComponent.z.parse()` instead.
    syntax:
      content: 'function assertBotComponent(val: unknown, _args: unknown[]): asserts'
      parameters:
        - id: val
          type: unknown
          description: ''
        - id: _args
          type: 'unknown[]'
          description: ''
      return:
        description: ''
        type: asserts
  - name: >-
      telemetryTrackDialogView(BotTelemetryClient, string, [key: string]: any,
      [key: string]: number)
    uid: botbuilder-core.telemetryTrackDialogView
    package: botbuilder-core
    summary: >-
      Logs a DialogView using the
      [trackPageView](xref:botbuilder-core.BotTelemetryClient.trackPageView)
      method on the
      [BotTelemetryClient](xref:botbuilder-core.BotTelemetryClient) if
      [BotPageViewTelemetryClient](xref:botbuilder-core.BotPageViewTelemetryClient)
      has been implemented.

      Alternatively logs the information out via TrackTrace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function telemetryTrackDialogView(telemetryClient: BotTelemetryClient,
        dialogName: string, properties?: [key: string]: any, metrics?: [key:
        string]: number)
      parameters:
        - id: telemetryClient
          type: <xref uid="botbuilder-core.BotTelemetryClient" />
          description: >-
            TelemetryClient that implements
            [BotTelemetryClient](xref:botbuilder-core.BotTelemetryClient).
        - id: dialogName
          type: string
          description: Name of the dialog to log the entry / start for.
        - id: properties
          type: '[key: string]\: any'
          description: Named string values you can use to search and classify events.
        - id: metrics
          type: '[key: string]\: number'
          description: |
            Measurements associated with this event.
  - name: >-
      createBotFrameworkAuthenticationFromConfiguration(Configuration,
      ServiceClientCredentialsFactory, AuthenticationConfiguration, (input:
      RequestInfo, init?: RequestInit) => Promise<Response>,
      ConnectorClientOptions)
    uid: botbuilder-core.createBotFrameworkAuthenticationFromConfiguration
    package: botbuilder-core
    summary: >-
      Creates a new instance of the
      [ConfigurationBotFrameworkAuthentication](xref:botbuilder-core.ConfigurationBotFrameworkAuthentication)
      class.
    remarks: >-
      The
      [Configuration](xref:botbuilder-dialogs-adaptive-runtime-core.Configuration)
      instance provided to the constructor should

      have the desired authentication values available at the root, using the
      properties of
      [ConfigurationBotFrameworkAuthenticationOptions](xref:botbuilder-core.ConfigurationBotFrameworkAuthenticationOptions)
      as its keys.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createBotFrameworkAuthenticationFromConfiguration(configuration:
        Configuration, credentialsFactory?: ServiceClientCredentialsFactory,
        authConfiguration?: AuthenticationConfiguration,
        botFrameworkClientFetch?: (input: RequestInfo, init?: RequestInit) =>
        Promise<Response>, connectorClientOptions?: ConnectorClientOptions):
        BotFrameworkAuthentication
      parameters:
        - id: configuration
          type: Configuration
          description: >-
            A
            [Configuration](xref:botbuilder-dialogs-adaptive-runtime-core.Configuration)
            instance.
        - id: credentialsFactory
          type: ServiceClientCredentialsFactory
          description: >-
            A
            [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory)
            instance.
        - id: authConfiguration
          type: AuthenticationConfiguration
          description: >-
            A
            [Configuration](xref:botframework-connector.AuthenticationConfiguration)
            object.
        - id: botFrameworkClientFetch
          type: >-
            (input: RequestInfo, init?: RequestInit) =&gt;
            Promise&lt;Response&gt;
          description: >-
            A custom Fetch implementation to be used in the
            [BotFrameworkClient](xref:botframework-connector.BotFrameworkClient).
        - id: connectorClientOptions
          type: ConnectorClientOptions
          description: >-
            A
            [ConnectorClientOptions](xref:botframework-connector.ConnectorClientOptions)
            object.
      return:
        description: >-
          A
          [ConfigurationBotFrameworkAuthentication](xref:botbuilder-core.ConfigurationBotFrameworkAuthentication)
          instance.
        type: BotFrameworkAuthentication
  - name: createServiceClientCredentialFactoryFromConfiguration(Configuration)
    uid: botbuilder-core.createServiceClientCredentialFactoryFromConfiguration
    package: botbuilder-core
    summary: >-
      Creates a new instance of the
      [ConfigurationServiceClientCredentialFactory](xref:botbuilder-core.ConfigurationServiceClientCredentialFactory)
      class.
    remarks: >-
      The
      [Configuration](xref:botbuilder-dialogs-adaptive-runtime-core.Configuration)
      instance provided to the constructor should

      have the desired authentication values available at the root, using the
      properties of
      [ConfigurationServiceClientCredentialFactoryOptions](xref:botbuilder-core.ConfigurationServiceClientCredentialFactoryOptions)
      as its keys.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createServiceClientCredentialFactoryFromConfiguration(configuration:
        Configuration): ConfigurationServiceClientCredentialFactory
      parameters:
        - id: configuration
          type: Configuration
          description: >-
            A
            [Configuration](xref:botbuilder-dialogs-adaptive-runtime-core.Configuration)
            instance.
      return:
        description: >-
          A
          [ConfigurationServiceClientCredentialFactory](xref:botbuilder-core.ConfigurationServiceClientCredentialFactory)
          instance.
        type: >-
          <xref
          uid="botbuilder-core.ConfigurationServiceClientCredentialFactory" />
  - name: 'assertStoreItems(unknown, unknown[])'
    uid: botbuilder-core.assertStoreItems
    package: botbuilder-core
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `zod.record(zod.unknown())` instead.
    syntax:
      content: 'function assertStoreItems(val: unknown, _args: unknown[]): asserts'
      parameters:
        - id: val
          type: unknown
          description: ''
        - id: _args
          type: 'unknown[]'
          description: ''
      return:
        description: ''
        type: asserts
  - name: calculateChangeHash(StoreItem)
    uid: botbuilder-core.calculateChangeHash
    package: botbuilder-core
    summary: Utility function to calculate a change hash for a `StoreItem`.
    remarks: >-
      This example calculates a change hash for an object that's been read in
      and then only writes it

      back out if it's been modified:


      ```JavaScript

      // Calculate state objects initial hash

      const hash = calculateChangeHash(state);


      // Process the received activity

      await processActivity(context, state);


      // Save state if changed

      if (calculateChangeHash(state) !== hash) {
         await storage.write({ 'botState': state });
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function calculateChangeHash(item: StoreItem): string'
      parameters:
        - id: item
          type: <xref uid="botbuilder-core.StoreItem" />
          description: Item to calculate the change hash for.
      return:
        description: change hash string
        type: string
interfaces:
  - botbuilder-core.CachedBotState
  - botbuilder-core.StatePropertyAccessor
  - botbuilder-core.BotPageViewTelemetryClient
  - botbuilder-core.BotTelemetryClient
  - botbuilder-core.TelemetryDependency
  - botbuilder-core.TelemetryEvent
  - botbuilder-core.TelemetryException
  - botbuilder-core.TelemetryPageView
  - botbuilder-core.TelemetryTrace
  - botbuilder-core.CoreAppCredentials
  - botbuilder-core.CoreWebResource
  - botbuilder-core.ExtendedUserTokenProvider
  - botbuilder-core.IntentScore
  - botbuilder-core.Middleware
  - botbuilder-core.PropertyManager
  - botbuilder-core.RecognizerResult
  - botbuilder-core.BotFrameworkSkill
  - botbuilder-core.SkillConversationIdFactoryOptions
  - botbuilder-core.SkillConversationReference
  - botbuilder-core.Storage
  - botbuilder-core.StoreItem
  - botbuilder-core.StoreItems
  - botbuilder-core.PagedResult
  - botbuilder-core.TranscriptInfo
  - botbuilder-core.TranscriptLogger
  - botbuilder-core.TranscriptStore
  - botbuilder-core.IUserTokenProvider
  - botbuilder-core.TokenPollingSettings
enums:
  - botbuilder-core.Severity
