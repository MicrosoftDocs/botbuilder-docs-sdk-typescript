### YamlMime:UniversalReference
items:
  - uid: botbuilder-core.PrivateConversationState
    name: PrivateConversationState
    fullName: PrivateConversationState
    children:
      - botbuilder-core.PrivateConversationState.getStorageKey
      - botbuilder-core.PrivateConversationState.constructor
    langs:
      - typeScript
    type: class
    summary: Reads and writes PrivateConversation state for your bot to storage.
    extends:
      name: botbuilder-core.BotState
    package: botbuilder-core
    remarks: >-
      Each PrivateConversation your bot has with a user or group will have its
      own isolated storage object

      that can be used to persist PrivateConversation tracking information
      between turns of the PrivateConversation.

      This state information can be reset at any point by calling
      [clear()](#clear).


      Since the `PrivateConversationState` class derives from `BotState` it can
      be used as middleware to

      automatically read and write the bots PrivateConversation state for each
      turn. And it also means it

      can be passed to a `BotStateSet` middleware instance to be managed in
      parallel with other state

      providers.


      ```JavaScript

      const { PrivateConversationState, MemoryStorage } = require('botbuilder');


      const PrivateConversationState = new PrivateConversationState(new
      MemoryStorage());

      adapter.use(PrivateConversationState);


      server.post('/api/messages', (req, res) => {
         adapter.processActivity(req, res, async (context) => {
            // Get loaded PrivateConversation state
            const convo = PrivateConversationState.get(context);

            // ... route activity ...

         });
      });

      ```
  - uid: botbuilder-core.PrivateConversationState.getStorageKey
    name: getStorageKey
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the storage key for the current PrivateConversation state.
    syntax:
      content: 'function getStorageKey(context: TurnContext)'
      parameters:
        - id: context
          type:
            - botbuilder-core.TurnContext
          description: |
            Context for current turn of PrivateConversation with the user.
      return:
        type:
          - string | undefined
    package: botbuilder-core
  - uid: botbuilder-core.PrivateConversationState.constructor
    name: PrivateConversationState
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new PrivateConversationState instance.
    syntax:
      content: 'new PrivateConversationState(storage: Storage, namespace: string)'
      parameters:
        - id: storage
          type:
            - botbuilder-core.Storage
          description: Storage provider to persist PrivateConversation state to.
        - id: namespace
          type:
            - string
          description: >
            (Optional) namespace to append to storage keys. Defaults to an empty
            string.
    package: botbuilder-core
references:
  - uid: botbuilder-core.BotState
    name: BotState
    spec.typeScript:
      - name: BotState
        fullName: BotState
        uid: botbuilder-core.BotState
  - uid: botbuilder-core.Storage
    name: Storage
    spec.typeScript:
      - name: Storage
        fullName: Storage
        uid: botbuilder-core.Storage
  - uid: botbuilder-core.TurnContext
    name: TurnContext
    spec.typeScript:
      - name: TurnContext
        fullName: TurnContext
        uid: botbuilder-core.TurnContext
