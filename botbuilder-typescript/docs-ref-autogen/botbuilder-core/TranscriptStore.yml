### YamlMime:TSType
name: TranscriptStore
uid: botbuilder-core.TranscriptStore
package: botbuilder-core
summary: Transcript logger stores activities for conversations for recall.
fullName: TranscriptStore
remarks: ''
isPreview: false
isDeprecated: false
type: interface
inheritedMethods:
  - name: logActivity(Activity)
    uid: botbuilder-core.TranscriptStore.logActivity
    package: botbuilder-core
    summary: Log an activity to the transcript.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function logActivity(activity: Activity): void | Promise<void>'
      parameters:
        - id: activity
          type: Activity
          description: |
            Activity being logged.
      return:
        description: ''
        type: void | Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TranscriptLogger.logActivity](xref:botbuilder-core.TranscriptLogger.logActivity)
methods:
  - name: 'deleteTranscript(string, string)'
    uid: botbuilder-core.TranscriptStore.deleteTranscript
    package: botbuilder-core
    summary: Delete a specific conversation and all of its activities.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTranscript(channelId: string, conversationId: string):
        Promise<void>
      parameters:
        - id: channelId
          type: string
          description: Channel Id where conversation took place.
        - id: conversationId
          type: string
          description: |
            Id of the conversation to delete.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'getTranscriptActivities(string, string, string, Date)'
    uid: botbuilder-core.TranscriptStore.getTranscriptActivities
    package: botbuilder-core
    summary: Get activities for a conversation (Aka the transcript)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date):
        Promise<PagedResult<Activity>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: conversationId
          type: string
          description: Conversation Id.
        - id: continuationToken
          type: string
          description: Continuation token to page through results.
        - id: startDate
          type: Date
          description: |
            Earliest time to include.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="botbuilder-core.PagedResult"
          />&lt;Activity&gt;&gt;
  - name: 'listTranscripts(string, string)'
    uid: botbuilder-core.TranscriptStore.listTranscripts
    package: botbuilder-core
    summary: List conversations in the channelId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTranscripts(channelId: string, continuationToken?: string):
        Promise<PagedResult<TranscriptInfo>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: continuationToken
          type: string
          description: |
            Continuation token to page through results.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="botbuilder-core.PagedResult" />&lt;<xref
          uid="botbuilder-core.TranscriptInfo" />&gt;&gt;
extends: <xref uid="botbuilder-core.TranscriptLogger" />
