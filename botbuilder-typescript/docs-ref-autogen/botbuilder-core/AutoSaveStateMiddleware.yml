### YamlMime:TSType
name: AutoSaveStateMiddleware
uid: botbuilder-core.AutoSaveStateMiddleware
package: botbuilder-core
summary: >-
  Middleware that will automatically save any state changes at the end of the
  turn.
fullName: AutoSaveStateMiddleware
remarks: >-
  The `AutoSaveStateMiddleware` class should be added towards the top of your
  bot's middleware

  stack, before any other components that use state.  Any `BotState` plugins
  passed to the

  constructor will have their `BotState.saveChanges()` method called upon
  successful completion

  of the turn.


  This example shows boilerplate code for reading and writing conversation and
  user state within

  a bot:


  ```JavaScript

  const { AutoSaveStateMiddleware, ConversationState, UserState, MemoryStorage }
  = require('botbuilder');


  const storage = new MemoryStorage();

  const conversationState = new ConversationState(storage);

  const userState = new UserState(storage);

  adapter.use(new AutoSaveStateMiddleware(conversationState, userState));


  server.post('/api/messages', (req, res) => {
     adapter.processActivity(req, res, async (turnContext) => {
        // Get state
        const convo = await conversationState.load(turnContext);
        const user = await userState.load(turnContext);

        // ... route activity ...
        // ...make changes to state objects...
        // ... no need to call userState.saveChanges() or conversationState.saveChanges() anymore!
     });
  });

  ```
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'AutoSaveStateMiddleware(BotState[])'
    uid: botbuilder-core.AutoSaveStateMiddleware.constructor
    package: botbuilder-core
    summary: Creates a new AutoSaveStateMiddleware instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AutoSaveStateMiddleware(botStates: BotState[])'
      parameters:
        - id: botStates
          type: '<xref uid="botbuilder-core.BotState" />[]'
          description: >
            One or more BotState plugins to automatically save at the end of the
            turn.
properties:
  - name: botStateSet
    uid: botbuilder-core.AutoSaveStateMiddleware.botStateSet
    package: botbuilder-core
    summary: Set of `BotState` plugins being automatically saved.
    fullName: botStateSet
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'botStateSet: BotStateSet'
      return:
        description: ''
        type: <xref uid="botbuilder-core.BotStateSet" />
methods:
  - name: 'add(BotState[])'
    uid: botbuilder-core.AutoSaveStateMiddleware.add
    package: botbuilder-core
    summary: Adds additional `BotState` plugins to be saved.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add(botStates: BotState[]): this'
      parameters:
        - id: botStates
          type: '<xref uid="botbuilder-core.BotState" />[]'
          description: One or more BotState plugins to add.
      return:
        description: The updated BotStateSet object.
        type: this
  - name: 'onTurn(TurnContext, () => Promise<void>)'
    uid: botbuilder-core.AutoSaveStateMiddleware.onTurn
    package: botbuilder-core
    summary: >-
      Called by the adapter (for example, a `BotFrameworkAdapter`) at runtime in
      order to process an inbound [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onTurn(context: TurnContext, next: () => Promise<void>):
        Promise<void>
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: The context object for this turn.
        - id: next
          type: () =&gt; Promise&lt;void&gt;
          description: |
            The next delegate function.
      return:
        description: ''
        type: Promise&lt;void&gt;
