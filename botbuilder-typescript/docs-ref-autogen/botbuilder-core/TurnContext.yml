### YamlMime:TSType
name: TurnContext
uid: botbuilder-core.TurnContext
package: botbuilder-core
summary: Provides context for a turn of a bot.
fullName: TurnContext
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'TurnContext(BotAdapter, Partial<Activity>)'
    uid: botbuilder-core.TurnContext.constructor
    package: botbuilder-core
    summary: >-
      Creates an new instance of the
      [TurnContext](xref:xref:botbuilder-core.TurnContext) class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new TurnContext(adapterOrContext: BotAdapter, request:
        Partial<Activity>)
      parameters:
        - id: adapterOrContext
          type: <xref uid="botbuilder-core.BotAdapter" />
          description: The adapter creating the context.
        - id: request
          type: Partial&lt;Activity&gt;
          description: |
            The incoming activity for the turn.
  - name: TurnContext(TurnContext)
    uid: botbuilder-core.TurnContext.constructor_1
    package: botbuilder-core
    summary: >-
      Creates an new instance of the
      [TurnContext](xref:xref:botbuilder-core.TurnContext) class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TurnContext(adapterOrContext: TurnContext)'
      parameters:
        - id: adapterOrContext
          type: <xref uid="botbuilder-core.TurnContext" />
          description: The adapter creating the context.
properties:
  - name: activity
    uid: botbuilder-core.TurnContext.activity
    package: botbuilder-core
    summary: Gets the activity associated with this turn.
    fullName: activity
    isPreview: false
    isDeprecated: false
    syntax:
      content: Activity activity
      return:
        type: Activity
        description: ''
  - name: adapter
    uid: botbuilder-core.TurnContext.adapter
    package: botbuilder-core
    summary: Gets the bot adapter that created this context object.
    fullName: adapter
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotAdapter adapter
      return:
        type: <xref uid="botbuilder-core.BotAdapter" />
        description: ''
  - name: bufferedReplyActivities
    uid: botbuilder-core.TurnContext.bufferedReplyActivities
    package: botbuilder-core
    summary: >-
      List of activities to send when `context.activity.deliveryMode ==
      'expectReplies'`.
    fullName: bufferedReplyActivities
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public bufferedReplyActivities: Partial<Activity>[] = []'
      return:
        type: 'Partial&lt;Activity&gt;[]'
        description: ''
  - name: responded
    uid: botbuilder-core.TurnContext.responded
    package: botbuilder-core
    summary: |-
      Indicates whether the bot has replied to the user this turn.
      Sets the response flag on the current turn context.
    fullName: responded
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean responded
      return:
        type: boolean
        description: ''
  - name: turnState
    uid: botbuilder-core.TurnContext.turnState
    package: botbuilder-core
    summary: Gets the services registered on this context object.
    fullName: turnState
    isPreview: false
    isDeprecated: false
    syntax:
      content: TurnContextStateCollection turnState
      return:
        type: <xref uid="botbuilder-core.TurnContextStateCollection" />
        description: ''
methods:
  - name: >-
      applyConversationReference(Partial<Activity>,
      Partial<ConversationReference>, boolean)
    uid: botbuilder-core.TurnContext.applyConversationReference
    package: botbuilder-core
    summary: >-
      Updates an activity with the delivery information from an existing
      conversation reference.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function applyConversationReference(activity: Partial<Activity>,
        reference: Partial<ConversationReference>, isIncoming: boolean)
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: The activity to update.
        - id: reference
          type: Partial&lt;ConversationReference&gt;
          description: The conversation reference to copy delivery information from.
        - id: isIncoming
          type: boolean
          description: >
            Optional. `true` to treat the activity as an incoming activity,
            where the
                 bot is the recipient; otherwise, `false`. Default is `false`, and the activity will show
                 the bot as the sender.
      return:
        type: Partial&lt;Activity&gt;
        description: ''
  - name: deleteActivity(string | Partial<ConversationReference>)
    uid: botbuilder-core.TurnContext.deleteActivity
    package: botbuilder-core
    summary: Asynchronously deletes a previously sent activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteActivity(idOrReference: string |
        Partial<ConversationReference>)
      parameters:
        - id: idOrReference
          type: string | Partial&lt;ConversationReference&gt;
          description: |
            ID or conversation reference for the activity to delete.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getConversationReference(Partial<Activity>)
    uid: botbuilder-core.TurnContext.getConversationReference
    package: botbuilder-core
    summary: Copies conversation reference information from an activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getConversationReference(activity: Partial<Activity>)'
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: |
            The activity to get the information from.
      return:
        type: Partial&lt;ConversationReference&gt;
        description: ''
  - name: getMentions(Partial<Activity>)
    uid: botbuilder-core.TurnContext.getMentions
    package: botbuilder-core
    summary: Gets all at-mention entities included in an activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getMentions(activity: Partial<Activity>)'
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: |
            The activity.
      return:
        type: 'Mention[]'
        description: ''
  - name: 'getReplyConversationReference(Partial<Activity>, ResourceResponse)'
    uid: botbuilder-core.TurnContext.getReplyConversationReference
    package: botbuilder-core
    summary: >-
      Copies conversation reference information from a resource response for a
      sent activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getReplyConversationReference(activity:
        Partial<Activity>, reply: ResourceResponse)
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: The sent activity.
        - id: reply
          type: ResourceResponse
          description: |
            The resource response for the activity, returned by the
                 [sendActivity](xref:botbuilder-core.TurnContext.sendActivity) or
                 [sendActivities](xref:botbuilder-core.TurnContext.sendActivities) method.
      return:
        type: Partial&lt;ConversationReference&gt;
        description: ''
  - name: onDeleteActivity(DeleteActivityHandler)
    uid: botbuilder-core.TurnContext.onDeleteActivity
    package: botbuilder-core
    summary: Adds a response handler for delete activity operations.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDeleteActivity(handler: DeleteActivityHandler)'
      parameters:
        - id: handler
          type: <xref uid="botbuilder-core.DeleteActivityHandler" />
          description: |
            The handler to add to the context object.
      return:
        type: this
        description: ''
  - name: onSendActivities(SendActivitiesHandler)
    uid: botbuilder-core.TurnContext.onSendActivities
    package: botbuilder-core
    summary: Adds a response handler for send activity operations.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onSendActivities(handler: SendActivitiesHandler)'
      parameters:
        - id: handler
          type: <xref uid="botbuilder-core.SendActivitiesHandler" />
          description: |
            The handler to add to the context object.
      return:
        type: this
        description: ''
  - name: onUpdateActivity(UpdateActivityHandler)
    uid: botbuilder-core.TurnContext.onUpdateActivity
    package: botbuilder-core
    summary: Adds a response handler for update activity operations.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onUpdateActivity(handler: UpdateActivityHandler)'
      parameters:
        - id: handler
          type: <xref uid="botbuilder-core.UpdateActivityHandler" />
          description: |
            The handler to add to the context object.
      return:
        type: this
        description: ''
  - name: 'removeMentionText(Partial<Activity>, string)'
    uid: botbuilder-core.TurnContext.removeMentionText
    package: botbuilder-core
    summary: >-
      Removes at mentions for a given ID from the text of an activity and
      returns the updated text.

      Use with caution; this function alters the activity's
      [text](xref:botframework-schema.Activity.text) property.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function removeMentionText(activity: Partial<Activity>, id:
        string)
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: The activity to remove at mentions from.
        - id: id
          type: string
          description: |
            The ID of the user or bot to remove at mentions for.
      return:
        type: string
        description: ''
  - name: removeRecipientMention(Partial<Activity>)
    uid: botbuilder-core.TurnContext.removeRecipientMention
    package: botbuilder-core
    summary: >-
      Removes at mentions for the activity's
      [recipient](xref:botframework-schema.Activity.recipient)

      from the text of an activity and returns the updated text.

      Use with caution; this function alters the activity's
      [text](xref:botframework-schema.Activity.text) property.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function removeRecipientMention(activity: Partial<Activity>)'
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: |
            The activity to remove at mentions from.
      return:
        type: string
        description: ''
  - name: 'sendActivities(Partial<Activity>[])'
    uid: botbuilder-core.TurnContext.sendActivities
    package: botbuilder-core
    summary: >-
      Asynchronously sends a set of activities to the sender of the incoming
      activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendActivities(activities: Partial<Activity>[])'
      parameters:
        - id: activities
          type: 'Partial&lt;Activity&gt;[]'
          description: |
            The activities to send.
      return:
        type: 'Promise&lt;ResourceResponse[]&gt;'
        description: ''
  - name: 'sendActivity(string | Partial<Activity>, string, string)'
    uid: botbuilder-core.TurnContext.sendActivity
    package: botbuilder-core
    summary: Asynchronously sends an activity to the sender of the incoming activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendActivity(activityOrText: string | Partial<Activity>,
        speak?: string, inputHint?: string)
      parameters:
        - id: activityOrText
          type: string | Partial&lt;Activity&gt;
          description: The activity or text to send.
        - id: speak
          type: string
          description: >-
            Optional. The text to be spoken by your bot on a speech-enabled
            channel.
        - id: inputHint
          type: string
          description: >
            Optional. Indicates whether your bot is accepting, expecting, or
            ignoring user
                 input after the message is delivered to the client. One of: 'acceptingInput', 'ignoringInput',
                 or 'expectingInput'. Default is 'acceptingInput'.
      return:
        type: Promise&lt;ResourceResponse | undefined&gt;
        description: ''
  - name: 'sendTraceActivity(string, any, string, string)'
    uid: botbuilder-core.TurnContext.sendTraceActivity
    package: botbuilder-core
    summary: Asynchronously sends an activity to the sender of the incoming activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendTraceActivity(name: string, value?: any, valueType?:
        string, label?: string)
      parameters:
        - id: name
          type: string
          description: The activity or text to send.
        - id: value
          type: any
          description: >-
            Optional. The text to be spoken by your bot on a speech-enabled
            channel.
        - id: valueType
          type: string
          description: >-
            Optional. Indicates whether your bot is accepting, expecting, or
            ignoring user
        - id: label
          type: string
          description: >
            Optional. Indicates whether your bot is accepting, expecting, or
            ignoring user
      return:
        type: Promise&lt;ResourceResponse | undefined&gt;
        description: ''
  - name: updateActivity(Partial<Activity>)
    uid: botbuilder-core.TurnContext.updateActivity
    package: botbuilder-core
    summary: Asynchronously updates a previously sent activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateActivity(activity: Partial<Activity>)'
      parameters:
        - id: activity
          type: Partial&lt;Activity&gt;
          description: |
            The replacement for the original activity.
      return:
        type: Promise&lt;void&gt;
        description: ''
