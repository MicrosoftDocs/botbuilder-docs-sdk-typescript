### YamlMime:TSType
name: Middleware
uid: botbuilder-core.Middleware
package: botbuilder-core
summary: Interface implemented by object based middleware.
fullName: Middleware
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: onTurn(TurnContext, () => Promise<void>)
    uid: botbuilder-core.Middleware.onTurn
    package: botbuilder-core
    summary: Called each time the bot receives a new request.
    remarks: >-
      Calling `await next();` will cause execution to continue to either the
      next piece of

      middleware in the chain or the bots main logic if you are the last piece
      of middleware.


      Your middleware should perform its business logic before and/or after the
      call to `next()`.

      You can short-circuit further execution of the turn by omitting the call
      to `next()`.


      The following example shows a simple piece of logging middleware:


      ```JavaScript

      class MyLogger {
          async onTurn(context, next) {
              console.log(`Leading Edge`);
              await next();
              console.log(`Trailing Edge`);
          }
      }

      ```
    isDeprecated: false
    syntax:
      content: >-
        function onTurn(context: TurnContext, next: () => Promise<void>):
        Promise<void>
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: Context for current turn of conversation with the user.
        - id: next
          type: () =&gt; Promise&lt;void&gt;
          description: >-
            Function to call to continue execution to the next step in the
            middleware chain.
      return:
        description: ''
        type: Promise&lt;void&gt;
