### YamlMime:TSType
name: CoreBot
uid: botbuilder-dialogs-adaptive-runtime.CoreBot
package: botbuilder-dialogs-adaptive-runtime
summary: Implements an instance of CoreBot.
fullName: CoreBot
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      CoreBot(ResourceExplorer, UserState, ConversationState,
      BotFrameworkAuthentication, SkillConversationIdFactoryBase,
      BotTelemetryClient, string, string, MemoryScope[], PathResolver[])
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.constructor
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CoreBot(resourceExplorer: ResourceExplorer, userState: UserState,
        conversationState: ConversationState, botFrameworkAuthentication:
        BotFrameworkAuthentication, skillConversationIdFactory:
        SkillConversationIdFactoryBase, botTelemetryClient: BotTelemetryClient,
        defaultLocale: string, defaultRootDialog: string, memoryScopes:
        MemoryScope[], pathResolvers: PathResolver[])
      parameters:
        - id: resourceExplorer
          type: ResourceExplorer
          description: Services to access resources.
        - id: userState
          type: UserState
          description: Stored user state.
        - id: conversationState
          type: ConversationState
          description: Stored conversation state.
        - id: botFrameworkAuthentication
          type: BotFrameworkAuthentication
          description: >-
            Cloud environment to authenticate Bot Framework Protocol network
            calls within this environment.
        - id: skillConversationIdFactory
          type: SkillConversationIdFactoryBase
          description: Methods to create unique conversation IDs for skill conversations.
        - id: botTelemetryClient
          type: BotTelemetryClient
          description: Bot client to telemetry.
        - id: defaultLocale
          type: string
          description: The default locale used to determine language-specific behavior.
        - id: defaultRootDialog
          type: string
          description: Default bot root dialog.
        - id: memoryScopes
          type: 'MemoryScope[]'
          description: >-
            Named root-level objects, which can exist in the dialog context or
            outside the turn state.
        - id: pathResolvers
          type: 'PathResolver[]'
          description: |
            Shortcut behavior for transform paths.
inheritedMethods:
  - name: onCommand(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onCommand
    package: botbuilder-dialogs-adaptive-runtime
    summary: Registers an activity event handler for the _command_ activity.
    remarks: >-
      To handle a Command event, use the

      [onCommand](xref:botbuilder-core.ActivityHandler.onCommand) type-specific
      event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onCommand(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onCommand
  - name: onCommandResult(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onCommandResult
    package: botbuilder-dialogs-adaptive-runtime
    summary: Registers an activity event handler for the _CommandResult_ activity.
    remarks: >-
      To handle a CommandResult event, use the

      [onCommandResult](xref:botbuilder-core.ActivityHandler.onCommandResult)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onCommandResult(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onCommandResult
  - name: onConversationUpdate(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onConversationUpdate
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _conversation update_ event,
      emitted for every incoming

      conversation update activity.
    remarks: >-
      Conversation update activities describe a changes to a conversation's
      metadata, such as title, participants,

      or other channel-specific information.


      To handle when members are added to or removed from the conversation, use
      the

      [onMembersAdded](xref:botbuilder-core.ActivityHandler.onMembersAdded) and

      [onMembersRemoved](xref:botbuilder-core.ActivityHandler.onMembersRemoved)
      sub-type event handlers.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onConversationUpdate(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onConversationUpdate
  - name: onDialog(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onDialog
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _dialog_ event, emitted as the
      last event for an incoming activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialog(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onDialog
  - name: onEndOfConversation(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onEndOfConversation
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _end of conversation_
      activity.
    remarks: >-
      This activity is typically send from a Skill to a Skill caller indicating
      the end of that particular child conversation.


      To handle an End of Conversation, use the

      [onEndOfConversation](xref:botbuilder-core.ActivityHandler.onEndOfConversation)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onEndOfConversation(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onEndOfConversation
  - name: onEvent(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onEvent
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _event_ event, emitted for
      every incoming event activity.
    remarks: >-
      Event activities communicate programmatic information from a client or
      channel to a bot.

      The meaning of an event activity is defined by the activity's

      [name](xref:botframework-schema.Activity.name) property, which is
      meaningful within the scope

      of a channel. Event activities are designed to carry both interactive
      information (such as

      button clicks) and non-interactive information (such as a notification of
      a client

      automatically updating an embedded speech model).


      To handle a `tokens/response` event event, use the

      [onTokenResponseEvent](xref:botbuilder-core.ActivityHandler.onTokenResponseEvent)
      sub-type

      event handler. To handle other named events, add logic to this handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onEvent(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onEvent
  - name: onInstallationUpdate(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onInstallationUpdate
    package: botbuilder-dialogs-adaptive-runtime
    summary: Registers an activity event handler for the _installationupdate_ activity.
    remarks: >-
      To handle a InstallationUpdate event, use the

      [onInstallationUpdate](xref:botbuilder-core.ActivityHandler.onInstallationUpdate)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onInstallationUpdate(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onInstallationUpdate
  - name: onInstallationUpdateAdd(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onInstallationUpdateAdd
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _installationupdate add_
      activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onInstallationUpdateAdd(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.

          To handle a InstallationUpdateAdd event, use the

          [onInstallationUpdateAdd](xref:botbuilder-core.ActivityHandler.onInstallationUpdateAdd)
          type-specific event handler.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onInstallationUpdateAdd
  - name: onInstallationUpdateRemove(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onInstallationUpdateRemove
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _installationupdate remove_
      activity.
    remarks: >-
      To handle a InstallationUpdateRemove event, use the

      [onInstallationUpdateRemove](xref:botbuilder-core.ActivityHandler.onInstallationUpdateRemove)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onInstallationUpdateRemove(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onInstallationUpdateRemove
  - name: onMembersAdded(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onMembersAdded
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _members added_ event, emitted
      for any incoming

      conversation update activity that includes members added to the
      conversation.
    remarks: >-
      The activity's
      [membersAdded](xref:botframework-schema.Activity.membersAdded) property

      contains the members added to the conversation, which can include the bot.


      To handle conversation update events in general, use the

      [onConversationUpdate](xref:botbuilder-core.ActivityHandler.onConversationUpdate)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onMembersAdded(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onMembersAdded
  - name: onMembersRemoved(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onMembersRemoved
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _members removed_ event,
      emitted for any incoming

      conversation update activity that includes members removed from the
      conversation.
    remarks: >-
      The activity's
      [membersRemoved](xref:botframework-schema.Activity.membersRemoved)
      property

      contains the members removed from the conversation, which can include the
      bot.


      To handle conversation update events in general, use the

      [onConversationUpdate](xref:botbuilder-core.ActivityHandler.onConversationUpdate)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onMembersRemoved(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onMembersRemoved
  - name: onMessage(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onMessage
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _message_ event, emitted for
      every incoming message activity.
    remarks: >-
      Message activities represent content intended to be shown within a
      conversational interface

      and can contain text, speech, interactive cards, and binary or unknown
      attachments.

      Not all message activities contain text, the activity's
      [text](xref:botframework-schema.Activity.text)

      property can be `null` or `undefined`.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onMessage(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onMessage
  - name: onMessageReaction(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onMessageReaction
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _message reaction_ event,
      emitted for every incoming

      message reaction activity.
    remarks: >-
      Message reaction activities represent a social interaction on an existing
      message activity

      within a conversation. The original activity is referred to by the message
      reaction activity's

      [replyToId](xref:botframework-schema.Activity.replyToId) property. The

      [from](xref:botframework-schema.Activity.from) property represents the
      source of the reaction,

      such as the user that reacted to the message.


      To handle when reactions are added to or removed from messages in the
      conversation, use the

      [onReactionsAdded](xref:botbuilder-core.ActivityHandler.onReactionsAdded)
      and

      [onReactionsRemoved](xref:botbuilder-core.ActivityHandler.onReactionsRemoved)
      sub-type event handlers.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onMessageReaction(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onMessageReaction
  - name: onReactionsAdded(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onReactionsAdded
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _reactions added_ event,
      emitted for any incoming

      message reaction activity that describes reactions added to a message.
    remarks: >-
      The activity's
      [reactionsAdded](xref:botframework-schema.Activity.reactionsAdded)
      property

      includes one or more reactions that were added.


      To handle message reaction events in general, use the

      [onMessageReaction](xref:botbuilder-core.ActivityHandler.onMessageReaction)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onReactionsAdded(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onReactionsAdded
  - name: onReactionsRemoved(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onReactionsRemoved
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _reactions removed_ event,
      emitted for any incoming

      message reaction activity that describes reactions removed from a message.
    remarks: >-
      The activity's
      [reactionsRemoved](xref:botframework-schema.Activity.reactionsRemoved)
      property

      includes one or more reactions that were removed.


      To handle message reaction events in general, use the

      [onMessageReaction](xref:botbuilder-core.ActivityHandler.onMessageReaction)
      type-specific event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onReactionsRemoved(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onReactionsRemoved
  - name: onTokenResponseEvent(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onTokenResponseEvent
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _tokens-response_ event,
      emitted for any incoming

      `tokens/response` event activity. These are generated as part of the OAuth
      authentication flow.
    remarks: >-
      The activity's [value](xref:botframework-schema.Activity.value) property
      contains the user token.


      If your bot handles authentication using an
      [OAuthPrompt](xref:botbuilder-dialogs.OAuthPrompt)

      within a dialog, then the dialog will need to receive this activity to
      complete the authentication flow.


      To handle other named events and event events in general, use the

      [onEvent](xref:botbuilder-core.ActivityHandler.onEvent) type-specific
      event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onTokenResponseEvent(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onTokenResponseEvent
  - name: onTurn(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onTurn
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _turn_ event, emitted for
      every incoming activity, regardless of type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onTurn(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onTurn
  - name: onTyping(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onTyping
    package: botbuilder-dialogs-adaptive-runtime
    summary: Registers an activity event handler for the _typing_ activity.
    remarks: >-
      To handle a Typing event, use the

      [onTyping](xref:botbuilder-core.ActivityHandler.onTyping) type-specific
      event handler.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onTyping(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onTyping
  - name: onUnrecognizedActivityType(BotHandler)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.onUnrecognizedActivityType
    package: botbuilder-dialogs-adaptive-runtime
    summary: >-
      Registers an activity event handler for the _unrecognized activity type_
      event, emitted for an

      incoming activity with a type for which the
      [ActivityHandler](xref:botbuilder-core.ActivityHandler)

      doesn't provide an event handler.
    remarks: >-
      The `ActivityHandler` does not define events for all activity types
      defined in the

      [Bot Framework Activity schema](http://aka.ms/botSpecs-activitySchema). In
      addition,

      channels and custom adapters can create
      [Activities](xref:botframework-schema.Activity) with

      types not in the schema. When the activity handler receives such an event,
      it emits an unrecognized activity type event.


      The activity's [type](xref:botframework-schema.Activity.type) property
      contains the activity type.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onUnrecognizedActivityType(handler: BotHandler): this'
      parameters:
        - id: handler
          type: BotHandler
          description: The event handler.
      return:
        description: >-
          A reference to the
          [ActivityHandler](xref:botbuilder-core.ActivityHandler) object.
        type: this
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.onUnrecognizedActivityType
  - name: run(TurnContext)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBot.run
    package: botbuilder-dialogs-adaptive-runtime
    summary: Called to initiate the event emission process.
    remarks: >-
      Typically, you would provide this method as the function handler that the
      adapter calls

      to perform the bot's logic after the received activity has been
      pre-processed by the adapter

      and routed through any middleware.


      For example:

      ```javascript
       server.post('/api/messages', (req, res) => {
           adapter.processActivity(req, res, async (context) => {
               // Route to bot's activity logic.
               await bot.run(context);
           });
      });

      ```


      **See also**

      -
      [BotFrameworkAdapter.processActivity](xref:botbuilder.BotFrameworkAdapter.processActivity)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function run(context: TurnContext): Promise<void>'
      parameters:
        - id: context
          type: TurnContext
          description: |
            The context object for the current turn.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> ActivityHandler.run
extends: ActivityHandler
