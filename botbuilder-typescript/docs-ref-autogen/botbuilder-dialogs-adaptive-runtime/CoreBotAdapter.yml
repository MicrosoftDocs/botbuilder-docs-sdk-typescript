### YamlMime:TSType
name: CoreBotAdapter
uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter
package: botbuilder-dialogs-adaptive-runtime
summary: >-
  An adapter that implements the Core Bot and can be hosted in different cloud
  environments both public and private.
fullName: CoreBotAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'CoreBotAdapter(BotFrameworkAuthentication, ConversationState, UserState)'
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.constructor
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CoreBotAdapter(botFrameworkAuthentication:
        BotFrameworkAuthentication, conversationState: ConversationState,
        userState: UserState)
      parameters:
        - id: botFrameworkAuthentication
          type: BotFrameworkAuthentication
          description: >-
            BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication)
            instance.
        - id: conversationState
          type: ConversationState
          description: State management object for conversation state.
        - id: userState
          type: UserState
          description: |
            Stored user state.
inheritedProperties:
  - name: BotIdentityKey
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.BotIdentityKey
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: BotIdentityKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'BotIdentityKey: symbol'
      return:
        description: ''
        type: symbol
    inheritanceDescription: <b>Inherited From</b> BotAdapter.BotIdentityKey
  - name: ConnectorClientKey
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.ConnectorClientKey
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: ConnectorClientKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ConnectorClientKey: symbol'
      return:
        description: ''
        type: symbol
    inheritanceDescription: <b>Inherited From</b> BotAdapter.ConnectorClientKey
  - name: ConnectorFactoryKey
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.ConnectorFactoryKey
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: ConnectorFactoryKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ConnectorFactoryKey: symbol'
      return:
        description: ''
        type: symbol
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.ConnectorFactoryKey
  - name: OAuthScopeKey
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.OAuthScopeKey
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: OAuthScopeKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'OAuthScopeKey: symbol'
      return:
        description: ''
        type: symbol
    inheritanceDescription: <b>Inherited From</b> BotAdapter.OAuthScopeKey
  - name: onTurnError
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.onTurnError
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: onTurnError
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTurnError: (context: TurnContext, error: Error) => Promise<void>'
      return:
        description: ''
        type: '(context: TurnContext, error: Error) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: <b>Inherited From</b> BotAdapter.onTurnError
  - name: UserTokenClientKey
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.UserTokenClientKey
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    fullName: UserTokenClientKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'UserTokenClientKey: symbol'
      return:
        description: ''
        type: symbol
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.UserTokenClientKey
inheritedMethods:
  - name: >-
      connectNamedPipe(string, (context: TurnContext) => Promise<void>, string,
      string, string, number)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.connectNamedPipe
    package: botbuilder-dialogs-adaptive-runtime
    summary: Used to connect the adapter to a named pipe.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function connectNamedPipe(pipeName: string, logic: (context:
        TurnContext) => Promise<void>, appId: string, audience: string,
        callerId?: string, retryCount?: number): Promise<void>
      parameters:
        - id: pipeName
          type: string
          description: >-
            Pipe name to connect to (note: yields two named pipe servers by
            appending ".incoming" and ".outgoing" to this name)
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: The logic function to call for resulting bot turns.
        - id: appId
          type: string
          description: The Bot application ID
        - id: audience
          type: string
          description: >-
            The audience to use for outbound communication. The will vary by
            cloud environment.
        - id: callerId
          type: string
          description: 'Optional, the caller ID'
        - id: retryCount
          type: number
          description: >
            Optional, the number of times to retry a failed connection (defaults
            to 7)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapter.connectNamedPipe
  - name: >-
      continueConversation(Partial<ConversationReference>, (context:
      TurnContext) => Promise<void>)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.continueConversation
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: ''
    syntax:
      content: >-
        function continueConversation(_reference:
        Partial<ConversationReference>, _logic: (context: TurnContext) =>
        Promise<void>): Promise<void>
      parameters:
        - id: _reference
          type: Partial&lt;ConversationReference&gt;
          description: ''
        - id: _logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.continueConversation
  - name: >-
      continueConversationAsync(string | ClaimsIdentity,
      Partial<ConversationReference>, (context: TurnContext) => Promise<void> |
      string, (context: TurnContext) => Promise<void>)
    uid: >-
      botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.continueConversationAsync
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function continueConversationAsync(botAppIdOrClaimsIdentity: string |
        ClaimsIdentity, reference: Partial<ConversationReference>,
        logicOrAudience: (context: TurnContext) => Promise<void> | string,
        maybeLogic?: (context: TurnContext) => Promise<void>): Promise<void>
      parameters:
        - id: botAppIdOrClaimsIdentity
          type: string | ClaimsIdentity
          description: ''
        - id: reference
          type: Partial&lt;ConversationReference&gt;
          description: ''
        - id: logicOrAudience
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt; | string'
          description: ''
        - id: maybeLogic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.continueConversationAsync
  - name: >-
      createConversationAsync(string, string, string, string,
      ConversationParameters, (context: TurnContext) => Promise<void>)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.createConversationAsync
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createConversationAsync(botAppId: string, channelId: string,
        serviceUrl: string, audience: string, conversationParameters:
        ConversationParameters, logic: (context: TurnContext) => Promise<void>):
        Promise<void>
      parameters:
        - id: botAppId
          type: string
          description: ''
        - id: channelId
          type: string
          description: ''
        - id: serviceUrl
          type: string
          description: ''
        - id: audience
          type: string
          description: ''
        - id: conversationParameters
          type: ConversationParameters
          description: ''
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.createConversationAsync
  - name: 'deleteActivity(TurnContext, Partial<ConversationReference>)'
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.deleteActivity
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteActivity(context: TurnContext, reference:
        Partial<ConversationReference>): Promise<void>
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: reference
          type: Partial&lt;ConversationReference&gt;
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.deleteActivity
  - name: >-
      process(Request, INodeSocket, INodeBuffer, (context: TurnContext) =>
      Promise<void>)
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.process_1
    package: botbuilder-dialogs-adaptive-runtime
    summary: |-
      Handle a web socket connection by applying a logic function to
      each streaming request.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function process(req: Request, socket: INodeSocket, head: INodeBuffer,
        logic: (context: TurnContext) => Promise<void>): Promise<void>
      parameters:
        - id: req
          type: Request
          description: 'An incoming HTTP [Request](xref:botbuilder.Request)'
        - id: socket
          type: INodeSocket
          description: >-
            The corresponding
            [INodeSocket](xref:botframework-streaming.INodeSocket)
        - id: head
          type: INodeBuffer
          description: >-
            The corresponding
            [INodeBuffer](xref:botframework-streaming.INodeBuffer)
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: The logic function to apply
      return:
        description: a promise representing the asynchronous operation.
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapter.process
  - name: 'process(Request, Response, (context: TurnContext) => Promise<void>)'
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.process
    package: botbuilder-dialogs-adaptive-runtime
    summary: Process a web request by applying a logic function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function process(req: Request, res: Response, logic: (context:
        TurnContext) => Promise<void>): Promise<void>
      parameters:
        - id: req
          type: Request
          description: 'The corresponding HTTP [Response](xref:botbuilder.Response)'
        - id: res
          type: Response
          description: ''
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: The logic function to apply
      return:
        description: a promise representing the asynchronous operation.
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapter.process
  - name: 'sendActivities(TurnContext, Partial<Activity>[])'
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.sendActivities
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendActivities(context: TurnContext, activities:
        Partial<Activity>[]): Promise<ResourceResponse[]>
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: activities
          type: 'Partial&lt;Activity&gt;[]'
          description: ''
      return:
        description: ''
        type: 'Promise&lt;ResourceResponse[]&gt;'
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.sendActivities
  - name: 'updateActivity(TurnContext, Partial<Activity>)'
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.updateActivity
    package: botbuilder-dialogs-adaptive-runtime
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateActivity(context: TurnContext, activity:
        Partial<Activity>): Promise<ResourceResponse | void>
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: activity
          type: Partial&lt;Activity&gt;
          description: ''
      return:
        description: ''
        type: Promise&lt;ResourceResponse | void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudAdapterBase.updateActivity
  - name: >-
      use((context: TurnContext, next: () => Promise<void>) => Promise<void> |
      Middleware[])
    uid: botbuilder-dialogs-adaptive-runtime.CoreBotAdapter.use
    package: botbuilder-dialogs-adaptive-runtime
    summary: Adds middleware to the adapter's pipeline.
    remarks: >-
      Middleware is added to the adapter at initialization time.

      Each turn, the adapter calls its middleware in the order in which you
      added it.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function use(middlewares: (context: TurnContext, next: () =>
        Promise<void>) => Promise<void> | Middleware[]): this
      parameters:
        - id: middlewares
          type: >-
            (context: TurnContext, next: () =&gt; Promise&lt;void&gt;) =&gt;
            Promise&lt;void&gt; | Middleware[]
          description: The middleware or middleware handlers to add.
      return:
        description: The updated adapter object.
        type: this
    inheritanceDescription: <b>Inherited From</b> BotAdapter.use
extends: CloudAdapter
