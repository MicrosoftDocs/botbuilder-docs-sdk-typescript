### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGException
    name: LGException
    fullName: LGException
    children:
      - botbuilder-lg.LGException.Error
      - botbuilder-lg.LGException.getDiagnostic
      - botbuilder-lg.LGException.constructor
      - botbuilder-lg.LGException.message
      - botbuilder-lg.LGException.name
      - botbuilder-lg.LGException.stack
    langs:
      - typeScript
    type: class
    summary: Customized LG Exception
    extends:
      name: Error
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.Error
    name: Error
    fullName: Error
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Error: ErrorConstructor'
      return:
        type:
          - ErrorConstructor
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.getDiagnostic
    name: getDiagnostic()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDiagnostic()
      parameters: []
      return:
        type:
          - 'botbuilder-lg.Diagnostic[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.constructor
    name: 'LGException(string, Diagnostic[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new LGException(m: string, diagnostics: Diagnostic[])'
      parameters:
        - id: m
          type:
            - string
          description: ''
        - id: diagnostics
          type:
            - 'botbuilder-lg.Diagnostic[]'
          description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.message
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'message: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGException.stack
    name: stack
    fullName: stack
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stack?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
references:
  - uid: 'botbuilder-lg.Diagnostic[]'
    name: 'Diagnostic[]'
    spec.typeScript:
      - name: Diagnostic
        fullName: Diagnostic
        uid: botbuilder-lg.Diagnostic
      - name: '[]'
        fullName: '[]'
