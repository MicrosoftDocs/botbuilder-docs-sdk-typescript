### YamlMime:TSType
name: TemplateErrors
uid: botbuilder-lg.TemplateErrors
package: botbuilder-lg
summary: Centralized LG errors.
fullName: TemplateErrors
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: emptyStrucContent
    uid: botbuilder-lg.TemplateErrors.emptyStrucContent
    package: botbuilder-lg
    summary: ''
    fullName: emptyStrucContent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static emptyStrucContent: string = `Invalid structure body. Body
        cannot be empty.`
      return:
        type: string
        description: ''
  - name: extraExpressionInCondition
    uid: botbuilder-lg.TemplateErrors.extraExpressionInCondition
    package: botbuilder-lg
    summary: ''
    fullName: extraExpressionInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static extraExpressionInCondition: string = `Invalid condition.
        'ELSE' definition cannot include an expression.`
      return:
        type: string
        description: ''
  - name: extraExpressionInSwitchCase
    uid: botbuilder-lg.TemplateErrors.extraExpressionInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: extraExpressionInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static extraExpressionInSwitchCase: string = `Invalid condition.
        'DEFAULT' statement cannot include an expression.`
      return:
        type: string
        description: ''
  - name: invalidExpressionInCondition
    uid: botbuilder-lg.TemplateErrors.invalidExpressionInCondition
    package: botbuilder-lg
    summary: ''
    fullName: invalidExpressionInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidExpressionInCondition: string = `Invalid condition.
        'IF', 'ELSEIF' definitions must include a valid expression.`
      return:
        type: string
        description: ''
  - name: invalidExpressionInSwiathCase
    uid: botbuilder-lg.TemplateErrors.invalidExpressionInSwiathCase
    package: botbuilder-lg
    summary: ''
    fullName: invalidExpressionInSwiathCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidExpressionInSwiathCase: string = `Invalid
        condition. 'SWITCH' and 'CASE' statements must include a valid
        expression.`
      return:
        type: string
        description: ''
  - name: invalidMemory
    uid: botbuilder-lg.TemplateErrors.invalidMemory
    package: botbuilder-lg
    summary: ''
    fullName: invalidMemory
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidMemory: string = `Scope is not a LG customized
        memory.`
      return:
        type: string
        description: ''
  - name: invalidMiddleInCondition
    uid: botbuilder-lg.TemplateErrors.invalidMiddleInCondition
    package: botbuilder-lg
    summary: ''
    fullName: invalidMiddleInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidMiddleInCondition: string = `Invalid template body.
        Expecting 'ELSEIF'.`
      return:
        type: string
        description: ''
  - name: invalidStatementInMiddlerOfSwitchCase
    uid: botbuilder-lg.TemplateErrors.invalidStatementInMiddlerOfSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: invalidStatementInMiddlerOfSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidStatementInMiddlerOfSwitchCase: string = `Invalid
        template body. Expecting a 'CASE' statement.`
      return:
        type: string
        description: ''
  - name: invalidTemplateBody
    uid: botbuilder-lg.TemplateErrors.invalidTemplateBody
    package: botbuilder-lg
    summary: ''
    fullName: invalidTemplateBody
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidTemplateBody: string = `Invalid template body.
        Expecting '-' prefix.`
      return:
        type: string
        description: ''
  - name: invalidTemplateNameType
    uid: botbuilder-lg.TemplateErrors.invalidTemplateNameType
    package: botbuilder-lg
    summary: ''
    fullName: invalidTemplateNameType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidTemplateNameType: string = "Expected string type
        for the parameter of template function."
      return:
        type: string
        description: ''
  - name: invalidWhitespaceInCondition
    uid: botbuilder-lg.TemplateErrors.invalidWhitespaceInCondition
    package: botbuilder-lg
    summary: ''
    fullName: invalidWhitespaceInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidWhitespaceInCondition: string = `Invalid condition:
        At most 1 whitespace allowed between 'IF/ELSEIF/ELSE' and ':'.`
      return:
        type: string
        description: ''
  - name: invalidWhitespaceInSwitchCase
    uid: botbuilder-lg.TemplateErrors.invalidWhitespaceInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: invalidWhitespaceInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static invalidWhitespaceInSwitchCase: string = `Invalid
        condition: At most 1 whitespace allowed between 'SWITCH/CASE/DEFAULT'
        and ':'.`
      return:
        type: string
        description: ''
  - name: loopDetected
    uid: botbuilder-lg.TemplateErrors.loopDetected
    package: botbuilder-lg
    summary: ''
    fullName: loopDetected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static loopDetected: string = `Loop detected:`'
      return:
        type: string
        description: ''
  - name: missingCaseInSwitchCase
    uid: botbuilder-lg.TemplateErrors.missingCaseInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: missingCaseInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static missingCaseInSwitchCase: string = `Invalid template body.
        Expecting at least one 'CASE' statement.`
      return:
        type: string
        description: ''
  - name: missingStrucEnd
    uid: botbuilder-lg.TemplateErrors.missingStrucEnd
    package: botbuilder-lg
    summary: ''
    fullName: missingStrucEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static missingStrucEnd: string = `Invalid structure body.
        Expecting ']' at the end of the body.`
      return:
        type: string
        description: ''
  - name: missingTemplateBodyInCondition
    uid: botbuilder-lg.TemplateErrors.missingTemplateBodyInCondition
    package: botbuilder-lg
    summary: ''
    fullName: missingTemplateBodyInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static missingTemplateBodyInCondition: string = `Invalid
        condition body. Conditions must include a valid body.`
      return:
        type: string
        description: ''
  - name: missingTemplateBodyInSwitchCase
    uid: botbuilder-lg.TemplateErrors.missingTemplateBodyInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: missingTemplateBodyInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static missingTemplateBodyInSwitchCase: string = `Invalid
        condition body. Expecing valid body inside a 'CASE' or 'DEFAULT' block.`
      return:
        type: string
        description: ''
  - name: multipleIfInCondition
    uid: botbuilder-lg.TemplateErrors.multipleIfInCondition
    package: botbuilder-lg
    summary: ''
    fullName: multipleIfInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static multipleIfInCondition: string = `Invalid template body.
        There cannot be more than one 'IF' condition. Expecting 'IFELSE' or
        'ELSE' statement.`
      return:
        type: string
        description: ''
  - name: multipleSwithStatementInSwitchCase
    uid: botbuilder-lg.TemplateErrors.multipleSwithStatementInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: multipleSwithStatementInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static multipleSwithStatementInSwitchCase: string = `Invalid
        template body. There cannot be more than one 'SWITCH' statement.
        Expecting 'CASE' or 'DEFAULT' statement.`
      return:
        type: string
        description: ''
  - name: noCloseBracket
    uid: botbuilder-lg.TemplateErrors.noCloseBracket
    package: botbuilder-lg
    summary: ''
    fullName: noCloseBracket
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static noCloseBracket: string = `Close } is missing in
        Expression.`
      return:
        type: string
        description: ''
  - name: noEndingInMultiline
    uid: botbuilder-lg.TemplateErrors.noEndingInMultiline
    package: botbuilder-lg
    summary: ''
    fullName: noEndingInMultiline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static noEndingInMultiline: string = "Expecting "```" to close
        the multi-line block."
      return:
        type: string
        description: ''
  - name: noTemplate
    uid: botbuilder-lg.TemplateErrors.noTemplate
    package: botbuilder-lg
    summary: ''
    fullName: noTemplate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static noTemplate: string = `LG file must have at least one
        template definition.`
      return:
        type: string
        description: ''
  - name: notEndWithDefaultInSwitchCase
    uid: botbuilder-lg.TemplateErrors.notEndWithDefaultInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: notEndWithDefaultInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static notEndWithDefaultInSwitchCase: string = `Conditional
        response template does not end with 'DEFAULT' condition.`
      return:
        type: string
        description: ''
  - name: notEndWithElseInCondition
    uid: botbuilder-lg.TemplateErrors.notEndWithElseInCondition
    package: botbuilder-lg
    summary: ''
    fullName: notEndWithElseInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static notEndWithElseInCondition: string = `Conditional response
        template does not end with 'ELSE' condition.`
      return:
        type: string
        description: ''
  - name: notStartWithIfInCondition
    uid: botbuilder-lg.TemplateErrors.notStartWithIfInCondition
    package: botbuilder-lg
    summary: ''
    fullName: notStartWithIfInCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static notStartWithIfInCondition: string = `Invalid condition:
        Conditions must start with 'IF/ELSEIF/ELSE' prefix.`
      return:
        type: string
        description: ''
  - name: notStartWithSwitchInSwitchCase
    uid: botbuilder-lg.TemplateErrors.notStartWithSwitchInSwitchCase
    package: botbuilder-lg
    summary: ''
    fullName: notStartWithSwitchInSwitchCase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static notStartWithSwitchInSwitchCase: string = `Invalid
        conditional response template. Expecting a 'SWITCH' statement?`
      return:
        type: string
        description: ''
  - name: staticFailure
    uid: botbuilder-lg.TemplateErrors.staticFailure
    package: botbuilder-lg
    summary: ''
    fullName: staticFailure
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static staticFailure: string = `Static failure with the following
        error.`
      return:
        type: string
        description: ''
methods:
  - name: 'argumentMismatch(string, number, number)'
    uid: botbuilder-lg.TemplateErrors.argumentMismatch
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function argumentMismatch(templateName: string, expectedCount:
        number, actualCount: number)
      parameters:
        - id: templateName
          type: string
          description: ''
        - id: expectedCount
          type: number
          description: ''
        - id: actualCount
          type: number
          description: ''
      return:
        type: string
        description: ''
  - name: 'duplicatedTemplateInDiffTemplate(string, string)'
    uid: botbuilder-lg.TemplateErrors.duplicatedTemplateInDiffTemplate
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function duplicatedTemplateInDiffTemplate(templateName: string,
        source: string)
      parameters:
        - id: templateName
          type: string
          description: ''
        - id: source
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: duplicatedTemplateInSameTemplate(string)
    uid: botbuilder-lg.TemplateErrors.duplicatedTemplateInSameTemplate
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function duplicatedTemplateInSameTemplate(templateName: string)'
      parameters:
        - id: templateName
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: 'errorExpression(string, string, string)'
    uid: botbuilder-lg.TemplateErrors.errorExpression
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function errorExpression(refFullText: string, templateName:
        string, prefixText: string)
      parameters:
        - id: refFullText
          type: string
          description: ''
        - id: templateName
          type: string
          description: ''
        - id: prefixText
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: expressionParseError(string)
    uid: botbuilder-lg.TemplateErrors.expressionParseError
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function expressionParseError(exp: string)'
      parameters:
        - id: exp
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: invalidParameter(string)
    uid: botbuilder-lg.TemplateErrors.invalidParameter
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function invalidParameter(invalidParameter: string)'
      parameters:
        - id: invalidParameter
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: invalidStrucBody(string)
    uid: botbuilder-lg.TemplateErrors.invalidStrucBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function invalidStrucBody(invalidBody: string)'
      parameters:
        - id: invalidBody
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: invalidStrucName(string)
    uid: botbuilder-lg.TemplateErrors.invalidStrucName
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function invalidStrucName(invalidName: string)'
      parameters:
        - id: invalidName
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: invalidTemplateName(string)
    uid: botbuilder-lg.TemplateErrors.invalidTemplateName
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function invalidTemplateName(invalidTemplateName: string)'
      parameters:
        - id: invalidTemplateName
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: noTemplateBody(string)
    uid: botbuilder-lg.TemplateErrors.noTemplateBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function noTemplateBody(templateName: string)'
      parameters:
        - id: templateName
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: nullExpression(string)
    uid: botbuilder-lg.TemplateErrors.nullExpression
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function nullExpression(expression: string)'
      parameters:
        - id: expression
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: syntaxError(string)
    uid: botbuilder-lg.TemplateErrors.syntaxError
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function syntaxError(unexpectedContent: string)'
      parameters:
        - id: unexpectedContent
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: templateExist(string)
    uid: botbuilder-lg.TemplateErrors.templateExist
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function templateExist(templateName: string)'
      parameters:
        - id: templateName
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: templateNotExist(string)
    uid: botbuilder-lg.TemplateErrors.templateNotExist
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function templateNotExist(templateName: string)'
      parameters:
        - id: templateName
          type: string
          description: ''
      return:
        type: string
        description: ''
