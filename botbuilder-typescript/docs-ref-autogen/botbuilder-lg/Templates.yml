### YamlMime:TSType
name: Templates
uid: botbuilder-lg.Templates
package: botbuilder-lg
summary: 'LG entrance, including properties that LG file has, and evaluate functions.'
fullName: Templates
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      Templates(Template[], TemplateImport[], Diagnostic[], Templates[], string,
      string, ExpressionParser, ImportResolverDelegate, string[], string,
      Record<string, Templates>)
    uid: botbuilder-lg.Templates.constructor
    package: botbuilder-lg
    summary: >-
      Creates a new instance of the [Templates](xref:botbuilder-lg.Templates)
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new Templates(items?: Template[], imports?: TemplateImport[],
        diagnostics?: Diagnostic[], references?: Templates[], content?: string,
        id?: string, expressionParser?: ExpressionParser,
        importResolverDelegate?: ImportResolverDelegate, options?: string[],
        source?: string, namedReferences?: Record<string, Templates>)
      parameters:
        - id: items
          type: '<xref uid="botbuilder-lg.Template" />[]'
          description: 'Optional. List of [Template](xref:botbuilder-lg.Template) instances.'
        - id: imports
          type: '<xref uid="botbuilder-lg.TemplateImport" />[]'
          description: >-
            Optional. List of
            [TemplateImport](xref:botbuilder-lg.TemplateImport) instances.
        - id: diagnostics
          type: '<xref uid="botbuilder-lg.Diagnostic" />[]'
          description: >-
            Optional. List of [Diagnostic](xref:botbuilder-lg.Diagnostic)
            instances.
        - id: references
          type: '<xref uid="botbuilder-lg.Templates" />[]'
          description: >-
            Optional. List of [Templates](xref:botbuilder-lg.Templates)
            instances.
        - id: content
          type: string
          description: Optional. Content of the current Templates instance.
        - id: id
          type: string
          description: Optional. Id of the current Templates instance.
        - id: expressionParser
          type: ExpressionParser
          description: >-
            Optional.
            [ExpressionParser](xref:adaptive-expressions.ExpressionParser) to
            parse the expressions in the content.
        - id: importResolverDelegate
          type: <xref uid="botbuilder-lg.ImportResolverDelegate" />
          description: Optional. Resolver to resolve LG import id to template text.
        - id: options
          type: 'string[]'
          description: >-
            Optional. List of strings representing the options during evaluation
            of the templates.
        - id: source
          type: string
          description: Optional. Templates source.
        - id: namedReferences
          type: 'Record&lt;string, <xref uid="botbuilder-lg.Templates" />&gt;'
          description: >
            Optional. eferences that imported with the "as" syntaxï¼Œfor example:
            [import](path.lg) as myAlias.
properties:
  - name: allDiagnostics
    uid: botbuilder-lg.Templates.allDiagnostics
    package: botbuilder-lg
    summary: Gets all diagnostics from current lg file and reference lg files.
    fullName: allDiagnostics
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Diagnostic[] allDiagnostics'
      return:
        description: All diagnostics from current lg file and reference lg files.
        type: '<xref uid="botbuilder-lg.Diagnostic" />[]'
  - name: allTemplates
    uid: botbuilder-lg.Templates.allTemplates
    package: botbuilder-lg
    summary: Gets all templates from current lg file and reference lg files.
    fullName: allTemplates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Template[] allTemplates'
      return:
        description: All templates from current lg file and reference lg files.
        type: '<xref uid="botbuilder-lg.Template" />[]'
  - name: content
    uid: botbuilder-lg.Templates.content
    package: botbuilder-lg
    summary: LG content.
    fullName: content
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content: string'
      return:
        description: ''
        type: string
  - name: diagnostics
    uid: botbuilder-lg.Templates.diagnostics
    package: botbuilder-lg
    summary: diagnostics.
    fullName: diagnostics
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'diagnostics: Diagnostic[]'
      return:
        description: ''
        type: '<xref uid="botbuilder-lg.Diagnostic" />[]'
  - name: enableFromFile
    uid: botbuilder-lg.Templates.enableFromFile
    package: botbuilder-lg
    summary: Indicates whether fromFile is allowed in LG templates.
    fullName: enableFromFile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static enableFromFile: boolean = false'
      return:
        description: ''
        type: boolean
  - name: expressionParser
    uid: botbuilder-lg.Templates.expressionParser
    package: botbuilder-lg
    summary: expression parser.
    fullName: expressionParser
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expressionParser: ExpressionParser'
      return:
        description: ''
        type: ExpressionParser
  - name: id
    uid: botbuilder-lg.Templates.id
    package: botbuilder-lg
    summary: Id of the lg resource.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: importResolver
    uid: botbuilder-lg.Templates.importResolver
    package: botbuilder-lg
    summary: Delegate for resolving resource id of imported lg file.
    fullName: importResolver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'importResolver: ImportResolverDelegate'
      return:
        description: ''
        type: <xref uid="botbuilder-lg.ImportResolverDelegate" />
  - name: imports
    uid: botbuilder-lg.Templates.imports
    package: botbuilder-lg
    summary: import elements that this LG file contains directly.
    fullName: imports
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'imports: TemplateImport[]'
      return:
        description: ''
        type: '<xref uid="botbuilder-lg.TemplateImport" />[]'
  - name: inlineTemplateIdPrefix
    uid: botbuilder-lg.Templates.inlineTemplateIdPrefix
    package: botbuilder-lg
    summary: Temp Template ID for inline content.
    fullName: inlineTemplateIdPrefix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static inlineTemplateIdPrefix: string = "__temp__"'
      return:
        description: ''
        type: string
  - name: lgOptions
    uid: botbuilder-lg.Templates.lgOptions
    package: botbuilder-lg
    summary: |
      Gets the evluation options for the current LG file.
       @returns A value indicating whether the options when evaluating LG templates.
    fullName: lgOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: EvaluationOptions lgOptions
      return:
        description: ''
        type: <xref uid="botbuilder-lg.EvaluationOptions" />
  - name: namedReferences
    uid: botbuilder-lg.Templates.namedReferences
    package: botbuilder-lg
    summary: Map from import alias to templates.
    fullName: namedReferences
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'namedReferences: Record<string, Templates>'
      return:
        description: ''
        type: 'Record&lt;string, <xref uid="botbuilder-lg.Templates" />&gt;'
  - name: namespace
    uid: botbuilder-lg.Templates.namespace
    package: botbuilder-lg
    summary: |
      Gets the namespace to register for the current LG file.
       @returns A string value representing the namespace to register for the current LG file.
    fullName: namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string namespace
      return:
        description: ''
        type: string
  - name: options
    uid: botbuilder-lg.Templates.options
    package: botbuilder-lg
    summary: LG file options.
    fullName: options
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'options: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: references
    uid: botbuilder-lg.Templates.references
    package: botbuilder-lg
    summary: |-
      all references that this LG file has from Imports
      otice: reference includs all child imports from the lg file,
      not only the children belong to this lgfile directly.
      so, reference count may >= imports count.
    fullName: references
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'references: Templates[]'
      return:
        description: ''
        type: '<xref uid="botbuilder-lg.Templates" />[]'
  - name: source
    uid: botbuilder-lg.Templates.source
    package: botbuilder-lg
    summary: Source of the lg resource. Full path for lg file.
    fullName: source
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source: string'
      return:
        description: ''
        type: string
methods:
  - name: 'addTemplate(string, string[], string)'
    uid: botbuilder-lg.Templates.addTemplate
    package: botbuilder-lg
    summary: Add a new template and return LG file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addTemplate(templateName: string, parameters: string[],
        templateBody: string): Templates
      parameters:
        - id: templateName
          type: string
          description: New template name.
        - id: parameters
          type: 'string[]'
          description: New params.
        - id: templateBody
          type: string
          description: New  template body.
      return:
        description: New lg file.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: 'analyzeTemplate(string, AnalyzerOptions)'
    uid: botbuilder-lg.Templates.analyzeTemplate
    package: botbuilder-lg
    summary: >-
      Analyze a template to get the static analyzer results including variables
      and template references.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function analyzeTemplate(templateName: string, analyzerOptions?:
        AnalyzerOptions): AnalyzerResult
      parameters:
        - id: templateName
          type: string
          description: Template name to be evaluated.
        - id: analyzerOptions
          type: <xref uid="botbuilder-lg.AnalyzerOptions" />
          description: Options for analyzing template.
      return:
        description: Analyzer result.
        type: <xref uid="botbuilder-lg.AnalyzerResult" />
  - name: deleteTemplate(string)
    uid: botbuilder-lg.Templates.deleteTemplate
    package: botbuilder-lg
    summary: Delete an exist template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteTemplate(templateName: string): Templates'
      parameters:
        - id: templateName
          type: string
          description: Which template should delete.
      return:
        description: Return the new lg file.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: 'evaluate(string, object, EvaluationOptions)'
    uid: botbuilder-lg.Templates.evaluate
    package: botbuilder-lg
    summary: Evaluate a template with given name and scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function evaluate(templateName: string, scope?: object, opt:
        EvaluationOptions): any
      parameters:
        - id: templateName
          type: string
          description: Template name to be evaluated.
        - id: scope
          type: object
          description: The state visible in the evaluation.
        - id: opt
          type: <xref uid="botbuilder-lg.EvaluationOptions" />
          description: EvaluationOptions in evaluating a template.
      return:
        description: Evaluate result.
        type: any
  - name: 'evaluateText(string, object, EvaluationOptions)'
    uid: botbuilder-lg.Templates.evaluateText
    package: botbuilder-lg
    summary: Use to evaluate an inline template str.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function evaluateText(inlineStr: string, scope?: object, opt:
        EvaluationOptions): any
      parameters:
        - id: inlineStr
          type: string
          description: Inline string which will be evaluated.
        - id: scope
          type: object
          description: Scope object or JToken.
        - id: opt
          type: <xref uid="botbuilder-lg.EvaluationOptions" />
          description: EvaluationOptions in evaluating a template.
      return:
        description: Evaluated result object.
        type: any
  - name: 'expandTemplate(string, object, EvaluationOptions)'
    uid: botbuilder-lg.Templates.expandTemplate
    package: botbuilder-lg
    summary: |-
      Expand a template with given name and scope.
      Return all possible responses instead of random one.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function expandTemplate(templateName: string, scope?: object, opt:
        EvaluationOptions): any[]
      parameters:
        - id: templateName
          type: string
          description: Template name to be evaluated.
        - id: scope
          type: object
          description: The state visible in the evaluation.
        - id: opt
          type: <xref uid="botbuilder-lg.EvaluationOptions" />
          description: EvaluationOptions in expanding a template.
      return:
        description: Expand result.
        type: 'any[]'
  - name: 'parseFile(string, ImportResolverDelegate, ExpressionParser)'
    uid: botbuilder-lg.Templates.parseFile
    package: botbuilder-lg
    summary: Parse a file and return LG file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function parseFile(filePath: string, importResolver?:
        ImportResolverDelegate, expressionParser?: ExpressionParser): Templates
      parameters:
        - id: filePath
          type: string
          description: LG absolute file path..
        - id: importResolver
          type: <xref uid="botbuilder-lg.ImportResolverDelegate" />
          description: Resolver to resolve LG import id to template text.
        - id: expressionParser
          type: ExpressionParser
          description: Expression parser for evaluating expressions.
      return:
        description: New lg file.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: 'parseResource(LGResource, ImportResolverDelegate, ExpressionParser)'
    uid: botbuilder-lg.Templates.parseResource
    package: botbuilder-lg
    summary: Parser to turn lg content into a Templates.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function parseResource(resource: LGResource, importResolver?:
        ImportResolverDelegate, expressionParser?: ExpressionParser): Templates
      parameters:
        - id: resource
          type: <xref uid="botbuilder-lg.LGResource" />
          description: LG resource.
        - id: importResolver
          type: <xref uid="botbuilder-lg.ImportResolverDelegate" />
          description: Resolver to resolve LG import id to template text.
        - id: expressionParser
          type: ExpressionParser
          description: Expression parser for evaluating expressions.
      return:
        description: Entity.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: 'parseText(string, string, ImportResolverDelegate, ExpressionParser)'
    uid: botbuilder-lg.Templates.parseText
    package: botbuilder-lg
    summary: Parser to turn lg content into a Templates.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: This method will soon be deprecated. Use ParseResource instead.
    syntax:
      content: >-
        static function parseText(content: string, id: string, importResolver?:
        ImportResolverDelegate, expressionParser?: ExpressionParser): Templates
      parameters:
        - id: content
          type: string
          description: Text content contains lg templates.
        - id: id
          type: string
          description: >-
            Id is the identifier of content. If importResolver is undefined, id
            must be a full path string.
        - id: importResolver
          type: <xref uid="botbuilder-lg.ImportResolverDelegate" />
          description: Resolver to resolve LG import id to template text.
        - id: expressionParser
          type: ExpressionParser
          description: Expression parser for evaluating expressions.
      return:
        description: Entity.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: 'push(Template[])'
    uid: botbuilder-lg.Templates.push
    package: botbuilder-lg
    summary: Appends 1 or more templates to the collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(args: Template[])'
      parameters:
        - id: args
          type: '<xref uid="botbuilder-lg.Template" />[]'
          description: |
            List of templates to add.
  - name: toArray()
    uid: botbuilder-lg.Templates.toArray
    package: botbuilder-lg
    summary: Gets the collection of templates.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toArray(): Template[]'
      return:
        description: A reference to the internal list of collection templates.
        type: '<xref uid="botbuilder-lg.Template" />[]'
  - name: toString()
    uid: botbuilder-lg.Templates.toString
    package: botbuilder-lg
    summary: >-
      Returns a string representation of a
      [Templates](xref:botbuilder-lg.Templates) content.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: >-
          A string representation of a [Templates](xref:botbuilder-lg.Templates)
          content.
        type: string
  - name: 'updateTemplate(string, string, string[], string)'
    uid: botbuilder-lg.Templates.updateTemplate
    package: botbuilder-lg
    summary: Update a template and return LG file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateTemplate(templateName: string, newTemplateName: string,
        parameters: string[], templateBody: string): Templates
      parameters:
        - id: templateName
          type: string
          description: Orignial template name.
        - id: newTemplateName
          type: string
          description: New template name.
        - id: parameters
          type: 'string[]'
          description: New params.
        - id: templateBody
          type: string
          description: New template body.
      return:
        description: New lg file.
        type: <xref uid="botbuilder-lg.Templates" />
