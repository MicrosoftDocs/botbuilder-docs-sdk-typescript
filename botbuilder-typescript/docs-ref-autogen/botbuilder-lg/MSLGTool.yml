### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.MSLGTool
    name: MSLGTool
    fullName: MSLGTool
    children:
      - botbuilder-lg.MSLGTool.collatedTemplates
      - botbuilder-lg.MSLGTool.collateTemplates
      - botbuilder-lg.MSLGTool.collationMessages
      - botbuilder-lg.MSLGTool.expandTemplate
      - botbuilder-lg.MSLGTool.getTemplateVariables
      - botbuilder-lg.MSLGTool.constructor
      - botbuilder-lg.MSLGTool.nameCollisions
      - botbuilder-lg.MSLGTool.validateFile
    langs:
      - typeScript
    type: class
    summary: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.collatedTemplates
    name: collatedTemplates
    fullName: collatedTemplates
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'collatedTemplates: Map<string, any>'
      return:
        type:
          - 'Map<string, any>'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.collateTemplates
    name: collateTemplates()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function collateTemplates()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.collationMessages
    name: collationMessages
    fullName: collationMessages
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'collationMessages: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.expandTemplate
    name: 'expandTemplate(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function expandTemplate(templateName: string, scope?: any)'
      parameters:
        - id: templateName
          type:
            - string
          description: ''
        - id: scope
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.getTemplateVariables
    name: getTemplateVariables(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTemplateVariables(templateName: string)'
      parameters:
        - id: templateName
          type:
            - string
          description: ''
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.constructor
    name: MSLGTool(ExpressionEngine)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MSLGTool(expressionEngine?: ExpressionEngine)'
      parameters:
        - id: expressionEngine
          type:
            - ExpressionEngine
          description: ''
          optional: true
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.nameCollisions
    name: nameCollisions
    fullName: nameCollisions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'nameCollisions: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MSLGTool.validateFile
    name: 'validateFile(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function validateFile(lgFileContent: string, id?: string)'
      parameters:
        - id: lgFileContent
          type:
            - string
          description: ''
        - id: id
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-lg
