### YamlMime:TSType
name: TemplatesTransformer
uid: botbuilder-lg.TemplatesTransformer
package: botbuilder-lg
summary: >-
  Templates transformer. Add more details and body context into the templates
  object.
fullName: TemplatesTransformer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TemplatesTransformer(Templates)
    uid: botbuilder-lg.TemplatesTransformer.constructor
    package: botbuilder-lg
    summary: >-
      Creates a new instance of the
      [TemplatesTransformer](xref:botbuilder-lg.TemplatesTransformer) class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TemplatesTransformer(templates: Templates)'
      parameters:
        - id: templates
          type: <xref uid="botbuilder-lg.Templates" />
          description: |
            Templates.
inheritedMethods:
  - name: visit(ParseTree)
    uid: botbuilder-lg.TemplatesTransformer.visit
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation calls <xref:ParseTree%23accept> on the
      specified tree.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type: ParseTree
          description: ''
    inheritanceDescription: <b>Inherited From</b> AbstractParseTreeVisitor.visit
  - name: visitChildren(RuleNode)
    uid: botbuilder-lg.TemplatesTransformer.visitChildren
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation initializes the aggregate result to
      [defaultResult()](xref:%23defaultResult). Before visiting each child, it
      calls [shouldVisitNextChild](xref:%23shouldVisitNextChild); if the result
      is `false` no more children are visited and the current aggregate
      result is returned. After visiting a child, the aggregate result is
      updated by calling [aggregateResult](xref:%23aggregateResult) with the
      previous aggregate result and the result of visiting the child.

      The default implementation is not safe for use in visitors that modify
      the tree structure. Visitors that modify the tree should override this
      method to behave properly in respect to the specific algorithm in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type: RuleNode
          description: ''
    inheritanceDescription: <b>Inherited From</b> AbstractParseTreeVisitor.visitChildren
  - name: visitErrorNode(ErrorNode)
    uid: botbuilder-lg.TemplatesTransformer.visitErrorNode
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type: ErrorNode
          description: ''
    inheritanceDescription: <b>Inherited From</b> AbstractParseTreeVisitor.visitErrorNode
  - name: visitTerminal(TerminalNode)
    uid: botbuilder-lg.TemplatesTransformer.visitTerminal
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type: TerminalNode
          description: ''
    inheritanceDescription: <b>Inherited From</b> AbstractParseTreeVisitor.visitTerminal
methods:
  - name: transform(ParseTree)
    uid: botbuilder-lg.TemplatesTransformer.transform
    package: botbuilder-lg
    summary: Transform the parse tree into templates.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function transform(parseTree: ParseTree): Templates'
      parameters:
        - id: parseTree
          type: ParseTree
          description: Input abstract syntax tree.
      return:
        description: Parse tree templates.
        type: <xref uid="botbuilder-lg.Templates" />
  - name: visitErrorDefinition(ErrorDefinitionContext)
    uid: botbuilder-lg.TemplatesTransformer.visitErrorDefinition
    package: botbuilder-lg
    summary: Visit a parse tree produced by `LGFileParser.errorDefinition`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitErrorDefinition(context: ErrorDefinitionContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-lg.ErrorDefinitionContext" />
          description: |
            The parse tree.
  - name: visitImportDefinition(ImportDefinitionContext)
    uid: botbuilder-lg.TemplatesTransformer.visitImportDefinition
    package: botbuilder-lg
    summary: Visit a parse tree produced by `LGFileParser.importDefinition`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitImportDefinition(context: ImportDefinitionContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-lg.ImportDefinitionContext" />
          description: |
            The parse tree.
  - name: visitOptionDefinition(OptionDefinitionContext)
    uid: botbuilder-lg.TemplatesTransformer.visitOptionDefinition
    package: botbuilder-lg
    summary: Visit a parse tree produced by `LGFileParser.optionDefinition`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitOptionDefinition(context: OptionDefinitionContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-lg.OptionDefinitionContext" />
          description: |
            The parse tree.
  - name: visitTemplateDefinition(TemplateDefinitionContext)
    uid: botbuilder-lg.TemplatesTransformer.visitTemplateDefinition
    package: botbuilder-lg
    summary: Visit a parse tree produced by `LGFileParser.templateDefinition`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitTemplateDefinition(context: TemplateDefinitionContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-lg.TemplateDefinitionContext" />
          description: |
            The parse tree.
extends: AbstractParseTreeVisitor&lt;void&gt;
