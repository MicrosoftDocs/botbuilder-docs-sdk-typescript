### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGFileParserVisitor
    name: LGFileParserVisitor
    fullName: LGFileParserVisitor<Result>
    children:
      - botbuilder-lg.LGFileParserVisitor.visit
      - botbuilder-lg.LGFileParserVisitor.visitChildren
      - botbuilder-lg.LGFileParserVisitor.visitErrorNode
      - botbuilder-lg.LGFileParserVisitor.visitErrorTemplateName
      - botbuilder-lg.LGFileParserVisitor.visitErrorTemplateString
      - botbuilder-lg.LGFileParserVisitor.visitFile
      - botbuilder-lg.LGFileParserVisitor.visitIfCondition
      - botbuilder-lg.LGFileParserVisitor.visitIfConditionRule
      - botbuilder-lg.LGFileParserVisitor.visitIfElseBody
      - botbuilder-lg.LGFileParserVisitor.visitIfElseTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitImportDefinition
      - botbuilder-lg.LGFileParserVisitor.visitNewline
      - botbuilder-lg.LGFileParserVisitor.visitNormalBody
      - botbuilder-lg.LGFileParserVisitor.visitNormalTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitNormalTemplateString
      - botbuilder-lg.LGFileParserVisitor.visitParagraph
      - botbuilder-lg.LGFileParserVisitor.visitParameters
      - botbuilder-lg.LGFileParserVisitor.visitStructuredBody
      - botbuilder-lg.LGFileParserVisitor.visitStructuredBodyContentLine
      - botbuilder-lg.LGFileParserVisitor.visitStructuredBodyEndLine
      - botbuilder-lg.LGFileParserVisitor.visitStructuredBodyNameLine
      - botbuilder-lg.LGFileParserVisitor.visitStructuredTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitSwitchCaseBody
      - botbuilder-lg.LGFileParserVisitor.visitSwitchCaseRule
      - botbuilder-lg.LGFileParserVisitor.visitSwitchCaseStat
      - botbuilder-lg.LGFileParserVisitor.visitSwitchCaseTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitTemplateDefinition
      - botbuilder-lg.LGFileParserVisitor.visitTemplateName
      - botbuilder-lg.LGFileParserVisitor.visitTemplateNameLine
      - botbuilder-lg.LGFileParserVisitor.visitTemplateString
      - botbuilder-lg.LGFileParserVisitor.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: >-
      This interface defines a complete generic visitor for a parse tree
      produced

      by `LGFileParser`.
    extends:
      name: ParseTreeVisitor<Result>
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visit
    name: visit(ParseTree)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a parse tree, and return a user-defined result of the operation.'
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type:
            - ParseTree
          description: 'The <xref:ParseTree> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the parse tree.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitChildren
    name: visitChildren(RuleNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visit the children of a node, and return a user-defined result
      of the operation.
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type:
            - RuleNode
          description: 'The <xref:RuleNode> whose children should be visited.'
      return:
        type:
          - Result
        description: The result of visiting the children of the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitErrorNode
    name: visitErrorNode(ErrorNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit an error node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type:
            - ErrorNode
          description: 'The <xref:ErrorNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitErrorTemplateName
    name: visitErrorTemplateName
    fullName: visitErrorTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.errorTemplateName`.
    optional: true
    syntax:
      content: 'visitErrorTemplateName?: (ctx: ErrorTemplateNameContext) => Result'
      return:
        type:
          - '(ctx: ErrorTemplateNameContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitErrorTemplateString
    name: visitErrorTemplateString
    fullName: visitErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'visitErrorTemplateString?: (ctx: ErrorTemplateStringContext) => Result'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitFile
    name: visitFile
    fullName: visitFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'visitFile?: (ctx: FileContext) => Result'
      return:
        type:
          - '(ctx: FileContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitIfCondition
    name: visitIfCondition
    fullName: visitIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.ifCondition`.
    optional: true
    syntax:
      content: 'visitIfCondition?: (ctx: IfConditionContext) => Result'
      return:
        type:
          - '(ctx: IfConditionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitIfConditionRule
    name: visitIfConditionRule
    fullName: visitIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'visitIfConditionRule?: (ctx: IfConditionRuleContext) => Result'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitIfElseBody
    name: visitIfElseBody
    fullName: visitIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `ifElseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitIfElseBody?: (ctx: IfElseBodyContext) => Result'
      return:
        type:
          - '(ctx: IfElseBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitIfElseTemplateBody
    name: visitIfElseTemplateBody
    fullName: visitIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'visitIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitImportDefinition
    name: visitImportDefinition
    fullName: visitImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'visitImportDefinition?: (ctx: ImportDefinitionContext) => Result'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitNewline
    name: visitNewline
    fullName: visitNewline
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.newline`.
    optional: true
    syntax:
      content: 'visitNewline?: (ctx: NewlineContext) => Result'
      return:
        type:
          - '(ctx: NewlineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitNormalBody
    name: visitNormalBody
    fullName: visitNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `normalBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitNormalBody?: (ctx: NormalBodyContext) => Result'
      return:
        type:
          - '(ctx: NormalBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitNormalTemplateBody
    name: visitNormalTemplateBody
    fullName: visitNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'visitNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitNormalTemplateString
    name: visitNormalTemplateString
    fullName: visitNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'visitNormalTemplateString?: (ctx: NormalTemplateStringContext) => Result'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitParagraph
    name: visitParagraph
    fullName: visitParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'visitParagraph?: (ctx: ParagraphContext) => Result'
      return:
        type:
          - '(ctx: ParagraphContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitParameters
    name: visitParameters
    fullName: visitParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.parameters`.
    optional: true
    syntax:
      content: 'visitParameters?: (ctx: ParametersContext) => Result'
      return:
        type:
          - '(ctx: ParametersContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitStructuredBody
    name: visitStructuredBody
    fullName: visitStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `structuredBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitStructuredBody?: (ctx: StructuredBodyContext) => Result'
      return:
        type:
          - '(ctx: StructuredBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitStructuredBodyContentLine
    name: visitStructuredBodyContentLine
    fullName: visitStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => Result
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitStructuredBodyEndLine
    name: visitStructuredBodyEndLine
    fullName: visitStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitStructuredBodyNameLine
    name: visitStructuredBodyNameLine
    fullName: visitStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitStructuredTemplateBody
    name: visitStructuredTemplateBody
    fullName: visitStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        visitStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitSwitchCaseBody
    name: visitSwitchCaseBody
    fullName: visitSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitSwitchCaseRule
    name: visitSwitchCaseRule
    fullName: visitSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'visitSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitSwitchCaseStat
    name: visitSwitchCaseStat
    fullName: visitSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'visitSwitchCaseStat?: (ctx: SwitchCaseStatContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitSwitchCaseTemplateBody
    name: visitSwitchCaseTemplateBody
    fullName: visitSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        visitSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        Result
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateBody
    name: visitTemplateBody
    fullName: visitTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitTemplateBody?: (ctx: TemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: TemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateDefinition
    name: visitTemplateDefinition
    fullName: visitTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'visitTemplateDefinition?: (ctx: TemplateDefinitionContext) => Result'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateName
    name: visitTemplateName
    fullName: visitTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateName`.
    optional: true
    syntax:
      content: 'visitTemplateName?: (ctx: TemplateNameContext) => Result'
      return:
        type:
          - '(ctx: TemplateNameContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateNameLine
    name: visitTemplateNameLine
    fullName: visitTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'visitTemplateNameLine?: (ctx: TemplateNameLineContext) => Result'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateString
    name: visitTemplateString
    fullName: visitTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateString`.
    optional: true
    syntax:
      content: 'visitTemplateString?: (ctx: TemplateStringContext) => Result'
      return:
        type:
          - '(ctx: TemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTerminal
    name: visitTerminal(TerminalNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a terminal node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type:
            - TerminalNode
          description: 'The <xref:TerminalNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
