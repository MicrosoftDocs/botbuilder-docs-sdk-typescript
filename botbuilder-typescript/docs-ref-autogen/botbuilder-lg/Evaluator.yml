### YamlMime:TSType
name: Evaluator
uid: botbuilder-lg.Evaluator
package: botbuilder-lg
summary: Evaluation runtime engine
fullName: Evaluator
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Evaluator(Template[], ExpressionParser, EvaluationOptions)'
    uid: botbuilder-lg.Evaluator.constructor
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new Evaluator(templates: Template[], expressionParser: ExpressionParser,
        opt: EvaluationOptions)
      parameters:
        - id: templates
          type: '<xref uid="botbuilder-lg.Template" />[]'
          description: ''
        - id: expressionParser
          type: ExpressionParser
          description: ''
        - id: opt
          type: <xref uid="botbuilder-lg.EvaluationOptions" />
          description: ''
properties:
  - name: activityAttachmentFunctionName
    uid: botbuilder-lg.Evaluator.activityAttachmentFunctionName
    package: botbuilder-lg
    summary: ''
    fullName: activityAttachmentFunctionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static activityAttachmentFunctionName: "ActivityAttachment" =
        "ActivityAttachment"
      return:
        type: '"ActivityAttachment"'
        description: ''
  - name: expandTextFunctionName
    uid: botbuilder-lg.Evaluator.expandTextFunctionName
    package: botbuilder-lg
    summary: ''
    fullName: expandTextFunctionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static expandTextFunctionName: "expandText" = "expandText"'
      return:
        type: '"expandText"'
        description: ''
  - name: expressionParser
    uid: botbuilder-lg.Evaluator.expressionParser
    package: botbuilder-lg
    summary: Expression parser.
    fullName: expressionParser
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public expressionParser: ExpressionParser'
      return:
        type: ExpressionParser
        description: ''
  - name: fromFileFunctionName
    uid: botbuilder-lg.Evaluator.fromFileFunctionName
    package: botbuilder-lg
    summary: ''
    fullName: fromFileFunctionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static fromFileFunctionName: "fromFile" = "fromFile"'
      return:
        type: '"fromFile"'
        description: ''
  - name: isTemplateFunctionName
    uid: botbuilder-lg.Evaluator.isTemplateFunctionName
    package: botbuilder-lg
    summary: ''
    fullName: isTemplateFunctionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static isTemplateFunctionName: "isTemplate" = "isTemplate"'
      return:
        type: '"isTemplate"'
        description: ''
  - name: LGType
    uid: botbuilder-lg.Evaluator.LGType
    package: botbuilder-lg
    summary: ''
    fullName: LGType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static LGType: "lgType" = "lgType"'
      return:
        type: '"lgType"'
        description: ''
  - name: ReExecuteSuffix
    uid: botbuilder-lg.Evaluator.ReExecuteSuffix
    package: botbuilder-lg
    summary: ''
    fullName: ReExecuteSuffix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static ReExecuteSuffix: "!" = "!"'
      return:
        type: '"!"'
        description: ''
  - name: templateFunctionName
    uid: botbuilder-lg.Evaluator.templateFunctionName
    package: botbuilder-lg
    summary: ''
    fullName: templateFunctionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static templateFunctionName: "template" = "template"'
      return:
        type: '"template"'
        description: ''
  - name: templateMap
    uid: botbuilder-lg.Evaluator.templateMap
    package: botbuilder-lg
    summary: TemplateMap.
    fullName: templateMap
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public templateMap: [key: string]: Template'
      return:
        type: '[key: string]\: <xref uid="botbuilder-lg.Template" />'
        description: ''
  - name: templates
    uid: botbuilder-lg.Evaluator.templates
    package: botbuilder-lg
    summary: Templates.
    fullName: templates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public templates: Template[]'
      return:
        type: '<xref uid="botbuilder-lg.Template" />[]'
        description: ''
methods:
  - name: 'checkExpressionResult(string, string, any, string, string, string)'
    uid: botbuilder-lg.Evaluator.checkExpressionResult
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function checkExpressionResult(exp: string, error: string,
        result: any, templateName: string, inlineContent: string, errorPrefix:
        string)
      parameters:
        - id: exp
          type: string
          description: ''
        - id: error
          type: string
          description: ''
        - id: result
          type: any
          description: ''
        - id: templateName
          type: string
          description: ''
        - id: inlineContent
          type: string
          description: ''
        - id: errorPrefix
          type: string
          description: ''
  - name: 'concatErrorMsg(string, string)'
    uid: botbuilder-lg.Evaluator.concatErrorMsg
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function concatErrorMsg(firstError: string, secondError: string)'
      parameters:
        - id: firstError
          type: string
          description: ''
        - id: secondError
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: 'constructScope(string, any[])'
    uid: botbuilder-lg.Evaluator.constructScope
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function constructScope(inputTemplateName: string, args: any[])'
      parameters:
        - id: inputTemplateName
          type: string
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: any
        description: ''
  - name: 'evaluateTemplate(string, any)'
    uid: botbuilder-lg.Evaluator.evaluateTemplate
    package: botbuilder-lg
    summary: Evaluate a template with given name and scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function evaluateTemplate(inputTemplateName: string, scope: any)'
      parameters:
        - id: inputTemplateName
          type: string
          description: Template name.
        - id: scope
          type: any
          description: Scope.
      return:
        type: any
        description: Evaluate result.
  - name: visit(ParseTree)
    uid: botbuilder-lg.Evaluator.visit
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation calls <xref:ParseTree%23accept> on the
      specified tree.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type: ParseTree
          description: ''
      return:
        type: any
        description: ''
  - name: visitChildren(RuleNode)
    uid: botbuilder-lg.Evaluator.visitChildren
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation initializes the aggregate result to
      [defaultResult()](xref:%23defaultResult). Before visiting each child, it
      calls [shouldVisitNextChild](xref:%23shouldVisitNextChild); if the result
      is `false` no more children are visited and the current aggregate
      result is returned. After visiting a child, the aggregate result is
      updated by calling [aggregateResult](xref:%23aggregateResult) with the
      previous aggregate result and the result of visiting the child.

      The default implementation is not safe for use in visitors that modify
      the tree structure. Visitors that modify the tree should override this
      method to behave properly in respect to the specific algorithm in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type: RuleNode
          description: ''
      return:
        type: any
        description: ''
  - name: visitErrorNode(ErrorNode)
    uid: botbuilder-lg.Evaluator.visitErrorNode
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type: ErrorNode
          description: ''
      return:
        type: any
        description: ''
  - name: visitIfElseBody(IfElseBodyContext)
    uid: botbuilder-lg.Evaluator.visitIfElseBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitIfElseBody(ctx: IfElseBodyContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.IfElseBodyContext" />
          description: ''
      return:
        type: any
        description: ''
  - name: visitNormalBody(NormalBodyContext)
    uid: botbuilder-lg.Evaluator.visitNormalBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitNormalBody(ctx: NormalBodyContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.NormalBodyContext" />
          description: ''
      return:
        type: any
        description: ''
  - name: visitNormalTemplateBody(NormalTemplateBodyContext)
    uid: botbuilder-lg.Evaluator.visitNormalTemplateBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitNormalTemplateBody(ctx: NormalTemplateBodyContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.NormalTemplateBodyContext" />
          description: ''
      return:
        type: any
        description: ''
  - name: visitNormalTemplateString(NormalTemplateStringContext)
    uid: botbuilder-lg.Evaluator.visitNormalTemplateString
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitNormalTemplateString(ctx: NormalTemplateStringContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.NormalTemplateStringContext" />
          description: ''
      return:
        type: string
        description: ''
  - name: visitStructuredTemplateBody(StructuredTemplateBodyContext)
    uid: botbuilder-lg.Evaluator.visitStructuredTemplateBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitStructuredTemplateBody(ctx: StructuredTemplateBodyContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.StructuredTemplateBodyContext" />
          description: ''
      return:
        type: any
        description: ''
  - name: visitSwitchCaseBody(SwitchCaseBodyContext)
    uid: botbuilder-lg.Evaluator.visitSwitchCaseBody
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitSwitchCaseBody(ctx: SwitchCaseBodyContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.SwitchCaseBodyContext" />
          description: ''
      return:
        type: string
        description: ''
  - name: visitTerminal(TerminalNode)
    uid: botbuilder-lg.Evaluator.visitTerminal
    package: botbuilder-lg
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type: TerminalNode
          description: ''
      return:
        type: any
        description: ''
  - name: 'wrappedEvalTextContainsExpression(string, RegExp)'
    uid: botbuilder-lg.Evaluator.wrappedEvalTextContainsExpression
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function wrappedEvalTextContainsExpression(exp: string, regex: RegExp)'
      parameters:
        - id: exp
          type: string
          description: ''
        - id: regex
          type: RegExp
          description: ''
      return:
        type: string
        description: ''
extends: AbstractParseTreeVisitor&lt;any&gt;
