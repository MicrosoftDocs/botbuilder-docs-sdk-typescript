### YamlMime:TSType
name: TemplateExtensions
uid: botbuilder-lg.TemplateExtensions
package: botbuilder-lg
summary: Extension methods for LG.
fullName: TemplateExtensions
remarks: ''
isPreview: false
isDeprecated: false
type: class
methods:
  - name: 'convertToRange(ParserRuleContext, number)'
    uid: botbuilder-lg.TemplateExtensions.convertToRange
    package: botbuilder-lg
    summary: Convert antlr parser into Range.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function convertToRange(context: ParserRuleContext, lineOffset?:
        number)
      parameters:
        - id: context
          type: ParserRuleContext
          description: Antlr parse context.
        - id: lineOffset
          type: number
          description: ''
      return:
        type: <xref uid="botbuilder-lg.Range" />
        description: Range object.
  - name: evalEscape(string)
    uid: botbuilder-lg.TemplateExtensions.evalEscape
    package: botbuilder-lg
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function evalEscape(exp: string)'
      parameters:
        - id: exp
          type: string
          description: ''
      return:
        type: string
        description: ''
  - name: getPrefixErrorMessage(NormalTemplateStringContext)
    uid: botbuilder-lg.TemplateExtensions.getPrefixErrorMessage
    package: botbuilder-lg
    summary: Get prefix error message from normal template sting context.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getPrefixErrorMessage(context:
        NormalTemplateStringContext)
      parameters:
        - id: context
          type: <xref uid="botbuilder-lg.NormalTemplateStringContext" />
          description: Normal template sting context.
      return:
        type: string
        description: Prefix error message.
  - name: isPureExpression(KeyValueStructureValueContext)
    uid: botbuilder-lg.TemplateExtensions.isPureExpression
    package: botbuilder-lg
    summary: If a value is pure Expression.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function isPureExpression(ctx: KeyValueStructureValueContext)'
      parameters:
        - id: ctx
          type: <xref uid="botbuilder-lg.KeyValueStructureValueContext" />
          description: |
            Key value structure value context.
      return:
        type: boolean
        description: ''
  - name: newGuid()
    uid: botbuilder-lg.TemplateExtensions.newGuid
    package: botbuilder-lg
    summary: Generate new guid string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: static function newGuid()
      return:
        type: string
        description: ''
  - name: normalizePath(string)
    uid: botbuilder-lg.TemplateExtensions.normalizePath
    package: botbuilder-lg
    summary: >-
      Normalize authored path to os path.

      path is from authored content which doesn't know what OS it is running on.

      This method treats / and \ both as seperators regardless of OS, for
      windows that means / -> \ and for linux/mac \ -> /.

      This allows author to use ../foo.lg or ..\foo.lg as equivelents for
      importing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function normalizePath(ambiguousPath: string)'
      parameters:
        - id: ambiguousPath
          type: string
          description: AuthoredPath.
      return:
        type: string
        description: Path expressed as OS path.
  - name: readLine(string)
    uid: botbuilder-lg.TemplateExtensions.readLine
    package: botbuilder-lg
    summary: read line from text.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function readLine(input: string)'
      parameters:
        - id: input
          type: string
          description: |
            Text content.
      return:
        type: 'string[]'
        description: ''
  - name: trimExpression(string)
    uid: botbuilder-lg.TemplateExtensions.trimExpression
    package: botbuilder-lg
    summary: 'Trim expression. ${abc} => abc,  ${a == {}} => a == {}.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function trimExpression(expression: string)'
      parameters:
        - id: expression
          type: string
          description: Input expression string.
      return:
        type: string
        description: Pure expression string.
