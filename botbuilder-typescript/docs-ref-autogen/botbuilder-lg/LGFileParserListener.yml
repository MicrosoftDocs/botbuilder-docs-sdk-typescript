### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGFileParserListener
    name: LGFileParserListener
    fullName: LGFileParserListener
    children:
      - botbuilder-lg.LGFileParserListener.enterErrorTemplateName
      - botbuilder-lg.LGFileParserListener.enterErrorTemplateString
      - botbuilder-lg.LGFileParserListener.enterEveryRule
      - botbuilder-lg.LGFileParserListener.enterFile
      - botbuilder-lg.LGFileParserListener.enterIfCondition
      - botbuilder-lg.LGFileParserListener.enterIfConditionRule
      - botbuilder-lg.LGFileParserListener.enterIfElseBody
      - botbuilder-lg.LGFileParserListener.enterIfElseTemplateBody
      - botbuilder-lg.LGFileParserListener.enterImportDefinition
      - botbuilder-lg.LGFileParserListener.enterNewline
      - botbuilder-lg.LGFileParserListener.enterNormalBody
      - botbuilder-lg.LGFileParserListener.enterNormalTemplateBody
      - botbuilder-lg.LGFileParserListener.enterNormalTemplateString
      - botbuilder-lg.LGFileParserListener.enterParagraph
      - botbuilder-lg.LGFileParserListener.enterParameters
      - botbuilder-lg.LGFileParserListener.enterStructuredBody
      - botbuilder-lg.LGFileParserListener.enterStructuredBodyContentLine
      - botbuilder-lg.LGFileParserListener.enterStructuredBodyEndLine
      - botbuilder-lg.LGFileParserListener.enterStructuredBodyNameLine
      - botbuilder-lg.LGFileParserListener.enterStructuredTemplateBody
      - botbuilder-lg.LGFileParserListener.enterSwitchCaseBody
      - botbuilder-lg.LGFileParserListener.enterSwitchCaseRule
      - botbuilder-lg.LGFileParserListener.enterSwitchCaseStat
      - botbuilder-lg.LGFileParserListener.enterSwitchCaseTemplateBody
      - botbuilder-lg.LGFileParserListener.enterTemplateBody
      - botbuilder-lg.LGFileParserListener.enterTemplateDefinition
      - botbuilder-lg.LGFileParserListener.enterTemplateName
      - botbuilder-lg.LGFileParserListener.enterTemplateNameLine
      - botbuilder-lg.LGFileParserListener.enterTemplateString
      - botbuilder-lg.LGFileParserListener.exitErrorTemplateName
      - botbuilder-lg.LGFileParserListener.exitErrorTemplateString
      - botbuilder-lg.LGFileParserListener.exitEveryRule
      - botbuilder-lg.LGFileParserListener.exitFile
      - botbuilder-lg.LGFileParserListener.exitIfCondition
      - botbuilder-lg.LGFileParserListener.exitIfConditionRule
      - botbuilder-lg.LGFileParserListener.exitIfElseBody
      - botbuilder-lg.LGFileParserListener.exitIfElseTemplateBody
      - botbuilder-lg.LGFileParserListener.exitImportDefinition
      - botbuilder-lg.LGFileParserListener.exitNewline
      - botbuilder-lg.LGFileParserListener.exitNormalBody
      - botbuilder-lg.LGFileParserListener.exitNormalTemplateBody
      - botbuilder-lg.LGFileParserListener.exitNormalTemplateString
      - botbuilder-lg.LGFileParserListener.exitParagraph
      - botbuilder-lg.LGFileParserListener.exitParameters
      - botbuilder-lg.LGFileParserListener.exitStructuredBody
      - botbuilder-lg.LGFileParserListener.exitStructuredBodyContentLine
      - botbuilder-lg.LGFileParserListener.exitStructuredBodyEndLine
      - botbuilder-lg.LGFileParserListener.exitStructuredBodyNameLine
      - botbuilder-lg.LGFileParserListener.exitStructuredTemplateBody
      - botbuilder-lg.LGFileParserListener.exitSwitchCaseBody
      - botbuilder-lg.LGFileParserListener.exitSwitchCaseRule
      - botbuilder-lg.LGFileParserListener.exitSwitchCaseStat
      - botbuilder-lg.LGFileParserListener.exitSwitchCaseTemplateBody
      - botbuilder-lg.LGFileParserListener.exitTemplateBody
      - botbuilder-lg.LGFileParserListener.exitTemplateDefinition
      - botbuilder-lg.LGFileParserListener.exitTemplateName
      - botbuilder-lg.LGFileParserListener.exitTemplateNameLine
      - botbuilder-lg.LGFileParserListener.exitTemplateString
      - botbuilder-lg.LGFileParserListener.visitErrorNode
      - botbuilder-lg.LGFileParserListener.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: |-
      This interface defines a complete listener for a parse tree produced by
      `LGFileParser`.
    extends:
      name: ParseTreeListener
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterErrorTemplateName
    name: enterErrorTemplateName
    fullName: enterErrorTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.errorTemplateName`.
    optional: true
    syntax:
      content: 'enterErrorTemplateName?: (ctx: ErrorTemplateNameContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterErrorTemplateString
    name: enterErrorTemplateString
    fullName: enterErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'enterErrorTemplateString?: (ctx: ErrorTemplateStringContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterEveryRule
    name: enterEveryRule
    fullName: enterEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enterEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterFile
    name: enterFile
    fullName: enterFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'enterFile?: (ctx: FileContext) => void'
      return:
        type:
          - '(ctx: FileContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterIfCondition
    name: enterIfCondition
    fullName: enterIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.ifCondition`.
    optional: true
    syntax:
      content: 'enterIfCondition?: (ctx: IfConditionContext) => void'
      return:
        type:
          - '(ctx: IfConditionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterIfConditionRule
    name: enterIfConditionRule
    fullName: enterIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'enterIfConditionRule?: (ctx: IfConditionRuleContext) => void'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterIfElseBody
    name: enterIfElseBody
    fullName: enterIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `ifElseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterIfElseBody?: (ctx: IfElseBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterIfElseTemplateBody
    name: enterIfElseTemplateBody
    fullName: enterIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'enterIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterImportDefinition
    name: enterImportDefinition
    fullName: enterImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'enterImportDefinition?: (ctx: ImportDefinitionContext) => void'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterNewline
    name: enterNewline
    fullName: enterNewline
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.newline`.
    optional: true
    syntax:
      content: 'enterNewline?: (ctx: NewlineContext) => void'
      return:
        type:
          - '(ctx: NewlineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterNormalBody
    name: enterNormalBody
    fullName: enterNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `normalBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterNormalBody?: (ctx: NormalBodyContext) => void'
      return:
        type:
          - '(ctx: NormalBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterNormalTemplateBody
    name: enterNormalTemplateBody
    fullName: enterNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'enterNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterNormalTemplateString
    name: enterNormalTemplateString
    fullName: enterNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'enterNormalTemplateString?: (ctx: NormalTemplateStringContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterParagraph
    name: enterParagraph
    fullName: enterParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'enterParagraph?: (ctx: ParagraphContext) => void'
      return:
        type:
          - '(ctx: ParagraphContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterParameters
    name: enterParameters
    fullName: enterParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.parameters`.
    optional: true
    syntax:
      content: 'enterParameters?: (ctx: ParametersContext) => void'
      return:
        type:
          - '(ctx: ParametersContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterStructuredBody
    name: enterStructuredBody
    fullName: enterStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `structuredBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterStructuredBody?: (ctx: StructuredBodyContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterStructuredBodyContentLine
    name: enterStructuredBodyContentLine
    fullName: enterStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        enterStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => void
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterStructuredBodyEndLine
    name: enterStructuredBodyEndLine
    fullName: enterStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: 'enterStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterStructuredBodyNameLine
    name: enterStructuredBodyNameLine
    fullName: enterStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        enterStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        void
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterStructuredTemplateBody
    name: enterStructuredTemplateBody
    fullName: enterStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        enterStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterSwitchCaseBody
    name: enterSwitchCaseBody
    fullName: enterSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterSwitchCaseRule
    name: enterSwitchCaseRule
    fullName: enterSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'enterSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterSwitchCaseStat
    name: enterSwitchCaseStat
    fullName: enterSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'enterSwitchCaseStat?: (ctx: SwitchCaseStatContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterSwitchCaseTemplateBody
    name: enterSwitchCaseTemplateBody
    fullName: enterSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        enterSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateBody
    name: enterTemplateBody
    fullName: enterTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterTemplateBody?: (ctx: TemplateBodyContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateDefinition
    name: enterTemplateDefinition
    fullName: enterTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'enterTemplateDefinition?: (ctx: TemplateDefinitionContext) => void'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateName
    name: enterTemplateName
    fullName: enterTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateName`.
    optional: true
    syntax:
      content: 'enterTemplateName?: (ctx: TemplateNameContext) => void'
      return:
        type:
          - '(ctx: TemplateNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateNameLine
    name: enterTemplateNameLine
    fullName: enterTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'enterTemplateNameLine?: (ctx: TemplateNameLineContext) => void'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateString
    name: enterTemplateString
    fullName: enterTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateString`.
    optional: true
    syntax:
      content: 'enterTemplateString?: (ctx: TemplateStringContext) => void'
      return:
        type:
          - '(ctx: TemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitErrorTemplateName
    name: exitErrorTemplateName
    fullName: exitErrorTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.errorTemplateName`.
    optional: true
    syntax:
      content: 'exitErrorTemplateName?: (ctx: ErrorTemplateNameContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitErrorTemplateString
    name: exitErrorTemplateString
    fullName: exitErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'exitErrorTemplateString?: (ctx: ErrorTemplateStringContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitEveryRule
    name: exitEveryRule
    fullName: exitEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exitEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitFile
    name: exitFile
    fullName: exitFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'exitFile?: (ctx: FileContext) => void'
      return:
        type:
          - '(ctx: FileContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitIfCondition
    name: exitIfCondition
    fullName: exitIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.ifCondition`.
    optional: true
    syntax:
      content: 'exitIfCondition?: (ctx: IfConditionContext) => void'
      return:
        type:
          - '(ctx: IfConditionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitIfConditionRule
    name: exitIfConditionRule
    fullName: exitIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'exitIfConditionRule?: (ctx: IfConditionRuleContext) => void'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitIfElseBody
    name: exitIfElseBody
    fullName: exitIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `ifElseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitIfElseBody?: (ctx: IfElseBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitIfElseTemplateBody
    name: exitIfElseTemplateBody
    fullName: exitIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'exitIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitImportDefinition
    name: exitImportDefinition
    fullName: exitImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'exitImportDefinition?: (ctx: ImportDefinitionContext) => void'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitNewline
    name: exitNewline
    fullName: exitNewline
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.newline`.
    optional: true
    syntax:
      content: 'exitNewline?: (ctx: NewlineContext) => void'
      return:
        type:
          - '(ctx: NewlineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitNormalBody
    name: exitNormalBody
    fullName: exitNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `normalBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitNormalBody?: (ctx: NormalBodyContext) => void'
      return:
        type:
          - '(ctx: NormalBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitNormalTemplateBody
    name: exitNormalTemplateBody
    fullName: exitNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'exitNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitNormalTemplateString
    name: exitNormalTemplateString
    fullName: exitNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'exitNormalTemplateString?: (ctx: NormalTemplateStringContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitParagraph
    name: exitParagraph
    fullName: exitParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'exitParagraph?: (ctx: ParagraphContext) => void'
      return:
        type:
          - '(ctx: ParagraphContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitParameters
    name: exitParameters
    fullName: exitParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.parameters`.
    optional: true
    syntax:
      content: 'exitParameters?: (ctx: ParametersContext) => void'
      return:
        type:
          - '(ctx: ParametersContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitStructuredBody
    name: exitStructuredBody
    fullName: exitStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `structuredBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitStructuredBody?: (ctx: StructuredBodyContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitStructuredBodyContentLine
    name: exitStructuredBodyContentLine
    fullName: exitStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        exitStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => void
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitStructuredBodyEndLine
    name: exitStructuredBodyEndLine
    fullName: exitStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: 'exitStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitStructuredBodyNameLine
    name: exitStructuredBodyNameLine
    fullName: exitStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        exitStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        void
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitStructuredTemplateBody
    name: exitStructuredTemplateBody
    fullName: exitStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        exitStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitSwitchCaseBody
    name: exitSwitchCaseBody
    fullName: exitSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitSwitchCaseRule
    name: exitSwitchCaseRule
    fullName: exitSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'exitSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitSwitchCaseStat
    name: exitSwitchCaseStat
    fullName: exitSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'exitSwitchCaseStat?: (ctx: SwitchCaseStatContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitSwitchCaseTemplateBody
    name: exitSwitchCaseTemplateBody
    fullName: exitSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        exitSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateBody
    name: exitTemplateBody
    fullName: exitTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitTemplateBody?: (ctx: TemplateBodyContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateDefinition
    name: exitTemplateDefinition
    fullName: exitTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'exitTemplateDefinition?: (ctx: TemplateDefinitionContext) => void'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateName
    name: exitTemplateName
    fullName: exitTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateName`.
    optional: true
    syntax:
      content: 'exitTemplateName?: (ctx: TemplateNameContext) => void'
      return:
        type:
          - '(ctx: TemplateNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateNameLine
    name: exitTemplateNameLine
    fullName: exitTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'exitTemplateNameLine?: (ctx: TemplateNameLineContext) => void'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateString
    name: exitTemplateString
    fullName: exitTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateString`.
    optional: true
    syntax:
      content: 'exitTemplateString?: (ctx: TemplateStringContext) => void'
      return:
        type:
          - '(ctx: TemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.visitErrorNode
    name: visitErrorNode
    fullName: visitErrorNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitErrorNode?: (node: ErrorNode) => void'
      return:
        type:
          - '(node: ErrorNode) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.visitTerminal
    name: visitTerminal
    fullName: visitTerminal
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitTerminal?: (node: TerminalNode) => void'
      return:
        type:
          - '(node: TerminalNode) => void'
        description: ''
    package: botbuilder-lg
