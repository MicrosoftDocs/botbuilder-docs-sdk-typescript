### YamlMime:TSType
name: TemplateEngineLanguageGenerator
uid: botbuilder-dialogs-adaptive.TemplateEngineLanguageGenerator
package: botbuilder-dialogs-adaptive
summary: LanguageGenerator implementation which uses LGFile.
fullName: TemplateEngineLanguageGenerator
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      TemplateEngineLanguageGenerator(Templates | string, string | Map<string,
      Resource[]>, Map<string, Resource[]>)
    uid: botbuilder-dialogs-adaptive.TemplateEngineLanguageGenerator.constructor
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new TemplateEngineLanguageGenerator(arg1?: Templates | string, arg2?:
        string | Map<string, Resource[]>, arg3?: Map<string, Resource[]>)
      parameters:
        - id: arg1
          type: Templates | string
          description: ''
        - id: arg2
          type: 'string | Map&lt;string, Resource[]&gt;'
          description: ''
        - id: arg3
          type: 'Map&lt;string, Resource[]&gt;'
          description: ''
properties:
  - name: id
    uid: botbuilder-dialogs-adaptive.TemplateEngineLanguageGenerator.id
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
methods:
  - name: 'generate(DialogContext, string, object)'
    uid: botbuilder-dialogs-adaptive.TemplateEngineLanguageGenerator.generate
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generate(dialogContext: DialogContext, template: string, data:
        object)
      parameters:
        - id: dialogContext
          type: DialogContext
          description: ''
        - id: template
          type: string
          description: ''
        - id: data
          type: object
          description: ''
      return:
        type: Promise&lt;string&gt;
        description: ''
