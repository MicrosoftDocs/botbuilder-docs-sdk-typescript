### YamlMime:TSType
name: AdaptiveDialog
uid: botbuilder-dialogs-adaptive.AdaptiveDialog
package: botbuilder-dialogs-adaptive
summary: >-
  The Adaptive Dialog models conversation using events and events to adapt
  dynamically to changing conversation flow.
fullName: AdaptiveDialog<O>
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AdaptiveDialog<O>(string)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.constructor
    package: botbuilder-dialogs-adaptive
    summary: Creates a new `AdaptiveDialog` instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new AdaptiveDialog(dialogId?: string)'
      parameters:
        - id: dialogId
          type: string
          description: (Optional) unique ID of the component within its parents dialog set.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: autoEndDialog
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.autoEndDialog
    package: botbuilder-dialogs-adaptive
    summary: Whether to end the dialog when there are no actions to execute.
    fullName: autoEndDialog
    remarks: >-
      If true, when there are no actions to execute, the current dialog will
      end.

      If false, when there are no actions to execute, the current dialog will
      simply end the turn and still be active.

      Defaults to a value of true.
    isDeprecated: false
    syntax:
      content: 'autoEndDialog: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: conditionTracker
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.conditionTracker
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: conditionTracker
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static conditionTracker: string'
      return:
        description: ''
        type: string
  - name: defaultResultProperty
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.defaultResultProperty
    package: botbuilder-dialogs-adaptive
    summary: >-
      The property to return as the result when the dialog ends when there are
      no more Actions and `AutoEndDialog = true`.
    fullName: defaultResultProperty
    remarks: Defaults to a value of `dialog.result`.
    isDeprecated: false
    syntax:
      content: 'defaultResultProperty: string'
      return:
        description: ''
        type: string
  - name: generator
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.generator
    package: botbuilder-dialogs-adaptive
    summary: Optional. Language Generator override.
    fullName: generator
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'generator?: LanguageGenerator<unknown, Record<string, unknown>>'
      return:
        description: ''
        type: >-
          <xref uid="botbuilder-dialogs-adaptive.LanguageGenerator"
          />&lt;unknown, Record&lt;string, unknown&gt;&gt;
  - name: id
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: string id
      return:
        description: The Id for the dialog.
        type: string
  - name: recognizer
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.recognizer
    package: botbuilder-dialogs-adaptive
    summary: Optional. Recognizer used to analyze any message utterances.
    fullName: recognizer
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'recognizer?: Recognizer'
      return:
        description: ''
        type: Recognizer
  - name: schema
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.schema
    package: botbuilder-dialogs-adaptive
    summary: Gets the JSON Schema for the dialog.
    fullName: schema
    remarks: ''
    isDeprecated: false
    syntax:
      content: object schema
      return:
        description: The dialog schema.
        type: object
  - name: selector
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.selector
    package: botbuilder-dialogs-adaptive
    summary: Optional. The selector for picking the possible events to execute.
    fullName: selector
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'selector: TriggerSelector'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Get the current telemetry client.
    fullName: telemetryClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        description: >-
          The [BotTelemetryClient](xref:botbuilder.BotTelemetryClient) to use
          for logging.
        type: BotTelemetryClient
  - name: triggers
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.triggers
    package: botbuilder-dialogs-adaptive
    summary: Trigger handlers to respond to conditions which modify the executing plan.
    fullName: triggers
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'triggers: OnCondition[]'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.OnCondition" />[]
inheritedProperties:
  - name: dialogs
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.dialogs
    package: botbuilder-dialogs-adaptive
    summary: The containers dialog set.
    fullName: dialogs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dialogs: DialogSet'
      return:
        description: ''
        type: DialogSet
    inheritanceDescription: <b>Inherited From</b> DialogContainer.dialogs
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult<any>'
      return:
        description: ''
        type: DialogTurnResult&lt;any&gt;
    inheritanceDescription: <b>Inherited From</b> DialogContainer.EndOfTurn
inheritedMethods:
  - name: configure(Record<string, unknown>)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): AdaptiveDialog<O>'
      parameters:
        - id: config
          type: Record&lt;string, unknown&gt;
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: <xref uid="botbuilder-dialogs-adaptive.AdaptiveDialog" />&lt;O&gt;
    inheritanceDescription: <b>Inherited From</b> DialogContainer.configure
  - name: findDialog(string)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.findDialog
    package: botbuilder-dialogs-adaptive
    summary: Finds a child dialog that was previously added to the container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function findDialog(dialogId: string): undefined | Dialog<{}>'
      parameters:
        - id: dialogId
          type: string
          description: ID of the dialog to lookup.
      return:
        description: The Dialog if found; otherwise null.
        type: undefined | Dialog&lt;{}&gt;
    inheritanceDescription: <b>Inherited From</b> DialogContainer.findDialog
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isDeprecated: false
    syntax:
      content: 'function getVersion(): string'
      return:
        description: >-
          Unique string which should only change when dialog has changed in a
          way that should restart the dialog.
        type: string
    inheritanceDescription: <b>Inherited From</b> DialogContainer.getVersion
  - name: onDialogEvent(DialogContext, DialogEvent)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: |-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onDialogEvent(dc: DialogContext, e: DialogEvent):
        Promise<boolean>
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: <b>Inherited From</b> DialogContainer.onDialogEvent
methods:
  - name: beginDialog(DialogContext, O)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: Called when the dialog is started and pushed onto the dialog stack.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options?: O):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: options
          type: O
          description: Optional, initial information to pass to the dialog.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when the dialog is _continued_, where it is the active dialog and
      the

      user replies with a new activity.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function continueDialog(dc: DialogContext):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
  - name: createChildContext(DialogContext)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.createChildContext
    package: botbuilder-dialogs-adaptive
    summary: >-
      Creates a child [DialogContext](xref:botbuilder-dialogs.DialogContext) for
      the given context.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createChildContext(dc: DialogContext): DialogContext'
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: >-
          The child [DialogContext](xref:botbuilder-dialogs.DialogContext) or
          null if no
          [AdaptiveDialogState.actions](xref:botbuilder-dialogs-adaptive.AdaptiveDialogState.actions)
          are found for the given context.
        type: DialogContext
  - name: endDialog(TurnContext, DialogInstance<any>, DialogReason)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.endDialog
    package: botbuilder-dialogs-adaptive
    summary: Called when the dialog is ending.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(turnContext: TurnContext, instance:
        DialogInstance<any>, reason: DialogReason): Promise<void>
      parameters:
        - id: turnContext
          type: TurnContext
          description: The context object for this turn.
        - id: instance
          type: DialogInstance&lt;any&gt;
          description: >-
            State information associated with the instance of this dialog on the
            dialog stack.
        - id: reason
          type: DialogReason
          description: Reason why the dialog ended.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;void&gt;
  - name: getConverter(keyof AdaptiveDialogConfiguration)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConverter(property: keyof AdaptiveDialogConfiguration):
        Converter<unknown, unknown> | ConverterFactory<unknown, unknown>
      parameters:
        - id: property
          type: keyof AdaptiveDialogConfiguration
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: >-
          Converter&lt;unknown, unknown&gt; | ConverterFactory&lt;unknown,
          unknown&gt;
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: Gets [Dialog](xref:botbuilder-dialogs.Dialog) enumerated dependencies.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getDependencies(): Dialog<{}>[]'
      return:
        description: '[Dialog](xref:botbuilder-dialogs.Dialog)''s enumerated dependencies.'
        type: Dialog&lt;{}&gt;[]
  - name: repromptDialog(DialogContext | TurnContext, DialogInstance<any>)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: Reprompts the user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(context: DialogContext | TurnContext, instance:
        DialogInstance<any>): Promise<void>
      parameters:
        - id: context
          type: DialogContext | TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance&lt;any&gt;
          description: Current state information for this dialog.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;void&gt;
  - name: resumeDialog(DialogContext, DialogReason, any)
    uid: botbuilder-dialogs-adaptive.AdaptiveDialog.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when a child dialog completed its turn, returning control to this
      dialog.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason?: DialogReason,
        _result?: any): Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of the conversation.
        - id: _reason
          type: DialogReason
          description: Reason why the dialog resumed.
        - id: _result
          type: any
          description: |-
            Optional, value returned from the dialog that was called.
            The type of the value returned is dependent on the child dialog.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
extends: DialogContainer&lt;O&gt;
