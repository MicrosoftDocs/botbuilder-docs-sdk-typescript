### YamlMime:TSType
name: ConditionalSelector
uid: botbuilder-dialogs-adaptive.ConditionalSelector
package: botbuilder-dialogs-adaptive
summary: Select between two rule selectors based on a condition.
fullName: ConditionalSelector
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: condition
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.condition
    package: botbuilder-dialogs-adaptive
    summary: Expression that determines which selector to use.
    fullName: condition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'condition: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: ifFalse
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifFalse
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is false.
    fullName: ifFalse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ifFalse: TriggerSelector'
      return:
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
        description: ''
  - name: ifTrue
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifTrue
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is true.
    fullName: ifTrue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ifTrue: TriggerSelector'
      return:
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
        description: ''
  - name: parser
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.parser
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the expression parser to use.
    fullName: parser
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'parser: ExpressionParserInterface'
      return:
        type: ExpressionParserInterface
        description: ''
methods:
  - name: 'initialize(OnCondition[], boolean)'
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.initialize
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function initialize(conditionals: OnCondition[], evaluate: boolean)'
      parameters:
        - id: conditionals
          type: '<xref uid="botbuilder-dialogs-adaptive.OnCondition" />[]'
          description: ''
        - id: evaluate
          type: boolean
          description: ''
  - name: select(ActionContext)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.select
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function select(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type: <xref uid="botbuilder-dialogs-adaptive.ActionContext" />
          description: ''
      return:
        type: 'Promise&lt;number[]&gt;'
        description: ''
