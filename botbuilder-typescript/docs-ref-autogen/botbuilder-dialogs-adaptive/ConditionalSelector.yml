### YamlMime:TSType
name: ConditionalSelector
uid: botbuilder-dialogs-adaptive.ConditionalSelector
package: botbuilder-dialogs-adaptive
summary: Select between two rule selectors based on a condition.
fullName: ConditionalSelector
remarks: ''
isDeprecated: false
type: class
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: condition
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.condition
    package: botbuilder-dialogs-adaptive
    summary: Expression that determines which selector to use.
    fullName: condition
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'condition: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: ifFalse
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifFalse
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is false.
    fullName: ifFalse
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ifFalse: TriggerSelector'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
  - name: ifTrue
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifTrue
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is true.
    fullName: ifTrue
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ifTrue: TriggerSelector'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
  - name: parser
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.parser
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the expression parser to use.
    fullName: parser
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'parser: ExpressionParserInterface'
      return:
        description: ''
        type: ExpressionParserInterface
inheritedMethods:
  - name: configure(Record<string, unknown>)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): ConditionalSelector'
      parameters:
        - id: config
          type: Record&lt;string, unknown&gt;
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: <xref uid="botbuilder-dialogs-adaptive.ConditionalSelector" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TriggerSelector.configure](xref:botbuilder-dialogs-adaptive.TriggerSelector.configure)
methods:
  - name: getConverter(keyof ConditionalSelectorConfiguration)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.getConverter
    package: botbuilder-dialogs-adaptive
    summary: Gets the converter for the selector configuration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConverter(property: keyof ConditionalSelectorConfiguration):
        Converter<unknown, unknown> | ConverterFactory<unknown, unknown>
      parameters:
        - id: property
          type: keyof ConditionalSelectorConfiguration
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: >-
          Converter&lt;unknown, unknown&gt; | ConverterFactory&lt;unknown,
          unknown&gt;
  - name: initialize(OnCondition[], boolean)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.initialize
    package: botbuilder-dialogs-adaptive
    summary: Initialize the selector with the set of rules.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function initialize(conditionals: OnCondition[], evaluate: boolean)'
      parameters:
        - id: conditionals
          type: <xref uid="botbuilder-dialogs-adaptive.OnCondition" />[]
          description: Possible rules to match.
        - id: evaluate
          type: boolean
          description: True if rules should be evaluated on select.
  - name: select(ActionContext)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.select
    package: botbuilder-dialogs-adaptive
    summary: Select the best rule to execute.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function select(actionContext: ActionContext): Promise<OnCondition[]>'
      parameters:
        - id: actionContext
          type: <xref uid="botbuilder-dialogs-adaptive.ActionContext" />
          description: Dialog context for evaluation.
      return:
        description: A Promise with a number array.
        type: >-
          Promise&lt;<xref uid="botbuilder-dialogs-adaptive.OnCondition"
          />[]&gt;
extends: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
