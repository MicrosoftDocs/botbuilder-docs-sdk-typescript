### YamlMime:TSType
name: ActionContext
uid: botbuilder-dialogs-adaptive.ActionContext
package: botbuilder-dialogs-adaptive
summary: ''
fullName: ActionContext
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ActionContext(DialogSet, DialogContext, DialogState, ActionState[],
      symbol)
    uid: botbuilder-dialogs-adaptive.ActionContext.constructor
    package: botbuilder-dialogs-adaptive
    summary: Initializes a new instance of the `ActionContext` class
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ActionContext(dialogs: DialogSet, parentDialogContext:
        DialogContext, state: DialogState, actions: ActionState[], changeKey:
        symbol)
      parameters:
        - id: dialogs
          type: DialogSet
          description: The dialog set to create the action context for.
        - id: parentDialogContext
          type: DialogContext
          description: Parent dialog context.
        - id: state
          type: DialogState
          description: Current dialog state.
        - id: actions
          type: '<xref uid="botbuilder-dialogs-adaptive.ActionState" />[]'
          description: Current list of remaining actions to execute.
        - id: changeKey
          type: symbol
          description: |
            TurnState key for where to persist any changes.
properties:
  - name: actions
    uid: botbuilder-dialogs-adaptive.ActionContext.actions
    package: botbuilder-dialogs-adaptive
    summary: List of actions being executed.
    fullName: actions
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions: ActionState[]'
      return:
        type: '<xref uid="botbuilder-dialogs-adaptive.ActionState" />[]'
        description: ''
  - name: activeDialog
    uid: botbuilder-dialogs-adaptive.ActionContext.activeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Returns the state information for the dialog on the top of the dialog
      stack, or `undefined` if

      the stack is empty.
    fullName: activeDialog
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activeDialog: DialogInstance | undefined'
      return:
        type: DialogInstance | undefined
        description: ''
  - name: changes
    uid: botbuilder-dialogs-adaptive.ActionContext.changes
    package: botbuilder-dialogs-adaptive
    summary: Gets list of changes that are queued to be applied.
    fullName: changes
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'changes: ActionChangeList[]'
      return:
        type: '<xref uid="botbuilder-dialogs-adaptive.ActionChangeList" />[]'
        description: ''
  - name: child
    uid: botbuilder-dialogs-adaptive.ActionContext.child
    package: botbuilder-dialogs-adaptive
    summary: Returns dialog context for child if the active dialog is a container.
    fullName: child
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'child: DialogContext | undefined'
      return:
        type: DialogContext | undefined
        description: ''
  - name: context
    uid: botbuilder-dialogs-adaptive.ActionContext.context
    package: botbuilder-dialogs-adaptive
    summary: Gets the context object for the turn.
    fullName: context
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: TurnContext'
      return:
        type: TurnContext
        description: ''
  - name: dialogManager
    uid: botbuilder-dialogs-adaptive.ActionContext.dialogManager
    package: botbuilder-dialogs-adaptive
    summary: Returns the current dialog manager instance.
    fullName: dialogManager
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dialogManager: DialogManager'
      return:
        type: DialogManager
        description: ''
  - name: dialogs
    uid: botbuilder-dialogs-adaptive.ActionContext.dialogs
    package: botbuilder-dialogs-adaptive
    summary: Gets the dialogs that can be called directly from this context.
    fullName: dialogs
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dialogs: DialogSet'
      return:
        type: DialogSet
        description: ''
  - name: parent
    uid: botbuilder-dialogs-adaptive.ActionContext.parent
    package: botbuilder-dialogs-adaptive
    summary: >-
      The parent dialog context for this dialog context, or `undefined` if this
      context doesn't have a parent.
    fullName: parent
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'parent: DialogContext | undefined'
      return:
        type: DialogContext | undefined
        description: ''
  - name: services
    uid: botbuilder-dialogs-adaptive.ActionContext.services
    package: botbuilder-dialogs-adaptive
    summary: Gets the services collection which is contextual to this dialog context.
    fullName: services
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'services: TurnContextStateCollection'
      return:
        type: TurnContextStateCollection
        description: ''
  - name: stack
    uid: botbuilder-dialogs-adaptive.ActionContext.stack
    package: botbuilder-dialogs-adaptive
    summary: Gets the current dialog stack.
    fullName: stack
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'stack: DialogInstance[]'
      return:
        type: 'DialogInstance[]'
        description: ''
  - name: state
    uid: botbuilder-dialogs-adaptive.ActionContext.state
    package: botbuilder-dialogs-adaptive
    summary: Gets the DialogStateManager which manages view of all memory scopes.
    fullName: state
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state: DialogStateManager'
      return:
        type: DialogStateManager
        description: ''
methods:
  - name: applyChanges()
    uid: botbuilder-dialogs-adaptive.ActionContext.applyChanges
    package: botbuilder-dialogs-adaptive
    summary: Applies any queued up changes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function applyChanges()
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'beginDialog(string, object)'
    uid: botbuilder-dialogs-adaptive.ActionContext.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: |-
      Starts a dialog instance and pushes it onto the dialog stack.
      Creates a new instance of the dialog and pushes it onto the stack.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dialogId: string, options?: object)'
      parameters:
        - id: dialogId
          type: string
          description: ID of the dialog to start.
        - id: options
          type: object
          description: |
            Optional. Arguments to pass into the dialog when it starts.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: 'cancelAllDialogs(boolean, string, any)'
    uid: botbuilder-dialogs-adaptive.ActionContext.cancelAllDialogs
    package: botbuilder-dialogs-adaptive
    summary: 'Cancels all dialogs on the dialog stack, and clears stack.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelAllDialogs(cancelParents?: boolean, eventName?: string,
        eventValue?: any)
      parameters:
        - id: cancelParents
          type: boolean
          description: Optional. If `true` all parent dialogs will be cancelled as well.
        - id: eventName
          type: string
          description: >-
            Optional. Name of a custom event to raise as dialogs are cancelled.
            This defaults to
            [cancelDialog](xref:botbuilder-dialogs.DialogEvents.cancelDialog).
        - id: eventValue
          type: any
          description: |
            Optional. Value to pass along with custom cancellation event.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: continueDialog()
    uid: botbuilder-dialogs-adaptive.ActionContext.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Continues execution of the active dialog, if there is one, by passing this
      dialog context to its

      [Dialog.continueDialog](xref:botbuilder-dialogs.Dialog.continueDialog)
      method.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function continueDialog()
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: 'emitEvent(string, any, boolean, boolean)'
    uid: botbuilder-dialogs-adaptive.ActionContext.emitEvent
    package: botbuilder-dialogs-adaptive
    summary: Searches for a dialog with a given ID.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function emitEvent(name: string, value?: any, bubble?: boolean,
        fromLeaf?: boolean)
      parameters:
        - id: name
          type: string
          description: Name of the event to raise.
        - id: value
          type: any
          description: Optional. Value to send along with the event.
        - id: bubble
          type: boolean
          description: >-
            Optional. Flag to control whether the event should be bubbled to its
            parent if not handled locally. Defaults to a value of `true`.
        - id: fromLeaf
          type: boolean
          description: Optional. Whether the event is emitted from a leaf node.
      return:
        type: Promise&lt;boolean&gt;
        description: '`true` if the event was handled.'
  - name: endDialog(any)
    uid: botbuilder-dialogs-adaptive.ActionContext.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Ends a dialog and pops it off the stack. Returns an optional result to the
      dialog's parent.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function endDialog(result?: any)'
      parameters:
        - id: result
          type: any
          description: >
            Optional. A result to pass to the parent logic. This might be the
            next dialog
                 on the stack, or if this was the last dialog on the stack, a parent dialog context or
                 the bot's turn handler.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: findDialog(string)
    uid: botbuilder-dialogs-adaptive.ActionContext.findDialog
    package: botbuilder-dialogs-adaptive
    summary: Searches for a dialog with a given ID.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findDialog(dialogId: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            ID of the dialog to search for.
      return:
        type: Dialog | undefined
        description: ''
  - name: 'prompt(string, string | Partial<Activity> | PromptOptions)'
    uid: botbuilder-dialogs-adaptive.ActionContext.prompt
    package: botbuilder-dialogs-adaptive
    summary: >-
      Helper function to simplify formatting the options for calling a prompt
      dialog.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prompt(dialogId: string, promptOrOptions: string |
        Partial<Activity> | PromptOptions)
      parameters:
        - id: dialogId
          type: string
          description: ID of the prompt dialog to start.
        - id: promptOrOptions
          type: string | Partial&lt;Activity&gt; | PromptOptions
          description: |-
            The text of the initial prompt to send the user,
                 the activity to send as the initial prompt, or
                 the object with which to format the prompt dialog.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: >-
      prompt(string, string | Partial<Activity> | PromptOptions, string |
      Choice[])
    uid: botbuilder-dialogs-adaptive.ActionContext.prompt_1
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prompt(dialogId: string, promptOrOptions: string |
        Partial<Activity> | PromptOptions, choices: string | Choice[])
      parameters:
        - id: dialogId
          type: string
          description: ''
        - id: promptOrOptions
          type: string | Partial&lt;Activity&gt; | PromptOptions
          description: ''
        - id: choices
          type: 'string | Choice[]'
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: queueChanges(ActionChangeList)
    uid: botbuilder-dialogs-adaptive.ActionContext.queueChanges
    package: botbuilder-dialogs-adaptive
    summary: >-
      Queues up a set of changes that will be applied when applyChanges() is
      called.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function queueChanges(changes: ActionChangeList)'
      parameters:
        - id: changes
          type: <xref uid="botbuilder-dialogs-adaptive.ActionChangeList" />
          description: |
            Plan changes to queue up.
  - name: 'replaceDialog(string, object)'
    uid: botbuilder-dialogs-adaptive.ActionContext.replaceDialog
    package: botbuilder-dialogs-adaptive
    summary: Ends the active dialog and starts a new dialog in its place.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function replaceDialog(dialogId: string, options?: object)'
      parameters:
        - id: dialogId
          type: string
          description: ID of the dialog to start.
        - id: options
          type: object
          description: |
            Optional. Arguments to pass into the new dialog when it starts.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: repromptDialog()
    uid: botbuilder-dialogs-adaptive.ActionContext.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: Requests the active dialog to re-prompt the user for input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function repromptDialog()
      return:
        type: Promise&lt;void&gt;
        description: ''
extends: DialogContext
