### YamlMime:TSType
name: LanguagePolicy
uid: botbuilder-dialogs-adaptive.LanguagePolicy
package: botbuilder-dialogs-adaptive
summary: >-
  Language policy with fallback for each language as most specific to default
  en-us -> en -> default.
fullName: LanguagePolicy
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'LanguagePolicy(string[])'
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.constructor
    package: botbuilder-dialogs-adaptive
    summary: >-
      Initializes a new instance of the
      [LanguagePolicy](xref:botbuilder-dialogs-adaptive.LanguagePolicy) class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new LanguagePolicy(defaultLanguages: string[])'
      parameters:
        - id: defaultLanguages
          type: 'string[]'
          description: |
            Default languages to use.
properties:
  - name: locales
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.locales
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: locales
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static locales: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: Map
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.Map
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: Map
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Map: MapConstructor'
      return:
        description: ''
        type: MapConstructor
inheritedProperties:
  - name: size
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.size
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: size
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Map.size
inheritedMethods:
  - name: clear()
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.clear
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function clear()
    inheritanceDescription: <b>Inherited From</b> Map.clear
  - name: delete(string)
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.delete
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(key: string): boolean'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Map.delete
  - name: entries()
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.entries
    package: botbuilder-dialogs-adaptive
    summary: 'Returns an iterable of key, value pairs for every entry in the map.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function entries(): IterableIterator<[string, string[]]>'
      return:
        description: ''
        type: 'IterableIterator&lt;[string, string[]]&gt;'
    inheritanceDescription: <b>Inherited From</b> Map.entries
  - name: >-
      forEach((value: string[], key: string, map: Map<string, string[]>) =>
      void, any)
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.forEach
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: string[], key: string, map:
        Map<string, string[]>) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: >-
            (value: string[], key: string, map: Map&lt;string, string[]&gt;)
            =&gt; void
          description: ''
        - id: thisArg
          type: any
          description: ''
    inheritanceDescription: <b>Inherited From</b> Map.forEach
  - name: get(string)
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.get
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(key: string): string[] | undefined'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        description: ''
        type: 'string[] | undefined'
    inheritanceDescription: <b>Inherited From</b> Map.get
  - name: has(string)
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.has
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function has(key: string): boolean'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Map.has
  - name: keys()
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.keys
    package: botbuilder-dialogs-adaptive
    summary: Returns an iterable of keys in the map
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function keys(): IterableIterator<string>'
      return:
        description: ''
        type: IterableIterator&lt;string&gt;
    inheritanceDescription: <b>Inherited From</b> Map.keys
  - name: 'set(string, string[])'
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.set
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function set(key: string, value: string[]): this'
      parameters:
        - id: key
          type: string
          description: ''
        - id: value
          type: 'string[]'
          description: ''
      return:
        description: ''
        type: this
    inheritanceDescription: <b>Inherited From</b> Map.set
  - name: values()
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.values
    package: botbuilder-dialogs-adaptive
    summary: Returns an iterable of values in the map
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function values(): IterableIterator<string[]>'
      return:
        description: ''
        type: 'IterableIterator&lt;string[]&gt;'
    inheritanceDescription: <b>Inherited From</b> Map.values
methods:
  - name: 'defaultPolicy(string[])'
    uid: botbuilder-dialogs-adaptive.LanguagePolicy.defaultPolicy
    package: botbuilder-dialogs-adaptive
    summary: >+
      Walk through all of the cultures and create a dictionary map with most
      specific to least specific.


      **Example**


      Example output "en-us" will generate fallback rule like this:

      "en-us" -> "en" -> ""

      "en" -> ""

      So that when we get a locale such as en-gb, we can try to resolve to
      "en-gb" then "en" then ""

      See commented section for full sample of output of this function.

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function defaultPolicy(defaultLanguages?: string[]): Map<string,
        string[]>
      parameters:
        - id: defaultLanguages
          type: 'string[]'
          description: Default languages to use.
      return:
        description: A Map object with a string array for each key.
        type: 'Map&lt;string, string[]&gt;'
extends: 'Map&lt;string, string[]&gt;'
