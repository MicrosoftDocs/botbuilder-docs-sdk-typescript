### YamlMime:TSType
name: MultiLanguageGenerator
uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator
package: botbuilder-dialogs-adaptive
summary: >-
  LanguageGenerator which uses implements a map of locale->LanguageGenerator for
  the locale

  and has a policy which controls fallback (try en-us -> en -> default).
fullName: MultiLanguageGenerator
remarks: ''
isDeprecated: false
type: class
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: languageGenerators
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.languageGenerators
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the language generators for multiple languages.
    fullName: languageGenerators
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        languageGenerators: Map<string, LanguageGenerator<unknown,
        Record<string, unknown>>>
      return:
        description: ''
        type: >-
          Map&lt;string, <xref
          uid="botbuilder-dialogs-adaptive.LanguageGenerator" />&lt;unknown,
          Record&lt;string, unknown&gt;&gt;&gt;
inheritedProperties:
  - name: languagePolicy
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.languagePolicy
    package: botbuilder-dialogs-adaptive
    summary: Language policy required by language generator.
    fullName: languagePolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'languagePolicy: LanguagePolicy'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.LanguagePolicy" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.languagePolicy](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.languagePolicy)
inheritedMethods:
  - name: configure(Record<string, unknown>)
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function configure(config: Record<string, unknown>):
        MultiLanguageGenerator
      parameters:
        - id: config
          type: Record&lt;string, unknown&gt;
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: <xref uid="botbuilder-dialogs-adaptive.MultiLanguageGenerator" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.configure](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.configure)
  - name: generate(DialogContext, string, Record<string, unknown>)
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.generate
    package: botbuilder-dialogs-adaptive
    summary: Find a language generator that matches the current context locale.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generate(dialogContext: DialogContext, template: string, data:
        Record<string, unknown>): Promise<unknown>
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Context for the current turn of conversation.
        - id: template
          type: string
          description: Template to use.
        - id: data
          type: Record&lt;string, unknown&gt;
          description: Data to bind to.
      return:
        description: A promise representing the asynchronous operation.
        type: Promise&lt;unknown&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.generate](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.generate)
  - name: getConverter("languagePolicy")
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConverter(property: "languagePolicy"): Converter<unknown,
        unknown> | ConverterFactory<unknown, unknown>
      parameters:
        - id: property
          type: '"languagePolicy"'
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: >-
          Converter&lt;unknown, unknown&gt; | ConverterFactory&lt;unknown,
          unknown&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.getConverter](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.getConverter)
methods:
  - name: tryGetGenerator(DialogContext, string)
    uid: botbuilder-dialogs-adaptive.MultiLanguageGenerator.tryGetGenerator
    package: botbuilder-dialogs-adaptive
    summary: Implementation of lookup by locale.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function tryGetGenerator(dialogContext: DialogContext, locale: string):
        { exist: boolean, result: LanguageGenerator<unknown, Record<string,
        unknown>> }
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Context for the current turn of conversation with the user.
        - id: locale
          type: string
          description: Locale to lookup.
      return:
        description: An object with a boolean showing existence and the language generator.
        type: >-
          { exist: boolean, result: LanguageGenerator&lt;unknown,
          Record&lt;string, unknown&gt;&gt; }
extends: <xref uid="botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase" />
