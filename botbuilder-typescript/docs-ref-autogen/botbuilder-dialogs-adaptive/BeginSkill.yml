### YamlMime:TSType
name: BeginSkill
uid: botbuilder-dialogs-adaptive.BeginSkill
package: botbuilder-dialogs-adaptive
summary: ''
fullName: BeginSkill
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: BeginSkill(SkillDialogOptions)
    uid: botbuilder-dialogs-adaptive.BeginSkill.constructor
    package: botbuilder-dialogs-adaptive
    summary: Creates a new `BeginSkillDialog instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BeginSkill(options?: SkillDialogOptions)'
      parameters:
        - id: options
          type: SkillDialogOptions
          description: |
            Optional options used to configure the skill dialog.
properties:
  - name: activity
    uid: botbuilder-dialogs-adaptive.BeginSkill.activity
    package: botbuilder-dialogs-adaptive
    summary: Template for the activity.
    fullName: activity
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activity: TemplateInterface<Partial<Activity>>'
      return:
        type: >-
          <xref uid="botbuilder-dialogs-adaptive.TemplateInterface"
          />&lt;Partial&lt;Activity&gt;&gt;
        description: ''
  - name: activityProcessed
    uid: botbuilder-dialogs-adaptive.BeginSkill.activityProcessed
    package: botbuilder-dialogs-adaptive
    summary: Value indicating whether the new dialog should process the activity.
    fullName: activityProcessed
    remarks: >-
      The default for this will be true, which means the new dialog should not
      look at the activity.

      You can set this to false to dispatch the activity to the new dialog.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activityProcessed: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: botId
    uid: botbuilder-dialogs-adaptive.BeginSkill.botId
    package: botbuilder-dialogs-adaptive
    summary: The Microsoft App ID that will be calling the skill.
    fullName: botId
    remarks: >-
      Defauls to a value of `=settings.MicrosoftAppId` which retrievs the bots
      ID from settings.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'botId: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: connectionName
    uid: botbuilder-dialogs-adaptive.BeginSkill.connectionName
    package: botbuilder-dialogs-adaptive
    summary: Optional. The OAuth Connection Name for the Parent Bot.
    fullName: connectionName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectionName: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: disabled
    uid: botbuilder-dialogs-adaptive.BeginSkill.disabled
    package: botbuilder-dialogs-adaptive
    summary: Optional expression which if is true will disable this action.
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.BeginSkill.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type: DialogTurnResult
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive.BeginSkill.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: resultProperty
    uid: botbuilder-dialogs-adaptive.BeginSkill.resultProperty
    package: botbuilder-dialogs-adaptive
    summary: Optional property path to store the dialog result in.
    fullName: resultProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultProperty?: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: skillAppId
    uid: botbuilder-dialogs-adaptive.BeginSkill.skillAppId
    package: botbuilder-dialogs-adaptive
    summary: The Microsoft App ID for the skill.
    fullName: skillAppId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skillAppId: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: skillEndpoint
    uid: botbuilder-dialogs-adaptive.BeginSkill.skillEndpoint
    package: botbuilder-dialogs-adaptive
    summary: The `/api/messages` endpoint for the skill.
    fullName: skillEndpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skillEndpoint: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: skillHostEndpoint
    uid: botbuilder-dialogs-adaptive.BeginSkill.skillHostEndpoint
    package: botbuilder-dialogs-adaptive
    summary: The callback Url for the skill host.
    fullName: skillHostEndpoint
    remarks: >-
      Defauls to a value of `=settings.SkillHostEndpoint` which retrieves the
      endpoint from settings.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skillHostEndpoint: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.BeginSkill.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, BeginSkillDialogOptions)'
    uid: botbuilder-dialogs-adaptive.BeginSkill.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options?:
        BeginSkillDialogOptions)
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: options
          type: BeginSkillDialogOptions
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs-adaptive.BeginSkill.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.BeginSkill.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: DialogContext
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.BeginSkill.endDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(turnContext: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: turnContext
          type: TurnContext
          description: ''
        - id: instance
          type: DialogInstance
          description: ''
        - id: reason
          type: DialogReason
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.BeginSkill.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.BeginSkill.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.BeginSkill.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(turnContext: TurnContext, instance:
        DialogInstance)
      parameters:
        - id: turnContext
          type: TurnContext
          description: ''
        - id: instance
          type: DialogInstance
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.BeginSkill.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: reason
          type: DialogReason
          description: ''
        - id: result
          type: any
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
        description: ''
extends: SkillDialog
