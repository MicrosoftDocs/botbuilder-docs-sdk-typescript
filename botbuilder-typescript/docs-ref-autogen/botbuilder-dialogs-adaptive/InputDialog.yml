### YamlMime:TSType
name: InputDialog
uid: botbuilder-dialogs-adaptive.InputDialog
package: botbuilder-dialogs-adaptive
summary: Defines input dialogs.
fullName: InputDialog<O>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'InputDialog(string, Partial<Activity> | string)'
    uid: botbuilder-dialogs-adaptive.InputDialog.constructor
    package: botbuilder-dialogs-adaptive
    summary: >-
      Initializes a new instance of the
      [InputDialog](xref:botbuilder-dialogs-adaptive.InputDialog) class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new InputDialog(property?: string, prompt?: Partial<Activity> | string)'
      parameters:
        - id: property
          type: string
          description: Optional. The value expression which the input will be bound to.
        - id: prompt
          type: Partial&lt;Activity&gt; | string
          description: >
            Optional. The [Activity](xref:botframework-schema.Activity) to send
            to the user,

            if a string is specified it will instantiates an
            [ActivityTemplate](xref:botbuilder-dialogs-adaptive.ActivityTemplate).
properties:
  - name: allowInterruptions
    uid: botbuilder-dialogs-adaptive.InputDialog.allowInterruptions
    package: botbuilder-dialogs-adaptive
    summary: Interruption policy.
    fullName: allowInterruptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowInterruptions: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: alwaysPrompt
    uid: botbuilder-dialogs-adaptive.InputDialog.alwaysPrompt
    package: botbuilder-dialogs-adaptive
    summary: >-
      A value indicating whether the input should always prompt the user
      regardless of there being a value or not.
    fullName: alwaysPrompt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'alwaysPrompt: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: defaultValue
    uid: botbuilder-dialogs-adaptive.InputDialog.defaultValue
    package: botbuilder-dialogs-adaptive
    summary: The default value for the input dialog when maxTurnCount is exceeded.
    fullName: defaultValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultValue?: ValueExpression'
      return:
        description: ''
        type: ValueExpression
  - name: defaultValueResponse
    uid: botbuilder-dialogs-adaptive.InputDialog.defaultValueResponse
    package: botbuilder-dialogs-adaptive
    summary: >-
      The activity template to send when maxTurnCount has be reached and the
      default value is used.
    fullName: defaultValueResponse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        defaultValueResponse: TemplateInterface<Partial<Activity>,
        DialogStateManager>
      return:
        description: ''
        type: 'TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;'
  - name: disabled
    uid: botbuilder-dialogs-adaptive.InputDialog.disabled
    package: botbuilder-dialogs-adaptive
    summary: An optional expression which if is true will disable this action.
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: invalidPrompt
    uid: botbuilder-dialogs-adaptive.InputDialog.invalidPrompt
    package: botbuilder-dialogs-adaptive
    summary: >-
      The activity template to send to the user whenever the value provided is
      invalid or not.
    fullName: invalidPrompt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'invalidPrompt: TemplateInterface<Partial<Activity>, DialogStateManager>'
      return:
        description: ''
        type: 'TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;'
  - name: maxTurnCount
    uid: botbuilder-dialogs-adaptive.InputDialog.maxTurnCount
    package: botbuilder-dialogs-adaptive
    summary: >-
      Maximum number of times to ask the user for this value before the dialog
      gives up.
    fullName: maxTurnCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxTurnCount?: IntExpression'
      return:
        description: ''
        type: IntExpression
  - name: OPTIONS_PROPERTY
    uid: botbuilder-dialogs-adaptive.InputDialog.OPTIONS_PROPERTY
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: OPTIONS_PROPERTY
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OPTIONS_PROPERTY: string'
      return:
        description: ''
        type: string
  - name: prompt
    uid: botbuilder-dialogs-adaptive.InputDialog.prompt
    package: botbuilder-dialogs-adaptive
    summary: The activity to send to the user.
    fullName: prompt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'prompt: TemplateInterface<Partial<Activity>, DialogStateManager>'
      return:
        description: ''
        type: 'TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;'
  - name: property
    uid: botbuilder-dialogs-adaptive.InputDialog.property
    package: botbuilder-dialogs-adaptive
    summary: The value expression which the input will be bound to.
    fullName: property
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'property: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: TURN_COUNT_PROPERTY
    uid: botbuilder-dialogs-adaptive.InputDialog.TURN_COUNT_PROPERTY
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: TURN_COUNT_PROPERTY
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static TURN_COUNT_PROPERTY: string'
      return:
        description: ''
        type: string
  - name: unrecognizedPrompt
    uid: botbuilder-dialogs-adaptive.InputDialog.unrecognizedPrompt
    package: botbuilder-dialogs-adaptive
    summary: The activity template for retrying prompt.
    fullName: unrecognizedPrompt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        unrecognizedPrompt: TemplateInterface<Partial<Activity>,
        DialogStateManager>
      return:
        description: ''
        type: 'TemplateInterface&lt;Partial&lt;Activity&gt;, DialogStateManager&gt;'
  - name: validations
    uid: botbuilder-dialogs-adaptive.InputDialog.validations
    package: botbuilder-dialogs-adaptive
    summary: The expressions to run to validate the input.
    fullName: validations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'validations: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: value
    uid: botbuilder-dialogs-adaptive.InputDialog.value
    package: botbuilder-dialogs-adaptive
    summary: A value expression which can be used to initialize the input prompt.
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value: ValueExpression'
      return:
        description: ''
        type: ValueExpression
  - name: VALUE_PROPERTY
    uid: botbuilder-dialogs-adaptive.InputDialog.VALUE_PROPERTY
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: VALUE_PROPERTY
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static VALUE_PROPERTY: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.InputDialog.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        description: ''
        type: DialogTurnResult
    inheritanceDescription: <b>Inherited From</b> Dialog.EndOfTurn
  - name: id
    uid: botbuilder-dialogs-adaptive.InputDialog.id
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Dialog.id
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.InputDialog.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        description: ''
        type: BotTelemetryClient
    inheritanceDescription: <b>Inherited From</b> Dialog.telemetryClient
inheritedMethods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive.InputDialog.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: <b>Inherited From</b> Configurable.configure
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.InputDialog.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(_context: TurnContext, _instance: DialogInstance,
        _reason: DialogReason): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: DialogInstance
          description: Current state information for this dialog.
        - id: _reason
          type: DialogReason
          description: |
            The reason the dialog is ending.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> Dialog.endDialog
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.InputDialog.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getVersion(): string'
      return:
        description: >-
          Unique string which should only change when dialog has changed in a
          way that should restart the dialog.
        type: string
    inheritanceDescription: <b>Inherited From</b> Dialog.getVersion
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.InputDialog.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onDialogEvent(dc: DialogContext, e: DialogEvent):
        Promise<boolean>
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: <b>Inherited From</b> Dialog.onDialogEvent
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.InputDialog.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, reprompts the user for input.'
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(_context: TurnContext, _instance:
        DialogInstance): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: DialogInstance
          description: |
            Current state information for this dialog.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> Dialog.repromptDialog
methods:
  - name: 'beginDialog(DialogContext, any)'
    uid: botbuilder-dialogs-adaptive.InputDialog.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when the [Dialog](xref:botbuilder-dialogs.Dialog) is started and
      pushed onto the dialog stack.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options?: any):
        Promise<DialogTurnResult>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: options
          type: any
          description: >-
            Optional. Initial information to pass to the
            [Dialog](xref:botbuilder-dialogs.Dialog).
      return:
        description: >-
          A [DialogTurnResult](xref:botbuilder-dialogs.DialogTurnResult)
          `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&gt;
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.InputDialog.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when the [Dialog](xref:botbuilder-dialogs.Dialog) is _continued_,
      where it is the active dialog and the user replies with a new activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext): Promise<DialogTurnResult>'
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: >-
          A [DialogTurnResult](xref:botbuilder-dialogs.DialogTurnResult)
          `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&gt;
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.InputDialog.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object): Converter | ConverterFactory'
      parameters:
        - id: property
          type: Object
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: Converter | ConverterFactory
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.InputDialog.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when a child [Dialog](xref:botbuilder-dialogs.Dialog) completes its
      turn, returning control to this dialog.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason,
        _result?: any): Promise<DialogTurnResult>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: _reason
          type: DialogReason
          description: >-
            (xref:botbuilder-dialogs.DialogReason), reason why the dialog
            resumed.
        - id: _result
          type: any
          description: >-
            Optional. Value returned from the
            [Dialog](xref:botbuilder-dialogs.Dialog) that was called.

            The type of the value returned is dependent on the child dialog.
      return:
        description: >-
          A [DialogTurnResult](xref:botbuilder-dialogs.DialogTurnResult)
          `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&gt;
extends: Dialog
