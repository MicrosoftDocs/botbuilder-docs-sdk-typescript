### YamlMime:TSType
name: SwitchCondition
uid: botbuilder-dialogs-adaptive.SwitchCondition
package: botbuilder-dialogs-adaptive
summary: ''
fullName: SwitchCondition<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SwitchCondition()
    uid: botbuilder-dialogs-adaptive.SwitchCondition.constructor
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new SwitchCondition()
  - name: 'SwitchCondition(string, Dialog[], Case[])'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.constructor_1
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SwitchCondition(condition: string, defaultDialogs: Dialog[], cases:
        Case[])
      parameters:
        - id: condition
          type: string
          description: ''
        - id: defaultDialogs
          type: 'Dialog[]'
          description: ''
        - id: cases
          type: '<xref uid="botbuilder-dialogs-adaptive.Case" />[]'
          description: ''
properties:
  - name: cases
    uid: botbuilder-dialogs-adaptive.SwitchCondition.cases
    package: botbuilder-dialogs-adaptive
    summary: Cases.
    fullName: cases
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cases: Case[]'
      return:
        type: '<xref uid="botbuilder-dialogs-adaptive.Case" />[]'
        description: ''
  - name: condition
    uid: botbuilder-dialogs-adaptive.SwitchCondition.condition
    package: botbuilder-dialogs-adaptive
    summary: Condition expression against memory.
    fullName: condition
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'condition: Expression'
      return:
        type: Expression
        description: ''
  - name: default
    uid: botbuilder-dialogs-adaptive.SwitchCondition.default
    package: botbuilder-dialogs-adaptive
    summary: Default case.
    fullName: default
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'default: Dialog[]'
      return:
        type: 'Dialog[]'
        description: ''
  - name: disabled
    uid: botbuilder-dialogs-adaptive.SwitchCondition.disabled
    package: botbuilder-dialogs-adaptive
    summary: An optional expression which if is true will disable this action.
    fullName: disabled
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.SwitchCondition.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type: DialogTurnResult
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive.SwitchCondition.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.SwitchCondition.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: options
          type: O
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs-adaptive.SwitchCondition.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.SwitchCondition.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, continues the dialog.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: DialogContext
          description: |
            The context for the current dialog turn.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type: DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.SwitchCondition.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDependencies()
      return:
        type: 'Dialog[]'
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.SwitchCondition.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, reprompts the user for input.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.SwitchCondition.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, resumes the dialog after the dialog
      above it on the stack completes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: DialogContext
          description: The context for the current dialog turn.
        - id: reason
          type: DialogReason
          description: |-
            The reason the dialog is resuming. This will typically be
                 [DialogReason.endCalled](xref:botbuilder-dialogs.DialogReason.endCalled)
        - id: result
          type: any
          description: |
            Optional. The return value, if any, from the dialog that ended.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
extends: Dialog&lt;O&gt;
