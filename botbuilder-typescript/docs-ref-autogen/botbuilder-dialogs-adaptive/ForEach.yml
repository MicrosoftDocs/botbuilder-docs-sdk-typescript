### YamlMime:TSType
name: ForEach
uid: botbuilder-dialogs-adaptive.ForEach
package: botbuilder-dialogs-adaptive
summary: >-
  Executes a set of actions once for each item in an in-memory list or
  collection.
fullName: ForEach<O>
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ForEach<O>(string, Dialog<{}>[])
    uid: botbuilder-dialogs-adaptive.ForEach.constructor_1
    package: botbuilder-dialogs-adaptive
    summary: >-
      Initializes a new instance of the
      [Foreach](xref:botbuilder-dialogs-adaptive.Foreach) class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ForEach(itemsProperty: string, actions: Dialog<{}>[])'
      parameters:
        - id: itemsProperty
          type: string
          description: Property path expression to the collection of items.
        - id: actions
          type: Dialog&lt;{}&gt;[]
          description: The actions to execute.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.ForEach.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: disabled
    uid: botbuilder-dialogs-adaptive.ForEach.disabled
    package: botbuilder-dialogs-adaptive
    summary: An optional expression which if is true will disable this action.
    fullName: disabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: id
    uid: botbuilder-dialogs-adaptive.ForEach.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: string id
      return:
        description: The Id for the dialog.
        type: string
  - name: index
    uid: botbuilder-dialogs-adaptive.ForEach.index
    package: botbuilder-dialogs-adaptive
    summary: Property path expression to the item index.
    fullName: index
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'index: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: itemsProperty
    uid: botbuilder-dialogs-adaptive.ForEach.itemsProperty
    package: botbuilder-dialogs-adaptive
    summary: Property path expression to the collection of items.
    fullName: itemsProperty
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemsProperty: StringExpression'
      return:
        description: ''
        type: StringExpression
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.ForEach.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Gets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        description: >-
          The [BotTelemetryClient](xref:botbuilder.BotTelemetryClient) to use
          for logging.
        type: BotTelemetryClient
  - name: value
    uid: botbuilder-dialogs-adaptive.ForEach.value
    package: botbuilder-dialogs-adaptive
    summary: Property path expression to the item value.
    fullName: value
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'value: StringExpression'
      return:
        description: ''
        type: StringExpression
inheritedProperties:
  - name: actions
    uid: botbuilder-dialogs-adaptive.ForEach.actions
    package: botbuilder-dialogs-adaptive
    summary: The actions to execute.
    fullName: actions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'actions: Dialog<{}>[]'
      return:
        description: ''
        type: Dialog&lt;{}&gt;[]
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.actions](xref:botbuilder-dialogs-adaptive.ActionScope.actions)
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.ForEach.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult<any>'
      return:
        description: ''
        type: DialogTurnResult&lt;any&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.EndOfTurn](xref:botbuilder-dialogs-adaptive.ActionScope.EndOfTurn)
inheritedMethods:
  - name: configure(Record<string, unknown>)
    uid: botbuilder-dialogs-adaptive.ForEach.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): ForEach<O>'
      parameters:
        - id: config
          type: Record&lt;string, unknown&gt;
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: <xref uid="botbuilder-dialogs-adaptive.ForEach" />&lt;O&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.configure](xref:botbuilder-dialogs-adaptive.ActionScope.configure)
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.ForEach.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when the [Dialog](xref:botbuilder-dialogs.Dialog) is _continued_,
      where it is the active dialog and the

      user replies with a new activity.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function continueDialog(dc: DialogContext):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.continueDialog](xref:botbuilder-dialogs-adaptive.ActionScope.continueDialog)
  - name: endDialog(TurnContext, DialogInstance<any>, DialogReason)
    uid: botbuilder-dialogs-adaptive.ForEach.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(_context: TurnContext, _instance:
        DialogInstance<any>, _reason: DialogReason): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: DialogInstance&lt;any&gt;
          description: Current state information for this dialog.
        - id: _reason
          type: DialogReason
          description: The reason the dialog is ending.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.endDialog](xref:botbuilder-dialogs-adaptive.ActionScope.endDialog)
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.ForEach.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets a unique `string` which represents the version of this dialog. If the
      version

      changes between turns the dialog system will emit a DialogChanged event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getVersion(): string'
      return:
        description: |-
          Unique `string` which should only change when dialog has changed in a
          way that should restart the dialog.
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.getVersion](xref:botbuilder-dialogs-adaptive.ActionScope.getVersion)
  - name: onDialogEvent(DialogContext, DialogEvent)
    uid: botbuilder-dialogs-adaptive.ForEach.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onDialogEvent(dc: DialogContext, e: DialogEvent):
        Promise<boolean>
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.onDialogEvent](xref:botbuilder-dialogs-adaptive.ActionScope.onDialogEvent)
  - name: repromptDialog(TurnContext, DialogInstance<any>)
    uid: botbuilder-dialogs-adaptive.ForEach.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: When overridden in a derived class, reprompts the user for input.
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(_context: TurnContext, _instance:
        DialogInstance<any>): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: DialogInstance&lt;any&gt;
          description: Current state information for this dialog.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.repromptDialog](xref:botbuilder-dialogs-adaptive.ActionScope.repromptDialog)
  - name: resumeDialog(DialogContext, DialogReason, any)
    uid: botbuilder-dialogs-adaptive.ForEach.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when a child [Dialog](xref:botbuilder-dialogs.Dialog) completed its
      turn, returning control to this dialog.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason, result?:
        any): Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: _reason
          type: DialogReason
          description: >-
            [DialogReason](xref:botbuilder-dialogs.DialogReason), reason why the
            dialog resumed.
        - id: result
          type: any
          description: |-
            Optional. Value returned from the dialog that was called. The type
            of the value returned is dependent on the child dialog.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ActionScope.resumeDialog](xref:botbuilder-dialogs-adaptive.ActionScope.resumeDialog)
methods:
  - name: beginDialog(DialogContext, O)
    uid: botbuilder-dialogs-adaptive.ForEach.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Starts a new [Dialog](xref:botbuilder-dialogs.Dialog) and pushes it onto
      the dialog stack.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, _options?: O):
        Promise<DialogTurnResult<any>>
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: _options
          type: O
          description: Optional. Initial information to pass to the dialog.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;DialogTurnResult&lt;any&gt;&gt;
  - name: getConverter(keyof ForEachConfiguration)
    uid: botbuilder-dialogs-adaptive.ForEach.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConverter(property: keyof ForEachConfiguration):
        Converter<unknown, unknown> | ConverterFactory<unknown, unknown>
      parameters:
        - id: property
          type: keyof ForEachConfiguration
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: >-
          Converter&lt;unknown, unknown&gt; | ConverterFactory&lt;unknown,
          unknown&gt;
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.ForEach.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets the child [Dialog](xref:botbuilder-dialogs.Dialog) dependencies so
      they can be added to the containers
      [Dialog](xref:botbuilder-dialogs.Dialog) set.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getDependencies(): Dialog<{}>[]'
      return:
        description: The child [Dialog](xref:botbuilder-dialogs.Dialog) dependencies.
        type: Dialog&lt;{}&gt;[]
extends: <xref uid="botbuilder-dialogs-adaptive.ActionScope" />&lt;O&gt;
