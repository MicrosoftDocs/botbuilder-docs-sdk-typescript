### YamlMime:TSType
name: HttpRequest
uid: botbuilder-dialogs-adaptive.HttpRequest
package: botbuilder-dialogs-adaptive
summary: ''
fullName: HttpRequest<O>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: HttpRequest()
    uid: botbuilder-dialogs-adaptive.HttpRequest.constructor
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new HttpRequest()
  - name: 'HttpRequest(HttpMethod, string, [key: string]: string, any)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.constructor_1
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new HttpRequest(method: HttpMethod, url: string, headers: [key: string]:
        string, body: any)
      parameters:
        - id: method
          type: <xref uid="botbuilder-dialogs-adaptive.HttpMethod" />
          description: ''
        - id: url
          type: string
          description: ''
        - id: headers
          type: '[key: string]\: string'
          description: ''
        - id: body
          type: any
          description: ''
properties:
  - name: body
    uid: botbuilder-dialogs-adaptive.HttpRequest.body
    package: botbuilder-dialogs-adaptive
    summary: Http Body
    fullName: body
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'body?: ValueExpression'
      return:
        type: ValueExpression
        description: ''
  - name: contentType
    uid: botbuilder-dialogs-adaptive.HttpRequest.contentType
    package: botbuilder-dialogs-adaptive
    summary: Content type of request body
    fullName: contentType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentType?: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: disabled
    uid: botbuilder-dialogs-adaptive.HttpRequest.disabled
    package: botbuilder-dialogs-adaptive
    summary: An optional expression which if is true will disable this action.
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.HttpRequest.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type: DialogTurnResult
        description: ''
  - name: headers
    uid: botbuilder-dialogs-adaptive.HttpRequest.headers
    package: botbuilder-dialogs-adaptive
    summary: Http Headers
    fullName: headers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headers?: [key: string]: StringExpression'
      return:
        type: '[key: string]\: StringExpression'
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive.HttpRequest.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: method
    uid: botbuilder-dialogs-adaptive.HttpRequest.method
    package: botbuilder-dialogs-adaptive
    summary: Http Method
    fullName: method
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'method?: HttpMethod'
      return:
        type: <xref uid="botbuilder-dialogs-adaptive.HttpMethod" />
        description: ''
  - name: responseType
    uid: botbuilder-dialogs-adaptive.HttpRequest.responseType
    package: botbuilder-dialogs-adaptive
    summary: The response type of the response
    fullName: responseType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'responseType?: EnumExpression<ResponsesTypes>'
      return:
        type: >-
          EnumExpression&lt;<xref
          uid="botbuilder-dialogs-adaptive.ResponsesTypes" />&gt;
        description: ''
  - name: resultProperty
    uid: botbuilder-dialogs-adaptive.HttpRequest.resultProperty
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the property expression to store the HTTP response in.
    fullName: resultProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultProperty?: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.HttpRequest.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
  - name: url
    uid: botbuilder-dialogs-adaptive.HttpRequest.url
    package: botbuilder-dialogs-adaptive
    summary: Http Url
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url?: StringExpression'
      return:
        type: StringExpression
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: options
          type: O
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs-adaptive.HttpRequest.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.HttpRequest.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, continues the dialog.'
    remarks: >-
      Derived dialogs that support multiple-turn conversations should override
      this method.

      By default, this method signals that the dialog is complete and returns.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when it continues

      the dialog.


      To signal to the dialog context that this dialog has completed, await

      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
      before exiting this method.


      **See also**

      -
      [DialogContext.continueDialog](xref:botbuilder-dialogs.DialogContext.continueDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: DialogContext
          description: |
            The context for the current dialog turn.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type: DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.HttpRequest.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, reprompts the user for input.'
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.HttpRequest.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, resumes the dialog after the dialog
      above it on the stack completes.
    remarks: >-
      Derived dialogs that support multiple-turn conversations should override
      this method.

      By default, this method signals that the dialog is complete and returns.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when it resumes

      the dialog. If the previous dialog on the stack returned a value, that
      value is in the `result`

      parameter.


      To start a _child_ dialog, use
      [DialogContext.beginDialog](xref:botbuilder-dialogs.DialogContext.beginDialog)

      or [DialogContext.prompt](xref:botbuilder-dialogs.DialogContext.prompt);
      however, this dialog will not

      necessarily be the one that started the child dialog.

      To signal to the dialog context that this dialog has completed, await

      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
      before exiting this method.


      **See also**

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: DialogContext
          description: The context for the current dialog turn.
        - id: reason
          type: DialogReason
          description: |-
            The reason the dialog is resuming. This will typically be
                 [DialogReason.endCalled](xref:botbuilder-dialogs.DialogReason.endCalled)
        - id: result
          type: any
          description: |
            Optional. The return value, if any, from the dialog that ended.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
extends: Dialog&lt;O&gt;
