### YamlMime:TSType
name: ResourceMultiLanguageGenerator
uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator
package: botbuilder-dialogs-adaptive
summary: >-
  Uses resourceExplorer to mount root lg and all language variants as a multi
  language generator.
fullName: 'ResourceMultiLanguageGenerator<T, D>'
remarks: >-
  Given file name like "foo.lg" this will generate a map of foo.{LOCALE}.lg
  files.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ResourceMultiLanguageGenerator(string)
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.constructor
    package: botbuilder-dialogs-adaptive
    summary: Initializes a new instance of the ResourceMultiLanguageGenerator class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ResourceMultiLanguageGenerator(resourceId?: string)'
      parameters:
        - id: resourceId
          type: string
          description: |
            Resource id of LG file.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: resourceId
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.resourceId
    package: botbuilder-dialogs-adaptive
    summary: Resource id of LG file.
    fullName: resourceId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resourceId: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: languagePolicy
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.languagePolicy
    package: botbuilder-dialogs-adaptive
    summary: Language policy required by language generator.
    fullName: languagePolicy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'languagePolicy: LanguagePolicy'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs-adaptive.LanguagePolicy" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.languagePolicy](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.languagePolicy)
inheritedMethods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: <b>Inherited From</b> Configurable.configure
  - name: 'generate(DialogContext, string, D)'
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.generate
    package: botbuilder-dialogs-adaptive
    summary: Find a language generator that matches the current context locale.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generate(dialogContext: DialogContext, template: string, data:
        D): Promise<T>
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Context for the current turn of conversation.
        - id: template
          type: string
          description: Template to use.
        - id: data
          type: D
          description: Data to bind to.
      return:
        description: A promise representing the asynchronous operation.
        type: Promise&lt;T&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.generate](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.generate)
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object): Converter | ConverterFactory'
      parameters:
        - id: property
          type: Object
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: Converter | ConverterFactory
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiLanguageGeneratorBase.getConverter](xref:botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.getConverter)
methods:
  - name: 'tryGetGenerator(DialogContext, string)'
    uid: botbuilder-dialogs-adaptive.ResourceMultiLanguageGenerator.tryGetGenerator
    package: botbuilder-dialogs-adaptive
    summary: Implementation of lookup by locale.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function tryGetGenerator(dialogContext: DialogContext, locale: string):
        { exist: boolean, result: LanguageGenerator<T, D> }
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Context for the current turn of conversation.
        - id: locale
          type: string
          description: Locale to lookup.
      return:
        description: An object with a boolean showing existence and the language generator.
        type: '{ exist: boolean, result: LanguageGenerator&lt;T, D&gt; }'
extends: >-
  <xref uid="botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase" />&lt;T,
  D&gt;
