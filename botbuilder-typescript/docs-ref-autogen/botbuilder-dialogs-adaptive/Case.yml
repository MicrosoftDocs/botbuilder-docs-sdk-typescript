### YamlMime:TSType
name: Case
uid: botbuilder-dialogs-adaptive.Case
package: botbuilder-dialogs-adaptive
summary: ''
fullName: Case<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Case(string, Dialog[])'
    uid: botbuilder-dialogs-adaptive.Case.constructor
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Case(value?: string, actions?: Dialog[])'
      parameters:
        - id: value
          type: string
          description: ''
        - id: actions
          type: 'Dialog[]'
          description: ''
properties:
  - name: actions
    uid: botbuilder-dialogs-adaptive.Case.actions
    package: botbuilder-dialogs-adaptive
    summary: The actions to execute.
    fullName: actions
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions: Dialog[]'
      return:
        type: 'Dialog[]'
        description: ''
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.Case.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type: DialogTurnResult
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive.Case.id
    package: botbuilder-dialogs-adaptive
    summary: Unique ID of the dialog.
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.Case.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
  - name: value
    uid: botbuilder-dialogs-adaptive.Case.value
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets value expression to be compared against condition.
    fullName: value
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value: string'
      return:
        type: string
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs-adaptive.Case.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: options
          type: O
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs-adaptive.Case.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.Case.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: DialogContext
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
  - name: createValueExpression()
    uid: botbuilder-dialogs-adaptive.Case.createValueExpression
    package: botbuilder-dialogs-adaptive
    summary: >-
      Creates an expression that returns the value in its primitive type. Still

      assumes that switch case values are compile time constants and not
      expressions

      that can be evaluated against state.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function createValueExpression()
      return:
        type: Expression
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.Case.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type: DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.Case.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDependencies()
      return:
        type: 'Dialog[]'
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.Case.getVersion
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.Case.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.Case.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, reprompts the user for input.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.Case.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: DialogContext
          description: ''
        - id: _reason
          type: DialogReason
          description: ''
        - id: result
          type: any
          description: ''
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs-adaptive.ActionScope" />
