### YamlMime:TSType
name: OnCondition
uid: botbuilder-dialogs-adaptive.OnCondition
package: botbuilder-dialogs-adaptive
summary: Actions triggered when condition is true.
fullName: OnCondition
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'OnCondition(string, Dialog[])'
    uid: botbuilder-dialogs-adaptive.OnCondition.constructor
    package: botbuilder-dialogs-adaptive
    summary: Create a new `OnCondition` instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new OnCondition(condition?: string, actions?: Dialog[])'
      parameters:
        - id: condition
          type: string
          description: >-
            (Optional) The condition which needs to be met for the actions to be
            executed.
        - id: actions
          type: 'Dialog[]'
          description: >
            (Optional) The actions to add to the plan when the rule constraints
            are met.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.OnCondition.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: actions
    uid: botbuilder-dialogs-adaptive.OnCondition.actions
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets or sets the actions to add to the plan when the rule constraints are
      met.
    fullName: actions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions: Dialog[]'
      return:
        description: ''
        type: 'Dialog[]'
  - name: condition
    uid: botbuilder-dialogs-adaptive.OnCondition.condition
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets or sets the condition which needs to be met for the actions to be
      executed (OPTIONAL).
    fullName: condition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'condition: BoolExpression'
      return:
        description: ''
        type: BoolExpression
  - name: id
    uid: botbuilder-dialogs-adaptive.OnCondition.id
    package: botbuilder-dialogs-adaptive
    summary: Id for condition.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: priority
    uid: botbuilder-dialogs-adaptive.OnCondition.priority
    package: botbuilder-dialogs-adaptive
    summary: >-
      Get or sets the rule priority expression where 0 is the highest and less
      than 0 is ignored.
    fullName: priority
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'priority: NumberExpression'
      return:
        description: ''
        type: NumberExpression
  - name: runOnce
    uid: botbuilder-dialogs-adaptive.OnCondition.runOnce
    package: botbuilder-dialogs-adaptive
    summary: >-
      A value indicating whether rule should only run once per unique set of
      memory paths.
    fullName: runOnce
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'runOnce: boolean'
      return:
        description: ''
        type: boolean
inheritedMethods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive.OnCondition.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: <b>Inherited From</b> Configurable.configure
methods:
  - name: addExternalCondition(string)
    uid: botbuilder-dialogs-adaptive.OnCondition.addExternalCondition
    package: botbuilder-dialogs-adaptive
    summary: Add external condition to the OnCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addExternalCondition(condition: string)'
      parameters:
        - id: condition
          type: string
          description: >
            External constraint to add, it will be AND'ed to all other
            constraints.
  - name: currentPriority(ActionContext)
    uid: botbuilder-dialogs-adaptive.OnCondition.currentPriority
    package: botbuilder-dialogs-adaptive
    summary: Compute the current value of the priority expression and return it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function currentPriority(actionContext: ActionContext): number'
      parameters:
        - id: actionContext
          type: <xref uid="botbuilder-dialogs-adaptive.ActionContext" />
          description: Context to use for evaluation.
      return:
        description: Computed priority.
        type: number
  - name: execute(ActionContext)
    uid: botbuilder-dialogs-adaptive.OnCondition.execute
    package: botbuilder-dialogs-adaptive
    summary: Method called to execute the condition's actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function execute(actionContext: ActionContext):
        Promise<ActionChangeList[]>
      parameters:
        - id: actionContext
          type: <xref uid="botbuilder-dialogs-adaptive.ActionContext" />
          description: Context.
      return:
        description: A promise with plan change list.
        type: >-
          Promise&lt;<xref uid="botbuilder-dialogs-adaptive.ActionChangeList"
          />[]&gt;
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.OnCondition.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object): Converter | ConverterFactory'
      parameters:
        - id: property
          type: Object
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: Converter | ConverterFactory
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.OnCondition.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: >-
      Get child dialog dependencies so they can be added to the containers
      dialogset.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDependencies(): Dialog[]'
      return:
        description: 'A list of [Dialog](xref:botbuilder-dialogs.Dialog).'
        type: 'Dialog[]'
  - name: getExpression()
    uid: botbuilder-dialogs-adaptive.OnCondition.getExpression
    package: botbuilder-dialogs-adaptive
    summary: Get the cached expression for this condition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getExpression(): Expression'
      return:
        description: Cached expression used to evaluate this condition.
        type: Expression
extends: Configurable
