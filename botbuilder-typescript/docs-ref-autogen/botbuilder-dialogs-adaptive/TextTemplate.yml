### YamlMime:TSType
name: TextTemplate
uid: botbuilder-dialogs-adaptive.TextTemplate
package: botbuilder-dialogs-adaptive
summary: |-
  Defines a text template where the template expression is local aka "inline"
  and processed through registered language generator.
fullName: TextTemplate<D>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: TextTemplate(string)
    uid: botbuilder-dialogs-adaptive.TextTemplate.constructor
    package: botbuilder-dialogs-adaptive
    summary: Initialize a new instance of TextTemplate class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new TextTemplate(template?: string)'
      parameters:
        - id: template
          type: string
          description: |
            The template to evaluate to create text.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.TextTemplate.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        description: ''
        type: string
  - name: template
    uid: botbuilder-dialogs-adaptive.TextTemplate.template
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the template to evaluate to create the text.
    fullName: template
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'template: string'
      return:
        description: ''
        type: string
  - name: toString
    uid: botbuilder-dialogs-adaptive.TextTemplate.toString
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: toString
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toString: () => string'
      return:
        description: ''
        type: () =&gt; string
methods:
  - name: 'bind(DialogContext, D)'
    uid: botbuilder-dialogs-adaptive.TextTemplate.bind
    package: botbuilder-dialogs-adaptive
    summary: Bind data to template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function bind(dialogContext: DialogContext, data: D): Promise<string>'
      parameters:
        - id: dialogContext
          type: DialogContext
          description: DialogContext.
        - id: data
          type: D
          description: Data to bind to.
      return:
        description: A promise representing the asynchronous operation.
        type: Promise&lt;string&gt;
  - name: configure(TextTemplateConfiguration)
    uid: botbuilder-dialogs-adaptive.TextTemplate.configure
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: TextTemplateConfiguration): this'
      parameters:
        - id: config
          type: <xref uid="botbuilder-dialogs-adaptive.TextTemplateConfiguration" />
          description: The configuration.
      return:
        description: A object with the given configuration.
        type: this
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.TextTemplate.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(_property: Object): Converter | ConverterFactory'
      parameters:
        - id: _property
          type: Object
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: Converter | ConverterFactory
