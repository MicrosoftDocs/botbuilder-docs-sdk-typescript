### YamlMime:TSType
name: DialogSet
uid: botbuilder-dialogs.DialogSet
package: botbuilder-dialogs
summary: A related set of dialogs that can all call each other.
fullName: DialogSet
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DialogSet(StatePropertyAccessor<DialogState>)
    uid: botbuilder-dialogs.DialogSet.constructor
    package: botbuilder-dialogs
    summary: Creates a new DialogSet instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DialogSet(dialogState?: StatePropertyAccessor<DialogState>)'
      parameters:
        - id: dialogState
          type: >-
            StatePropertyAccessor&lt;<xref uid="botbuilder-dialogs.DialogState"
            />&gt;
          description: |
            (Optional) state property used to persist the sets dialog stack.
properties:
  - name: telemetryClient
    uid: botbuilder-dialogs.DialogSet.telemetryClient
    package: botbuilder-dialogs
    summary: >-
      Set the telemetry client for this dialog set and apply it to all current
      dialogs.

      Set the telemetry client for this dialog set and apply it to all current
      dialogs.

      Future dialogs added to the set will also inherit this client.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: add<T>(T)
    uid: botbuilder-dialogs.DialogSet.add
    package: botbuilder-dialogs
    summary: Adds a new dialog or prompt to the set.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add<T>(dialog: T)'
      parameters:
        - id: dialog
          type: T
          description: >
            The dialog or prompt to add.

            If a telemetryClient is present on the dialog set, it will be added
            to each dialog.
      return:
        type: this
        description: ''
  - name: createContext(TurnContext)
    uid: botbuilder-dialogs.DialogSet.createContext
    package: botbuilder-dialogs
    summary: >-
      Creates a dialog context which can be used to work with the dialogs in the
      set.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createContext(context: TurnContext)'
      parameters:
        - id: context
          type: TurnContext
          description: |
            Context for the current turn of conversation with the user.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogContext" />&gt;
        description: ''
  - name: find(string)
    uid: botbuilder-dialogs.DialogSet.find
    package: botbuilder-dialogs
    summary: 'Finds a dialog that was previously added to the set using [add()](#add).'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function find(dialogId: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            ID of the dialog or prompt to lookup.
      return:
        type: <xref uid="botbuilder-dialogs.Dialog" /> | undefined
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.DialogSet.getVersion
    package: botbuilder-dialogs
    summary: Returns a 32-bit hash of the all the `Dialog.version` values in the set.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
