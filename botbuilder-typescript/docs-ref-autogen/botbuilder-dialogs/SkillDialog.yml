### YamlMime:TSType
name: SkillDialog
uid: botbuilder-dialogs.SkillDialog
package: botbuilder-dialogs
summary: ''
fullName: SkillDialog
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'SkillDialog(SkillDialogOptions, string)'
    uid: botbuilder-dialogs.SkillDialog.constructor
    package: botbuilder-dialogs
    summary: A sample dialog that can wrap remote calls to a skill.
    remarks: >-
      The options parameter in `beginDialog()` must be a `SkillDialogArgs`
      object with the initial parameters

      for the dialog.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SkillDialog(dialogOptions: SkillDialogOptions, dialogId?: string)'
      parameters:
        - id: dialogOptions
          type: <xref uid="botbuilder-dialogs.SkillDialogOptions" />
          description: ''
        - id: dialogId
          type: string
          description: |+

properties:
  - name: id
    uid: botbuilder-dialogs.SkillDialog.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.SkillDialog.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, BeginSkillDialogOptions)'
    uid: botbuilder-dialogs.SkillDialog.beginDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options:
        BeginSkillDialogOptions)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: options
          type: <xref uid="botbuilder-dialogs.BeginSkillDialogOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.SkillDialog.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.SkillDialog.continueDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.SkillDialog.endDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: ''
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.SkillDialog.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.SkillDialog.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.SkillDialog.repromptDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.SkillDialog.resumeDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: ''
        - id: result
          type: any
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
extends: >-
  <xref uid="botbuilder-dialogs.Dialog" />&lt;Partial&lt;<xref
  uid="botbuilder-dialogs.BeginSkillDialogOptions" />&gt;&gt;
