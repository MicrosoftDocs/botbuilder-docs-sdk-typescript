### YamlMime:TSType
name: OAuthPrompt
uid: botbuilder-dialogs.OAuthPrompt
package: botbuilder-dialogs
summary: >-
  Creates a new prompt that asks the user to sign in using the Bot Frameworks
  Single Sign On (SSO)

  service.
fullName: OAuthPrompt<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'OAuthPrompt(string, OAuthPromptSettings, PromptValidator<TokenResponse>)'
    uid: botbuilder-dialogs.OAuthPrompt.constructor
    package: botbuilder-dialogs
    summary: Creates a new OAuthPrompt instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new OAuthPrompt(dialogId: string, settings: OAuthPromptSettings,
        validator?: PromptValidator<TokenResponse>)
      parameters:
        - id: dialogId
          type: string
          description: >-
            Unique ID of the dialog within its parent `DialogSet` or
            `ComponentDialog`.
        - id: settings
          type: <xref uid="botbuilder-dialogs.OAuthPromptSettings" />
          description: Settings used to configure the prompt.
        - id: validator
          type: >-
            <xref uid="botbuilder-dialogs.PromptValidator"
            />&lt;TokenResponse&gt;
          description: >
            (Optional) validator that will be called each time the user responds
            to the prompt.
properties:
  - name: id
    uid: botbuilder-dialogs.OAuthPrompt.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.OAuthPrompt.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, PromptOptions)'
    uid: botbuilder-dialogs.OAuthPrompt.beginDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: PromptOptions)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: options
          type: <xref uid="botbuilder-dialogs.PromptOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.OAuthPrompt.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.OAuthPrompt.continueDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.OAuthPrompt.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getUserToken(TurnContext, string)'
    uid: botbuilder-dialogs.OAuthPrompt.getUserToken
    package: botbuilder-dialogs
    summary: Attempts to retrieve the stored token for the current user.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getUserToken(context: TurnContext, code?: string)'
      parameters:
        - id: context
          type: TurnContext
          description: Context reference the user that's being looked up.
        - id: code
          type: string
          description: |
            (Optional) login code received from the user.
      return:
        type: Promise&lt;TokenResponse | undefined&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.OAuthPrompt.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.OAuthPrompt.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.OAuthPrompt.repromptDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, reprompts the user for input.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.OAuthPrompt.resumeDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, resumes the dialog after the dialog
      above it on the stack completes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The context for the current dialog turn.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |-
            The reason the dialog is resuming. This will typically be
                 [DialogReason.endCalled](xref:botbuilder-dialogs.DialogReason.endCalled)
        - id: result
          type: any
          description: |
            Optional. The return value, if any, from the dialog that ended.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: signOutUser(TurnContext)
    uid: botbuilder-dialogs.OAuthPrompt.signOutUser
    package: botbuilder-dialogs
    summary: Signs the user out of the service.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function signOutUser(context: TurnContext)'
      parameters:
        - id: context
          type: TurnContext
          description: |
            Context referencing the user that's being signed out.
      return:
        type: Promise&lt;void&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs.Dialog" />
