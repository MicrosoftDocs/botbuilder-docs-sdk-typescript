### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.Dialog
    name: Dialog
    fullName: Dialog<O>
    children:
      - botbuilder-dialogs.Dialog.beginDialog
      - botbuilder-dialogs.Dialog.continueDialog
      - botbuilder-dialogs.Dialog.constructor
      - botbuilder-dialogs.Dialog.endDialog
      - botbuilder-dialogs.Dialog.id
      - botbuilder-dialogs.Dialog.repromptDialog
      - botbuilder-dialogs.Dialog.resumeDialog
    langs:
      - typeScript
    type: class
    summary: Base class for all dialogs.
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.beginDialog
    name: beginDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Method called when a new dialog has been pushed onto the stack and is
      being activated.
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: The dialog context for the current turn of conversation.
        - id: options
          type:
            - O
          description: >
            (Optional) arguments that were passed to the dialog during `begin()`
            call that started the instance.
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.continueDialog
    name: continueDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      (Optional) method called when an instance of the dialog is the active
      dialog and the user

      replies with a new activity. The dialog will generally continue to receive
      the users replies

      until it calls `DialogContext.endDialog()`, `DialogContext.beginDialog()`,
      or `DialogContext.prompt()`.

      If this method is NOT implemented then the dialog will be automatically
      ended when the user

      replies.
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: |
            The dialog context for the current turn of conversation.
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.constructor
    name: Dialog
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Dialog(dialogId: string)'
      parameters:
        - id: dialogId
          type:
            - string
          description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.endDialog
    name: endDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: (Optional) method called when the dialog is ending.
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: Context for the current turn of conversation.
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: The instance of the current dialog.
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type:
          - Promise<void>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: 'public id: string'
      return:
        type:
          - string
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.repromptDialog
    name: repromptDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      (Optional) method called when the dialog has been requested to re-prompt
      the user for input.
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: Context for the current turn of conversation.
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: |
            The instance of the current dialog.
      return:
        type:
          - Promise<void>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.Dialog.resumeDialog
    name: resumeDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      (Optional) method called when an instance of the dialog is being returned
      to from another

      dialog that was started by the current instance using
      `DialogContext.beginDialog()` or

      `DialogContext.prompt()`.

      If this method is NOT implemented then the dialog will be automatically
      ended with a call

      to `DialogContext.endDialog()`. Any result passed from the called dialog
      will be passed to the

      active dialogs parent.
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: The dialog context for the current turn of conversation.
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: >-
            The reason the dialog is being resumed. This will typically be a
            value of `DialogReason.endCalled`.
        - id: result
          type:
            - any
          description: >
            (Optional) value returned from the dialog that was called. The type
            of the value returned is dependant on the dialog that was called.
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
references:
  - uid: botbuilder-dialogs.DialogContext
    name: DialogContext
    spec.typeScript:
      - name: DialogContext
        fullName: DialogContext
        uid: botbuilder-dialogs.DialogContext
  - uid: Promise<botbuilder-dialogs.DialogTurnResult>
    name: DialogTurnResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs.DialogTurnResult
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.DialogInstance
    name: DialogInstance
    spec.typeScript:
      - name: DialogInstance
        fullName: DialogInstance
        uid: botbuilder-dialogs.DialogInstance
  - uid: botbuilder-dialogs.DialogReason
    name: DialogReason
    spec.typeScript:
      - name: DialogReason
        fullName: DialogReason
        uid: botbuilder-dialogs.DialogReason
