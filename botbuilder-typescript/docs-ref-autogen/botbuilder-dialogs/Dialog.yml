### YamlMime:TSType
name: Dialog
uid: botbuilder-dialogs.Dialog
package: botbuilder-dialogs
summary: Defines the core behavior for all dialogs.
fullName: Dialog<O>
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Dialog(string)
    uid: botbuilder-dialogs.Dialog.constructor
    package: botbuilder-dialogs
    summary: >-
      Creates a new instance of the [Dialog](xref:botbuilder-dialogs.Dialog)
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Dialog(dialogId?: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            Optional. unique ID of the dialog.
properties:
  - name: id
    uid: botbuilder-dialogs.Dialog.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.Dialog.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs.Dialog.beginDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, starts the dialog.'
    remarks: >-
      Derived dialogs must override this method.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when it creates

      a new [DialogInstance](xref:botbuilder-dialogs.DialogInstance) for this
      dialog, pushes it

      onto the dialog stack, and starts the dialog.


      A dialog that represents a single-turn conversation should await

      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
      before exiting this method.


      **See also**

      -
      [DialogContext.beginDialog](xref:botbuilder-dialogs.DialogContext.beginDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The context for the current dialog turn.
        - id: options
          type: O
          description: |
            Optional. Arguments to use when the dialog starts.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.Dialog.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.Dialog.continueDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, continues the dialog.'
    remarks: >-
      Derived dialogs that support multiple-turn conversations should override
      this method.

      By default, this method signals that the dialog is complete and returns.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when it continues

      the dialog.


      To signal to the dialog context that this dialog has completed, await

      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
      before exiting this method.


      **See also**

      -
      [DialogContext.continueDialog](xref:botbuilder-dialogs.DialogContext.continueDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: |
            The context for the current dialog turn.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.Dialog.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.Dialog.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.Dialog.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.Dialog.repromptDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, reprompts the user for input.'
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.Dialog.resumeDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, resumes the dialog after the dialog
      above it on the stack completes.
    remarks: >-
      Derived dialogs that support multiple-turn conversations should override
      this method.

      By default, this method signals that the dialog is complete and returns.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when it resumes

      the dialog. If the previous dialog on the stack returned a value, that
      value is in the `result`

      parameter.


      To start a _child_ dialog, use
      [DialogContext.beginDialog](xref:botbuilder-dialogs.DialogContext.beginDialog)

      or [DialogContext.prompt](xref:botbuilder-dialogs.DialogContext.prompt);
      however, this dialog will not

      necessarily be the one that started the child dialog.

      To signal to the dialog context that this dialog has completed, await

      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
      before exiting this method.


      **See also**

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The context for the current dialog turn.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |-
            The reason the dialog is resuming. This will typically be
                 [DialogReason.endCalled](xref:botbuilder-dialogs.DialogReason.endCalled)
        - id: result
          type: any
          description: |
            Optional. The return value, if any, from the dialog that ended.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs.Configurable" />
