### YamlMime:TSType
name: DialogContainer
uid: botbuilder-dialogs.DialogContainer
package: botbuilder-dialogs
summary: ''
fullName: DialogContainer<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: DialogContainer(string)
    uid: botbuilder-dialogs.DialogContainer.constructor
    package: botbuilder-dialogs
    summary: >-
      Creates a new instance of the [Dialog](xref:botbuilder-dialogs.Dialog)
      class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DialogContainer(dialogId?: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            Optional. unique ID of the dialog.
properties:
  - name: dialogs
    uid: botbuilder-dialogs.DialogContainer.dialogs
    package: botbuilder-dialogs
    summary: The containers dialog set.
    fullName: dialogs
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public dialogs: DialogSet = new DialogSet(undefined)'
      return:
        type: <xref uid="botbuilder-dialogs.DialogSet" />
        description: ''
  - name: id
    uid: botbuilder-dialogs.DialogContainer.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.DialogContainer.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Set the telemetry client, and also apply it to all child dialogs.
      Future dialogs added to the component will also inherit this client.
      Get the current telemetry client.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs.DialogContainer.beginDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, starts the dialog.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The context for the current dialog turn.
        - id: options
          type: O
          description: |
            Optional. Arguments to use when the dialog starts.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.DialogContainer.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.DialogContainer.continueDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, continues the dialog.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: |
            The context for the current dialog turn.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: createChildContext(DialogContext)
    uid: botbuilder-dialogs.DialogContainer.createChildContext
    package: botbuilder-dialogs
    summary: Creates an inner dialog context for the containers active child.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createChildContext(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: Parents dialog context.
      return:
        type: <xref uid="botbuilder-dialogs.DialogContext" /> | undefined
        description: >-
          A new dialog context for the active child or `undefined` if there is
          no active child.
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.DialogContainer.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: findDialog(string)
    uid: botbuilder-dialogs.DialogContainer.findDialog
    package: botbuilder-dialogs
    summary: Finds a child dialog that was previously added to the container.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findDialog(dialogId: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            ID of the dialog to lookup.
      return:
        type: <xref uid="botbuilder-dialogs.Dialog" /> | undefined
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.DialogContainer.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.DialogContainer.onDialogEvent
    package: botbuilder-dialogs
    summary: |-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: |
            The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.DialogContainer.repromptDialog
    package: botbuilder-dialogs
    summary: 'When overridden in a derived class, reprompts the user for input.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.DialogContainer.resumeDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, resumes the dialog after the dialog
      above it on the stack completes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The context for the current dialog turn.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |-
            The reason the dialog is resuming. This will typically be
                 [DialogReason.endCalled](xref:botbuilder-dialogs.DialogReason.endCalled)
        - id: result
          type: any
          description: |
            Optional. The return value, if any, from the dialog that ended.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs.Dialog" />&lt;O&gt;
