### YamlMime:TSType
name: ChoicePrompt
uid: botbuilder-dialogs.ChoicePrompt
package: botbuilder-dialogs
summary: Prompts a user to select from a list of choices.
fullName: ChoicePrompt<O>
remarks: >-
  By default the prompt will return to the calling dialog a `FoundChoice` object
  containing the

  choice that was selected.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ChoicePrompt(string, PromptValidator<FoundChoice>, string,
      ChoiceDefaultsChoicePrompt)
    uid: botbuilder-dialogs.ChoicePrompt.constructor
    package: botbuilder-dialogs
    summary: Creates a new `ChoicePrompt` instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ChoicePrompt(dialogId: string, validator?:
        PromptValidator<FoundChoice>, defaultLocale?: string, choiceDefaults?:
        ChoiceDefaultsChoicePrompt)
      parameters:
        - id: dialogId
          type: string
          description: Unique ID of the dialog within its parent `DialogSet`.
        - id: validator
          type: >-
            <xref uid="botbuilder-dialogs.PromptValidator" />&lt;<xref
            uid="botbuilder-dialogs.FoundChoice" />&gt;
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt. If the validator replies with a message no additional
            retry prompt will be sent.
        - id: defaultLocale
          type: string
          description: >-
            (Optional) locale to use if `dc.context.activity.locale` not
            specified. Defaults to a value of `en-us`.
        - id: choiceDefaults
          type: ChoiceDefaultsChoicePrompt
          description: >
            (Optional) Overrides the dictionary of Bot Framework SDK-supported
            _choiceDefaults (for prompt localization).
             Must be passed in to each ConfirmPrompt that needs the custom choice defaults.
properties:
  - name: choiceOptions
    uid: botbuilder-dialogs.ChoicePrompt.choiceOptions
    package: botbuilder-dialogs
    summary: >-
      Additional options passed to the `ChoiceFactory` and used to tweak the
      style of choices

      rendered to the user.
    fullName: choiceOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public choiceOptions: ChoiceFactoryOptions | undefined'
      return:
        type: <xref uid="botbuilder-dialogs.ChoiceFactoryOptions" /> | undefined
        description: ''
  - name: defaultLocale
    uid: botbuilder-dialogs.ChoicePrompt.defaultLocale
    package: botbuilder-dialogs
    summary: The prompts default locale that should be recognized.
    fullName: defaultLocale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public defaultLocale: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: id
    uid: botbuilder-dialogs.ChoicePrompt.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: recognizerOptions
    uid: botbuilder-dialogs.ChoicePrompt.recognizerOptions
    package: botbuilder-dialogs
    summary: Additional options passed to the underlying `recognizeChoices()` function.
    fullName: recognizerOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public recognizerOptions: FindChoicesOptions | undefined'
      return:
        type: <xref uid="botbuilder-dialogs.FindChoicesOptions" /> | undefined
        description: ''
  - name: style
    uid: botbuilder-dialogs.ChoicePrompt.style
    package: botbuilder-dialogs
    summary: Style of the "yes" and "no" choices rendered to the user when prompting.
    fullName: style
    remarks: Defaults to `ListStyle.auto`.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public style: ListStyle'
      return:
        type: <xref uid="botbuilder-dialogs.ListStyle" />
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.ChoicePrompt.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, PromptOptions)'
    uid: botbuilder-dialogs.ChoicePrompt.beginDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options: PromptOptions)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: options
          type: <xref uid="botbuilder-dialogs.PromptOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.ChoicePrompt.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.ChoicePrompt.continueDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.ChoicePrompt.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.ChoicePrompt.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.ChoicePrompt.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.ChoicePrompt.repromptDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.ChoicePrompt.resumeDialog
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: ''
        - id: result
          type: any
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
extends: >-
  <xref uid="botbuilder-dialogs.Prompt" />&lt;<xref
  uid="botbuilder-dialogs.FoundChoice" />&gt;
