### YamlMime:TSType
name: DateTimePrompt
uid: botbuilder-dialogs.DateTimePrompt
package: botbuilder-dialogs
summary: Prompts a user to enter a datetime expression.
fullName: DateTimePrompt<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'DateTimePrompt(string, PromptValidator<DateTimeResolution[]>, string)'
    uid: botbuilder-dialogs.DateTimePrompt.constructor
    package: botbuilder-dialogs
    summary: Creates a new DateTimePrompt instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new DateTimePrompt(dialogId: string, validator?:
        PromptValidator<DateTimeResolution[]>, defaultLocale?: string)
      parameters:
        - id: dialogId
          type: string
          description: >-
            Unique ID of the dialog within its parent `DialogSet` or
            `ComponentDialog`.
        - id: validator
          type: >-
            <xref uid="botbuilder-dialogs.PromptValidator" />&lt;<xref
            uid="botbuilder-dialogs.DateTimeResolution" />[]&gt;
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt.
        - id: defaultLocale
          type: string
          description: >
            (Optional) locale to use if `TurnContext.activity.locale` is not
            specified. Defaults to a value of `en-us`.
properties:
  - name: defaultLocale
    uid: botbuilder-dialogs.DateTimePrompt.defaultLocale
    package: botbuilder-dialogs
    summary: The prompts default locale that should be recognized.
    fullName: defaultLocale
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public defaultLocale: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: id
    uid: botbuilder-dialogs.DateTimePrompt.id
    package: botbuilder-dialogs
    summary: Unique ID of the dialog.
    fullName: id
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        type: string
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs.DateTimePrompt.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, PromptOptions)'
    uid: botbuilder-dialogs.DateTimePrompt.beginDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options: PromptOptions)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: options
          type: <xref uid="botbuilder-dialogs.PromptOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: configure(object)
    uid: botbuilder-dialogs.DateTimePrompt.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type: object
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.DateTimePrompt.continueDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.DateTimePrompt.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getVersion()
    uid: botbuilder-dialogs.DateTimePrompt.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: ''
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.DateTimePrompt.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.DateTimePrompt.repromptDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.DateTimePrompt.resumeDialog
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: ''
        - id: reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: ''
        - id: result
          type: any
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
extends: >-
  <xref uid="botbuilder-dialogs.Prompt" />&lt;<xref
  uid="botbuilder-dialogs.DateTimeResolution" />[]&gt;
