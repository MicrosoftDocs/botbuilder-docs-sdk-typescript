### YamlMime:TSType
name: DialogManager
uid: botbuilder-dialogs.DialogManager
package: botbuilder-dialogs
summary: ''
fullName: DialogManager
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'DialogManager(Dialog, string)'
    uid: botbuilder-dialogs.DialogManager.constructor
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new DialogManager(rootDialog?: Dialog, dialogStateProperty?: string)'
      parameters:
        - id: rootDialog
          type: <xref uid="botbuilder-dialogs.Dialog" />
          description: ''
        - id: dialogStateProperty
          type: string
          description: ''
properties:
  - name: conversationState
    uid: botbuilder-dialogs.DialogManager.conversationState
    package: botbuilder-dialogs
    summary: Bots persisted conversation state.
    fullName: conversationState
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public conversationState: ConversationState'
      return:
        type: ConversationState
        description: ''
  - name: dialogs
    uid: botbuilder-dialogs.DialogManager.dialogs
    package: botbuilder-dialogs
    summary: Global dialogs that you want to have be callable.
    fullName: dialogs
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public dialogs: DialogSet = new DialogSet()'
      return:
        type: <xref uid="botbuilder-dialogs.DialogSet" />
        description: ''
  - name: expireAfter
    uid: botbuilder-dialogs.DialogManager.expireAfter
    package: botbuilder-dialogs
    summary: >-
      Optional. Number of milliseconds to expire the bots conversation state
      after.
    fullName: expireAfter
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public expireAfter?: number'
      return:
        type: number
        description: ''
  - name: initialTurnState
    uid: botbuilder-dialogs.DialogManager.initialTurnState
    package: botbuilder-dialogs
    summary: >-
      Values that will be copied to the `TurnContext.turnState` at the beginning
      of each turn.
    fullName: initialTurnState
    isPreview: false
    isDeprecated: false
    syntax:
      content: TurnContextStateCollection initialTurnState
      return:
        type: TurnContextStateCollection
        description: ''
  - name: rootDialog
    uid: botbuilder-dialogs.DialogManager.rootDialog
    package: botbuilder-dialogs
    summary: 'Root dialog to start from [onTurn()](#onturn) method.'
    fullName: rootDialog
    isPreview: false
    isDeprecated: false
    syntax:
      content: Dialog rootDialog
      return:
        type: <xref uid="botbuilder-dialogs.Dialog" />
        description: ''
  - name: stateConfiguration
    uid: botbuilder-dialogs.DialogManager.stateConfiguration
    package: botbuilder-dialogs
    summary: >-
      Optional. Path resolvers and memory scopes used for conversations with the
      bot.
    fullName: stateConfiguration
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public stateConfiguration?: DialogStateManagerConfiguration'
      return:
        type: <xref uid="botbuilder-dialogs.DialogStateManagerConfiguration" />
        description: ''
  - name: userState
    uid: botbuilder-dialogs.DialogManager.userState
    package: botbuilder-dialogs
    summary: Optional. Bots persisted user state.
    fullName: userState
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public userState?: UserState'
      return:
        type: UserState
        description: ''
methods:
  - name: configure(Partial<DialogManagerConfiguration>)
    uid: botbuilder-dialogs.DialogManager.configure
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Partial<DialogManagerConfiguration>)'
      parameters:
        - id: config
          type: >-
            Partial&lt;<xref uid="botbuilder-dialogs.DialogManagerConfiguration"
            />&gt;
          description: ''
      return:
        type: this
        description: ''
  - name: onTurn(TurnContext)
    uid: botbuilder-dialogs.DialogManager.onTurn
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onTurn(context: TurnContext)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogManagerResult" />&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs.Configurable" />
