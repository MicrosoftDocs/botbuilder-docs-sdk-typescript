### YamlMime:TSType
name: WaterfallStepContext
uid: botbuilder-dialogs.WaterfallStepContext
package: botbuilder-dialogs
summary: Context object passed in to a `WaterfallStep`.
fullName: WaterfallStepContext<O>
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'WaterfallStepContext(DialogContext, WaterfallStepInfo<O>)'
    uid: botbuilder-dialogs.WaterfallStepContext.constructor
    package: botbuilder-dialogs
    summary: Creates a new WaterfallStepContext instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new WaterfallStepContext(dc: DialogContext, info: WaterfallStepInfo<O>)'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: info
          type: <xref uid="botbuilder-dialogs.WaterfallStepInfo" />&lt;O&gt;
          description: |
            Values to initialize the step context with.
properties:
  - name: activeDialog
    uid: botbuilder-dialogs.WaterfallStepContext.activeDialog
    package: botbuilder-dialogs
    summary: >-
      Returns the state information for the dialog on the top of the dialog
      stack, or `undefined` if

      the stack is empty.
    fullName: activeDialog
    isPreview: false
    isDeprecated: false
    syntax:
      content: DialogInstance | undefined activeDialog
      return:
        type: <xref uid="botbuilder-dialogs.DialogInstance" /> | undefined
        description: ''
  - name: child
    uid: botbuilder-dialogs.WaterfallStepContext.child
    package: botbuilder-dialogs
    summary: Returns dialog context for child if the active dialog is a container.
    fullName: child
    isPreview: false
    isDeprecated: false
    syntax:
      content: DialogContext | undefined child
      return:
        type: <xref uid="botbuilder-dialogs.DialogContext" /> | undefined
        description: ''
  - name: context
    uid: botbuilder-dialogs.WaterfallStepContext.context
    package: botbuilder-dialogs
    summary: Gets the context object for the turn.
    fullName: context
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public context: TurnContext'
      return:
        type: TurnContext
        description: ''
  - name: dialogManager
    uid: botbuilder-dialogs.WaterfallStepContext.dialogManager
    package: botbuilder-dialogs
    summary: Returns the current dialog manager instance.
    fullName: dialogManager
    isPreview: false
    isDeprecated: false
    syntax:
      content: DialogManager dialogManager
      return:
        type: <xref uid="botbuilder-dialogs.DialogManager" />
        description: ''
  - name: dialogs
    uid: botbuilder-dialogs.WaterfallStepContext.dialogs
    package: botbuilder-dialogs
    summary: Gets the dialogs that can be called directly from this context.
    fullName: dialogs
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public dialogs: DialogSet'
      return:
        type: <xref uid="botbuilder-dialogs.DialogSet" />
        description: ''
  - name: index
    uid: botbuilder-dialogs.WaterfallStepContext.index
    package: botbuilder-dialogs
    summary: The index of the current waterfall step being executed.
    fullName: index
    isPreview: false
    isDeprecated: false
    syntax:
      content: number index
      return:
        type: number
        description: ''
  - name: options
    uid: botbuilder-dialogs.WaterfallStepContext.options
    package: botbuilder-dialogs
    summary: |-
      Any options passed to the steps waterfall dialog when it was started with
      `DialogContext.beginDialog()`.
    fullName: options
    isPreview: false
    isDeprecated: false
    syntax:
      content: O options
      return:
        type: O
        description: ''
  - name: parent
    uid: botbuilder-dialogs.WaterfallStepContext.parent
    package: botbuilder-dialogs
    summary: >-
      The parent dialog context for this dialog context, or `undefined` if this
      context doesn't have a parent.
    fullName: parent
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public parent: DialogContext | undefined'
      return:
        type: <xref uid="botbuilder-dialogs.DialogContext" /> | undefined
        description: ''
  - name: reason
    uid: botbuilder-dialogs.WaterfallStepContext.reason
    package: botbuilder-dialogs
    summary: The reason the waterfall step is being executed.
    fullName: reason
    isPreview: false
    isDeprecated: false
    syntax:
      content: DialogReason reason
      return:
        type: <xref uid="botbuilder-dialogs.DialogReason" />
        description: ''
  - name: result
    uid: botbuilder-dialogs.WaterfallStepContext.result
    package: botbuilder-dialogs
    summary: >-
      Results returned by a dialog or prompt that was called in the previous
      waterfall step.
    fullName: result
    isPreview: false
    isDeprecated: false
    syntax:
      content: any result
      return:
        type: any
        description: ''
  - name: services
    uid: botbuilder-dialogs.WaterfallStepContext.services
    package: botbuilder-dialogs
    summary: Gets the services collection which is contextual to this dialog context.
    fullName: services
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public services: TurnContextStateCollection = new
        TurnContextStateCollection()
      return:
        type: TurnContextStateCollection
        description: ''
  - name: stack
    uid: botbuilder-dialogs.WaterfallStepContext.stack
    package: botbuilder-dialogs
    summary: Gets the current dialog stack.
    fullName: stack
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public stack: DialogInstance[]'
      return:
        type: '<xref uid="botbuilder-dialogs.DialogInstance" />[]'
        description: ''
  - name: state
    uid: botbuilder-dialogs.WaterfallStepContext.state
    package: botbuilder-dialogs
    summary: Gets the DialogStateManager which manages view of all memory scopes.
    fullName: state
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public state: DialogStateManager'
      return:
        type: <xref uid="botbuilder-dialogs.DialogStateManager" />
        description: ''
  - name: values
    uid: botbuilder-dialogs.WaterfallStepContext.values
    package: botbuilder-dialogs
    summary: A dictionary of values which will be persisted across all waterfall steps.
    fullName: values
    isPreview: false
    isDeprecated: false
    syntax:
      content: object values
      return:
        type: object
        description: ''
methods:
  - name: 'beginDialog(string, object)'
    uid: botbuilder-dialogs.WaterfallStepContext.beginDialog
    package: botbuilder-dialogs
    summary: |-
      Starts a dialog instance and pushes it onto the dialog stack.
      Creates a new instance of the dialog and pushes it onto the stack.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dialogId: string, options?: object)'
      parameters:
        - id: dialogId
          type: string
          description: ID of the dialog to start.
        - id: options
          type: object
          description: |
            Optional. Arguments to pass into the dialog when it starts.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'cancelAllDialogs(boolean, string, any)'
    uid: botbuilder-dialogs.WaterfallStepContext.cancelAllDialogs
    package: botbuilder-dialogs
    summary: 'Cancels all dialogs on the dialog stack, and clears stack.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelAllDialogs(cancelParents: boolean, eventName?: string,
        eventValue?: any)
      parameters:
        - id: cancelParents
          type: boolean
          description: Optional. If `true` all parent dialogs will be cancelled as well.
        - id: eventName
          type: string
          description: >-
            Optional. Name of a custom event to raise as dialogs are cancelled.
            This defaults to
            [cancelDialog](xref:botbuilder-dialogs.DialogEvents.cancelDialog).
        - id: eventValue
          type: any
          description: |
            Optional. Value to pass along with custom cancellation event.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: continueDialog()
    uid: botbuilder-dialogs.WaterfallStepContext.continueDialog
    package: botbuilder-dialogs
    summary: >-
      Continues execution of the active dialog, if there is one, by passing this
      dialog context to its

      [Dialog.continueDialog](xref:botbuilder-dialogs.Dialog.continueDialog)
      method.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function continueDialog()
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'emitEvent(string, any, boolean, boolean)'
    uid: botbuilder-dialogs.WaterfallStepContext.emitEvent
    package: botbuilder-dialogs
    summary: Searches for a dialog with a given ID.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function emitEvent(name: string, value?: any, bubble: boolean, fromLeaf:
        boolean)
      parameters:
        - id: name
          type: string
          description: Name of the event to raise.
        - id: value
          type: any
          description: Optional. Value to send along with the event.
        - id: bubble
          type: boolean
          description: >-
            Optional. Flag to control whether the event should be bubbled to its
            parent if not handled locally. Defaults to a value of `true`.
        - id: fromLeaf
          type: boolean
          description: Optional. Whether the event is emitted from a leaf node.
      return:
        type: Promise&lt;boolean&gt;
        description: '`true` if the event was handled.'
  - name: endDialog(any)
    uid: botbuilder-dialogs.WaterfallStepContext.endDialog
    package: botbuilder-dialogs
    summary: >-
      Ends a dialog and pops it off the stack. Returns an optional result to the
      dialog's parent.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function endDialog(result?: any)'
      parameters:
        - id: result
          type: any
          description: >
            Optional. A result to pass to the parent logic. This might be the
            next dialog
                 on the stack, or if this was the last dialog on the stack, a parent dialog context or
                 the bot's turn handler.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: findDialog(string)
    uid: botbuilder-dialogs.WaterfallStepContext.findDialog
    package: botbuilder-dialogs
    summary: Searches for a dialog with a given ID.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findDialog(dialogId: string)'
      parameters:
        - id: dialogId
          type: string
          description: |
            ID of the dialog to search for.
      return:
        type: <xref uid="botbuilder-dialogs.Dialog" /> | undefined
        description: ''
  - name: next(any)
    uid: botbuilder-dialogs.WaterfallStepContext.next
    package: botbuilder-dialogs
    summary: Skips to the next waterfall step.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function next(result?: any)'
      parameters:
        - id: result
          type: any
          description: |
            (Optional) result to pass to the next step.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'prompt(string, string | Partial<Activity> | PromptOptions)'
    uid: botbuilder-dialogs.WaterfallStepContext.prompt
    package: botbuilder-dialogs
    summary: >-
      Helper function to simplify formatting the options for calling a prompt
      dialog.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prompt(dialogId: string, promptOrOptions: string |
        Partial<Activity> | PromptOptions)
      parameters:
        - id: dialogId
          type: string
          description: ID of the prompt dialog to start.
        - id: promptOrOptions
          type: >-
            string | Partial&lt;Activity&gt; | <xref
            uid="botbuilder-dialogs.PromptOptions" />
          description: |-
            The text of the initial prompt to send the user,
                 the activity to send as the initial prompt, or
                 the object with which to format the prompt dialog.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: >-
      prompt(string, string | Partial<Activity> | PromptOptions, string |
      Choice[])
    uid: botbuilder-dialogs.WaterfallStepContext.prompt_1
    package: botbuilder-dialogs
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prompt(dialogId: string, promptOrOptions: string |
        Partial<Activity> | PromptOptions, choices: string | Choice[])
      parameters:
        - id: dialogId
          type: string
          description: ''
        - id: promptOrOptions
          type: >-
            string | Partial&lt;Activity&gt; | <xref
            uid="botbuilder-dialogs.PromptOptions" />
          description: ''
        - id: choices
          type: 'string | <xref uid="botbuilder-dialogs.Choice" />[]'
          description: ''
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: 'replaceDialog(string, object)'
    uid: botbuilder-dialogs.WaterfallStepContext.replaceDialog
    package: botbuilder-dialogs
    summary: Ends the active dialog and starts a new dialog in its place.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function replaceDialog(dialogId: string, options?: object)'
      parameters:
        - id: dialogId
          type: string
          description: ID of the dialog to start.
        - id: options
          type: object
          description: |
            Optional. Arguments to pass into the new dialog when it starts.
      return:
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
        description: ''
  - name: repromptDialog()
    uid: botbuilder-dialogs.WaterfallStepContext.repromptDialog
    package: botbuilder-dialogs
    summary: Requests the active dialog to re-prompt the user for input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function repromptDialog()
      return:
        type: Promise&lt;void&gt;
        description: ''
extends: <xref uid="botbuilder-dialogs.DialogContext" />
