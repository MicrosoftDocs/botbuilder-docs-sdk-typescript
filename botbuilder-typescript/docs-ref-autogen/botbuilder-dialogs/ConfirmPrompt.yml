### YamlMime:TSType
name: ConfirmPrompt
uid: botbuilder-dialogs.ConfirmPrompt
package: botbuilder-dialogs
summary: Prompts a user to confirm something with a "yes" or "no" response.
fullName: ConfirmPrompt<O>
remarks: >-
  By default the prompt will return to the calling dialog a `boolean`
  representing the users

  selection.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ConfirmPrompt(string, PromptValidator<boolean>, string,
      ChoiceDefaultsConfirmPrompt)
    uid: botbuilder-dialogs.ConfirmPrompt.constructor
    package: botbuilder-dialogs
    summary: Creates a new ConfirmPrompt instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ConfirmPrompt(dialogId: string, validator?:
        PromptValidator<boolean>, defaultLocale?: string, choiceDefaults?:
        ChoiceDefaultsConfirmPrompt)
      parameters:
        - id: dialogId
          type: string
          description: >-
            Unique ID of the dialog within its parent `DialogSet` or
            `ComponentDialog`.
        - id: validator
          type: <xref uid="botbuilder-dialogs.PromptValidator" />&lt;boolean&gt;
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt.
        - id: defaultLocale
          type: string
          description: >-
            (Optional) locale to use if `TurnContext.activity.locale` is not
            specified. Defaults to a value of `en-us`.
        - id: choiceDefaults
          type: <xref uid="botbuilder-dialogs.ChoiceDefaultsConfirmPrompt" />
          description: >
            (Optional) Overrides the dictionary of Default Choices on
            [[PromptCultureModels.getSupportedCultures()]].
properties:
  - name: choiceOptions
    uid: botbuilder-dialogs.ConfirmPrompt.choiceOptions
    package: botbuilder-dialogs
    summary: >-
      Additional options passed to the `ChoiceFactory` and used to tweak the
      style of choices

      rendered to the user.
    fullName: choiceOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'choiceOptions: ChoiceFactoryOptions | undefined'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs.ChoiceFactoryOptions" /> | undefined
  - name: confirmChoices
    uid: botbuilder-dialogs.ConfirmPrompt.confirmChoices
    package: botbuilder-dialogs
    summary: Custom list of choices to send for the prompt.
    fullName: confirmChoices
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'confirmChoices: string | Choice[] | undefined'
      return:
        description: ''
        type: 'string | <xref uid="botbuilder-dialogs.Choice" />[] | undefined'
  - name: defaultLocale
    uid: botbuilder-dialogs.ConfirmPrompt.defaultLocale
    package: botbuilder-dialogs
    summary: The prompts default locale that should be recognized.
    fullName: defaultLocale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultLocale: string | undefined'
      return:
        description: ''
        type: string | undefined
  - name: id
    uid: botbuilder-dialogs.ConfirmPrompt.id
    package: botbuilder-dialogs
    summary: |-
      Unique ID of the dialog.
      Sets the unique ID of the dialog.
    fullName: id
    remarks: This will be automatically generated if not specified.
    isPreview: false
    isDeprecated: false
    syntax:
      content: string id
      return:
        description: The Id for the dialog.
        type: string
  - name: style
    uid: botbuilder-dialogs.ConfirmPrompt.style
    package: botbuilder-dialogs
    summary: Style of the "yes" and "no" choices rendered to the user when prompting.
    fullName: style
    remarks: Defaults to `ListStyle.auto`.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style: ListStyle'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs.ListStyle" />
  - name: telemetryClient
    uid: botbuilder-dialogs.ConfirmPrompt.telemetryClient
    package: botbuilder-dialogs
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        description: >-
          The [BotTelemetryClient](xref:botbuilder.BotTelemetryClient) to use
          for logging.
        type: BotTelemetryClient
inheritedProperties:
  - name: EndOfTurn
    uid: botbuilder-dialogs.ConfirmPrompt.EndOfTurn
    package: botbuilder-dialogs
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        description: ''
        type: <xref uid="botbuilder-dialogs.DialogTurnResult" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Dialog.EndOfTurn](xref:botbuilder-dialogs.Dialog.EndOfTurn)
inheritedMethods:
  - name: 'beginDialog(DialogContext, PromptOptions)'
    uid: botbuilder-dialogs.ConfirmPrompt.beginDialog
    package: botbuilder-dialogs
    summary: >-
      Called when a prompt dialog is pushed onto the dialog stack and is being
      activated.
    remarks: >-
      If the task is successful, the result indicates whether the prompt is
      still

      active after the turn has been processed by the prompt.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDialog(dc: DialogContext, options: PromptOptions):
        Promise<DialogTurnResult>
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current

            turn of the conversation.
        - id: options
          type: <xref uid="botbuilder-dialogs.PromptOptions" />
          description: |-
            Optional. [PromptOptions](xref:botbuilder-dialogs.PromptOptions),
            additional information to pass to the prompt being started.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Prompt.beginDialog](xref:botbuilder-dialogs.Prompt.beginDialog)
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs.ConfirmPrompt.configure
    package: botbuilder-dialogs
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>): this'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: Configuration settings to apply.
      return:
        description: >-
          The [Configurable](xref:botbuilder-dialogs.Configurable) after the
          operation is complete.
        type: this
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Configurable.configure](xref:botbuilder-dialogs.Configurable.configure)
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs.ConfirmPrompt.continueDialog
    package: botbuilder-dialogs
    summary: >-
      Called when a prompt dialog is the active dialog and the user replied with
      a new activity.
    remarks: >-
      If the task is successful, the result indicates whether the dialog is
      still

      active after the turn has been processed by the dialog.

      The prompt generally continues to receive the user's replies until it
      accepts the

      user's reply as valid input for the prompt.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext): Promise<DialogTurnResult>'
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Prompt.continueDialog](xref:botbuilder-dialogs.Prompt.continueDialog)
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs.ConfirmPrompt.endDialog
    package: botbuilder-dialogs
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(_context: TurnContext, _instance: DialogInstance,
        _reason: DialogReason): Promise<void>
      parameters:
        - id: _context
          type: TurnContext
          description: The context object for the turn.
        - id: _instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: Current state information for this dialog.
        - id: _reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: |
            The reason the dialog is ending.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Dialog.endDialog](xref:botbuilder-dialogs.Dialog.endDialog)
  - name: getConverter(string)
    uid: botbuilder-dialogs.ConfirmPrompt.getConverter
    package: botbuilder-dialogs
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(_property: string): Converter | ConverterFactory'
      parameters:
        - id: _property
          type: string
          description: The key of the conditional selector configuration.
      return:
        description: The converter for the selector configuration.
        type: >-
          <xref uid="botbuilder-dialogs.Converter" /> | <xref
          uid="botbuilder-dialogs.ConverterFactory" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Configurable.getConverter](xref:botbuilder-dialogs.Configurable.getConverter)
  - name: getVersion()
    uid: botbuilder-dialogs.ConfirmPrompt.getVersion
    package: botbuilder-dialogs
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getVersion(): string'
      return:
        description: >-
          Unique string which should only change when dialog has changed in a
          way that should restart the dialog.
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Dialog.getVersion](xref:botbuilder-dialogs.Dialog.getVersion)
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs.ConfirmPrompt.onDialogEvent
    package: botbuilder-dialogs
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onDialogEvent(dc: DialogContext, e: DialogEvent):
        Promise<boolean>
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The dialog context for the current turn of conversation.
        - id: e
          type: <xref uid="botbuilder-dialogs.DialogEvent" />
          description: The event being raised.
      return:
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Dialog.onDialogEvent](xref:botbuilder-dialogs.Dialog.onDialogEvent)
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs.ConfirmPrompt.repromptDialog
    package: botbuilder-dialogs
    summary: >-
      Called when a prompt dialog has been requested to re-prompt the user for
      input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function repromptDialog(context: TurnContext, instance: DialogInstance):
        Promise<void>
      parameters:
        - id: context
          type: TurnContext
          description: |-
            (xref:botbuilder-core.TurnContext), context for the current
            turn of conversation with the user.
        - id: instance
          type: <xref uid="botbuilder-dialogs.DialogInstance" />
          description: |-
            (xref:botbuilder-dialogs.DialogInstance), the instance
            of the dialog on the stack.
      return:
        description: A `Promise` representing the asynchronous operation.
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Prompt.repromptDialog](xref:botbuilder-dialogs.Prompt.repromptDialog)
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs.ConfirmPrompt.resumeDialog
    package: botbuilder-dialogs
    summary: >-
      Called when a prompt dialog resumes being the active dialog on the dialog
      stack, such as

      when the previous active dialog on the stack completes.
    remarks: >-
      If the task is successful, the result indicates whether the dialog is
      still

      active after the turn has been processed by the dialog.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason,
        _result?: any): Promise<DialogTurnResult>
      parameters:
        - id: dc
          type: <xref uid="botbuilder-dialogs.DialogContext" />
          description: The DialogContext for the current turn of the conversation.
        - id: _reason
          type: <xref uid="botbuilder-dialogs.DialogReason" />
          description: An enum indicating why the dialog resumed.
        - id: _result
          type: any
          description: |-
            Optional, value returned from the previous dialog on the stack.
            The type of the value returned is dependent on the previous dialog.
      return:
        description: A Promise representing the asynchronous operation.
        type: Promise&lt;<xref uid="botbuilder-dialogs.DialogTurnResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Prompt.resumeDialog](xref:botbuilder-dialogs.Prompt.resumeDialog)
extends: <xref uid="botbuilder-dialogs.Prompt" />&lt;boolean&gt;
