### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.ComponentDialog
    name: ComponentDialog
    fullName: ComponentDialog<O>
    children:
      - botbuilder-dialogs.ComponentDialog.addDialog
      - botbuilder-dialogs.ComponentDialog.beginDialog
      - botbuilder-dialogs.ComponentDialog.continueDialog
      - botbuilder-dialogs.ComponentDialog.endDialog
      - botbuilder-dialogs.ComponentDialog.findDialog
      - botbuilder-dialogs.ComponentDialog.repromptDialog
      - botbuilder-dialogs.ComponentDialog.resumeDialog
    langs:
      - typeScript
    type: class
    summary: >-
      The `ComponentDialog` class lets you break your bots logic up into
      components that can be added

      as a dialog to other dialog sets within your bots project or exported and
      used in other bot

      projects.
    extends:
      name: botbuilder-dialogs.Dialog<O>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.addDialog
    name: addDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addDialog<T>(dialog: T)'
      parameters:
        - id: dialog
          type:
            - T
          description: ''
      return:
        type:
          - botbuilder-dialogs.ComponentDialog<O>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.beginDialog
    name: beginDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(outerDC: DialogContext, options?: O)'
      parameters:
        - id: outerDC
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: options
          type:
            - O
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.continueDialog
    name: continueDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(outerDC: DialogContext)'
      parameters:
        - id: outerDC
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.endDialog
    name: endDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: ''
      return:
        type:
          - Promise<void>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.findDialog
    name: findDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Finds a dialog that was previously added to the set using [add()](#add).'
    syntax:
      content: 'function findDialog(dialogId: string)'
      parameters:
        - id: dialogId
          type:
            - string
          description: |
            ID of the dialog/prompt to lookup.
      return:
        type:
          - botbuilder-dialogs.Dialog | undefined
    package: botbuilder-dialogs
    remarks: |-
      This example finds a dialog named "greeting":

      ```JavaScript
      const dialog = dialogs.find('greeting');
      ```
  - uid: botbuilder-dialogs.ComponentDialog.repromptDialog
    name: repromptDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: ''
      return:
        type:
          - Promise<void>
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ComponentDialog.resumeDialog
    name: resumeDialog
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
    package: botbuilder-dialogs
references:
  - uid: botbuilder-dialogs.Dialog<O>
    name: Dialog<O>
    spec.typeScript:
      - name: Dialog
        fullName: Dialog
        uid: botbuilder-dialogs.Dialog
      - name: <O>
        fullName: <O>
  - uid: botbuilder-dialogs.ComponentDialog<O>
    name: ComponentDialog<O>
    spec.typeScript:
      - name: ComponentDialog
        fullName: ComponentDialog
        uid: botbuilder-dialogs.ComponentDialog
      - name: <O>
        fullName: <O>
  - uid: botbuilder-dialogs.DialogContext
    name: DialogContext
    spec.typeScript:
      - name: DialogContext
        fullName: DialogContext
        uid: botbuilder-dialogs.DialogContext
  - uid: Promise<botbuilder-dialogs.DialogTurnResult>
    name: DialogTurnResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs.DialogTurnResult
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.DialogInstance
    name: DialogInstance
    spec.typeScript:
      - name: DialogInstance
        fullName: DialogInstance
        uid: botbuilder-dialogs.DialogInstance
  - uid: botbuilder-dialogs.DialogReason
    name: DialogReason
    spec.typeScript:
      - name: DialogReason
        fullName: DialogReason
        uid: botbuilder-dialogs.DialogReason
  - uid: botbuilder-dialogs.Dialog | undefined
    name: Dialog | undefined
    spec.typeScript:
      - name: Dialog
        fullName: Dialog
        uid: botbuilder-dialogs.Dialog
      - name: ' | undefined'
        fullName: ' | undefined'
