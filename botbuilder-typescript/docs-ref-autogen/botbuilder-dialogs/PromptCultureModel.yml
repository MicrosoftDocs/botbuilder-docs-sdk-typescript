### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.PromptCultureModel
    name: PromptCultureModel
    fullName: PromptCultureModel
    children:
      - botbuilder-dialogs.PromptCultureModel.inlineOr
      - botbuilder-dialogs.PromptCultureModel.inlineOrMore
      - botbuilder-dialogs.PromptCultureModel.locale
      - botbuilder-dialogs.PromptCultureModel.noInLanguage
      - botbuilder-dialogs.PromptCultureModel.separator
      - botbuilder-dialogs.PromptCultureModel.yesInLanguage
    langs:
      - typeScript
    type: interface
    summary: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.inlineOr
    name: inlineOr
    fullName: inlineOr
    children: []
    langs:
      - typeScript
    type: property
    summary: Culture Model's InlineOr.
    syntax:
      content: 'inlineOr: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.inlineOrMore
    name: inlineOrMore
    fullName: inlineOrMore
    children: []
    langs:
      - typeScript
    type: property
    summary: Culture Model's InlineOrMore.
    syntax:
      content: 'inlineOrMore: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.locale
    name: locale
    fullName: locale
    children: []
    langs:
      - typeScript
    type: property
    summary: Culture Model's Locale.
    syntax:
      content: 'locale: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.noInLanguage
    name: noInLanguage
    fullName: noInLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Equivalent of "No" in Culture Model's Language.
    syntax:
      content: 'noInLanguage: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.separator
    name: separator
    fullName: separator
    children: []
    langs:
      - typeScript
    type: property
    summary: Culture Model's InlineSeparator.
    syntax:
      content: 'separator: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.PromptCultureModel.yesInLanguage
    name: yesInLanguage
    fullName: yesInLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Equivalent of "Yes" in Culture Model's Language.
    syntax:
      content: 'yesInLanguage: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
