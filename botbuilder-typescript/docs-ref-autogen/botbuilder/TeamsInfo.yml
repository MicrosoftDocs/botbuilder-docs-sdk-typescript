### YamlMime:TSType
name: TeamsInfo
uid: botbuilder.TeamsInfo
package: botbuilder
summary: ''
fullName: TeamsInfo
isPreview: false
isDeprecated: false
type: class
methods:
  - name: 'getMember(TurnContext, string)'
    uid: botbuilder.TeamsInfo.getMember
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getMember(context: TurnContext, userId: string)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: userId
          type: string
          description: ''
      return:
        type: Promise&lt;TeamsChannelAccount&gt;
        description: ''
  - name: getMembers(TurnContext)
    uid: botbuilder.TeamsInfo.getMembers
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getMembers(context: TurnContext)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
      return:
        type: 'Promise&lt;TeamsChannelAccount[]&gt;'
        description: ''
  - name: 'getPagedMembers(TurnContext, number, string)'
    uid: botbuilder.TeamsInfo.getPagedMembers
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getPagedMembers(context: TurnContext, pageSize?: number,
        continuationToken?: string)
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: pageSize
          type: number
          description: ''
        - id: continuationToken
          type: string
          description: ''
      return:
        type: Promise&lt;TeamsPagedMembersResult&gt;
        description: ''
  - name: 'getPagedTeamMembers(TurnContext, string, number, string)'
    uid: botbuilder.TeamsInfo.getPagedTeamMembers
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getPagedTeamMembers(context: TurnContext, teamId?:
        string, pageSize?: number, continuationToken?: string)
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: teamId
          type: string
          description: ''
        - id: pageSize
          type: number
          description: ''
        - id: continuationToken
          type: string
          description: ''
      return:
        type: Promise&lt;TeamsPagedMembersResult&gt;
        description: ''
  - name: 'getTeamChannels(TurnContext, string)'
    uid: botbuilder.TeamsInfo.getTeamChannels
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getTeamChannels(context: TurnContext, teamId?: string)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: teamId
          type: string
          description: ''
      return:
        type: 'Promise&lt;ChannelInfo[]&gt;'
        description: ''
  - name: 'getTeamDetails(TurnContext, string)'
    uid: botbuilder.TeamsInfo.getTeamDetails
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getTeamDetails(context: TurnContext, teamId?: string)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: teamId
          type: string
          description: ''
      return:
        type: Promise&lt;TeamDetails&gt;
        description: ''
  - name: 'getTeamMember(TurnContext, string, string)'
    uid: botbuilder.TeamsInfo.getTeamMember
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function getTeamMember(context: TurnContext, teamId?: string,
        userId?: string)
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: teamId
          type: string
          description: ''
        - id: userId
          type: string
          description: ''
      return:
        type: Promise&lt;TeamsChannelAccount&gt;
        description: ''
  - name: 'getTeamMembers(TurnContext, string)'
    uid: botbuilder.TeamsInfo.getTeamMembers
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getTeamMembers(context: TurnContext, teamId?: string)'
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: teamId
          type: string
          description: ''
      return:
        type: 'Promise&lt;TeamsChannelAccount[]&gt;'
        description: ''
  - name: 'sendMessageToTeamsChannel(TurnContext, Activity, string)'
    uid: botbuilder.TeamsInfo.sendMessageToTeamsChannel
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function sendMessageToTeamsChannel(context: TurnContext,
        activity: Activity, teamsChannelId: string)
      parameters:
        - id: context
          type: TurnContext
          description: ''
        - id: activity
          type: Activity
          description: ''
        - id: teamsChannelId
          type: string
          description: ''
      return:
        type: Promise&lt;Object&gt;
        description: ''
