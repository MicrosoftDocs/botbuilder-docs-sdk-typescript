### YamlMime:TSType
name: SkillHandlerImpl
uid: botbuilder.SkillHandlerImpl
package: botbuilder
summary: ''
fullName: SkillHandlerImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SkillHandlerImpl(symbol, BotAdapter, (context: TurnContext) =>
      Promise<void>, SkillConversationIdFactoryBase, () => string | undefined)
    uid: botbuilder.SkillHandlerImpl.constructor
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SkillHandlerImpl(skillConversationReferenceKey: symbol, adapter:
        BotAdapter, logic: (context: TurnContext) => Promise<void>,
        conversationIdFactory: SkillConversationIdFactoryBase, getOauthScope?:
        () => string | undefined)
      parameters:
        - id: skillConversationReferenceKey
          type: symbol
          description: ''
        - id: adapter
          type: BotAdapter
          description: ''
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: ''
        - id: conversationIdFactory
          type: SkillConversationIdFactoryBase
          description: ''
        - id: getOauthScope
          type: () =&gt; string | undefined
          description: ''
methods:
  - name: 'onDeleteActivity(ClaimsIdentity, string, string)'
    uid: botbuilder.SkillHandlerImpl.onDeleteActivity
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onDeleteActivity(claimsIdentity: ClaimsIdentity,
        conversationId: string, activityId: string): Promise<void>
      parameters:
        - id: claimsIdentity
          type: ClaimsIdentity
          description: ''
        - id: conversationId
          type: string
          description: ''
        - id: activityId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'onGetMember(ClaimsIdentity, string, string)'
    uid: botbuilder.SkillHandlerImpl.onGetMember
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onGetMember(claimsIdentity: ClaimsIdentity, userId: string,
        conversationId: string): Promise<ChannelAccount>
      parameters:
        - id: claimsIdentity
          type: ClaimsIdentity
          description: ''
        - id: userId
          type: string
          description: ''
        - id: conversationId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;ChannelAccount&gt;
  - name: 'onReplyToActivity(ClaimsIdentity, string, string, Activity)'
    uid: botbuilder.SkillHandlerImpl.onReplyToActivity
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onReplyToActivity(claimsIdentity: ClaimsIdentity,
        conversationId: string, activityId: string, activity: Activity):
        Promise<ResourceResponse>
      parameters:
        - id: claimsIdentity
          type: ClaimsIdentity
          description: ''
        - id: conversationId
          type: string
          description: ''
        - id: activityId
          type: string
          description: ''
        - id: activity
          type: Activity
          description: ''
      return:
        description: ''
        type: Promise&lt;ResourceResponse&gt;
  - name: 'onSendToConversation(ClaimsIdentity, string, Activity)'
    uid: botbuilder.SkillHandlerImpl.onSendToConversation
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onSendToConversation(claimsIdentity: ClaimsIdentity,
        conversationId: string, activity: Activity): Promise<ResourceResponse>
      parameters:
        - id: claimsIdentity
          type: ClaimsIdentity
          description: ''
        - id: conversationId
          type: string
          description: ''
        - id: activity
          type: Activity
          description: ''
      return:
        description: ''
        type: Promise&lt;ResourceResponse&gt;
  - name: 'onUpdateActivity(ClaimsIdentity, string, string, Activity)'
    uid: botbuilder.SkillHandlerImpl.onUpdateActivity
    package: botbuilder
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onUpdateActivity(claimsIdentity: ClaimsIdentity,
        conversationId: string, activityId: string, activity: Activity):
        Promise<ResourceResponse>
      parameters:
        - id: claimsIdentity
          type: ClaimsIdentity
          description: ''
        - id: conversationId
          type: string
          description: ''
        - id: activityId
          type: string
          description: ''
        - id: activity
          type: Activity
          description: ''
      return:
        description: ''
        type: Promise&lt;ResourceResponse&gt;
