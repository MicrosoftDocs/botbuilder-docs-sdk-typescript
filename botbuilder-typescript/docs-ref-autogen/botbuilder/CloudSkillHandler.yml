### YamlMime:TSType
name: CloudSkillHandler
uid: botbuilder.CloudSkillHandler
package: botbuilder
summary: A Bot Framework Handler for skills.
fullName: CloudSkillHandler
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      CloudSkillHandler(BotAdapter, (context: TurnContext) => Promise<void>,
      SkillConversationIdFactoryBase, BotFrameworkAuthentication)
    uid: botbuilder.CloudSkillHandler.constructor
    package: botbuilder
    summary: Initializes a new instance of the CloudSkillHandler class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CloudSkillHandler(adapter: BotAdapter, logic: (context: TurnContext)
        => Promise<void>, conversationIdFactory: SkillConversationIdFactoryBase,
        auth: BotFrameworkAuthentication)
      parameters:
        - id: adapter
          type: <xref uid="botbuilder.BotAdapter" />
          description: An instance of the BotAdapter that will handle the request.
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: The Bot logic function
        - id: conversationIdFactory
          type: <xref uid="botbuilder.SkillConversationIdFactoryBase" />
          description: >-
            A SkillConversationIdFactoryBase to unpack the conversation ID and
            map it to the calling bot.
        - id: auth
          type: BotFrameworkAuthentication
          description: Bot Framework Authentication to use
properties:
  - name: SkillConversationReferenceKey
    uid: botbuilder.CloudSkillHandler.SkillConversationReferenceKey
    package: botbuilder
    summary: >-
      Used to access the CovnersationReference sent from the Skill to the
      Parent.
    fullName: SkillConversationReferenceKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'SkillConversationReferenceKey: symbol'
      return:
        description: ''
        type: symbol
inheritedMethods:
  - name: handleCreateConversation(string, ConversationParameters)
    uid: botbuilder.CloudSkillHandler.handleCreateConversation
    package: botbuilder
    summary: Creates a new Conversation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleCreateConversation(authHeader: string, parameters:
        ConversationParameters): Promise<ConversationResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: parameters
          type: <xref uid="botbuilder.ConversationParameters" />
          description: >-
            [ConversationParameters](xref:botbuilder-core.ConversationParameters)
            to create the conversation from.
      return:
        description: A `Promise` representation for the operation.
        type: Promise&lt;<xref uid="botbuilder.ConversationResourceResponse" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleCreateConversation
  - name: handleDeleteActivity(string, string, string)
    uid: botbuilder.CloudSkillHandler.handleDeleteActivity
    package: botbuilder
    summary: Deletes an existing [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleDeleteActivity(authHeader: string, conversationId:
        string, activityId: string): Promise<void>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id to delete.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleDeleteActivity
  - name: handleDeleteConversationMember(string, string, string)
    uid: botbuilder.CloudSkillHandler.handleDeleteConversationMember
    package: botbuilder
    summary: Deletes a member from a conversation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleDeleteConversationMember(authHeader: string,
        conversationId: string, memberId: string): Promise<void>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: memberId
          type: string
          description: Id of the member to delete from this conversation.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      CloudChannelServiceHandler.handleDeleteConversationMember
  - name: handleGetActivityMembers(string, string, string)
    uid: botbuilder.CloudSkillHandler.handleGetActivityMembers
    package: botbuilder
    summary: >-
      Enumerates the members of an
      [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleGetActivityMembers(authHeader: string, conversationId:
        string, activityId: string): Promise<ChannelAccount[]>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id.
      return:
        description: >-
          The enumerated
          [ChannelAccount](xref:botframework-schema.ChannelAccount) list.
        type: Promise&lt;<xref uid="botbuilder.ChannelAccount" />[]&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleGetActivityMembers
  - name: handleGetConversationMember(string, string, string)
    uid: botbuilder.CloudSkillHandler.handleGetConversationMember
    package: botbuilder
    summary: Gets the account of a single conversation member.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversationMember(authHeader: string, userId: string,
        conversationId: string): Promise<ChannelAccount>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: userId
          type: string
          description: The user Id.
        - id: conversationId
          type: string
          description: The conversation Id.
      return:
        description: >-
          The [ChannelAccount](xref:botframework-schema.ChannelAccount) for the
          provided user id.
        type: Promise&lt;<xref uid="botbuilder.ChannelAccount" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      CloudChannelServiceHandler.handleGetConversationMember
  - name: handleGetConversationMembers(string, string)
    uid: botbuilder.CloudSkillHandler.handleGetConversationMembers
    package: botbuilder
    summary: Enumerates the members of a conversation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversationMembers(authHeader: string,
        conversationId: string): Promise<ChannelAccount[]>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
      return:
        description: >-
          The enumerated
          [ChannelAccount](xref:botframework-schema.ChannelAccount) list.
        type: Promise&lt;<xref uid="botbuilder.ChannelAccount" />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      CloudChannelServiceHandler.handleGetConversationMembers
  - name: handleGetConversationPagedMembers(string, string, number, string)
    uid: botbuilder.CloudSkillHandler.handleGetConversationPagedMembers
    package: botbuilder
    summary: Enumerates the members of a conversation one page at a time.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversationPagedMembers(authHeader: string,
        conversationId: string, pageSize?: number, continuationToken?: string):
        Promise<PagedMembersResult>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: pageSize
          type: number
          description: Suggested page size.
        - id: continuationToken
          type: string
          description: A continuation token.
      return:
        description: >-
          A `Promise` representing the
          [PagedMembersResult](xref:botframework-schema.PagedMembersResult) for
          the operation.
        type: Promise&lt;<xref uid="botbuilder.PagedMembersResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      CloudChannelServiceHandler.handleGetConversationPagedMembers
  - name: handleGetConversations(string, string, string)
    uid: botbuilder.CloudSkillHandler.handleGetConversations
    package: botbuilder
    summary: Lists the Conversations in which the bot has participated.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversations(authHeader: string, conversationId:
        string, continuationToken?: string): Promise<ConversationsResult>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: continuationToken
          type: string
          description: A skip or continuation token.
      return:
        description: A `Promise` representation for the operation.
        type: Promise&lt;<xref uid="botbuilder.ConversationsResult" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleGetConversations
  - name: handleReplyToActivity(string, string, string, Activity)
    uid: botbuilder.CloudSkillHandler.handleReplyToActivity
    package: botbuilder
    summary: Sends a reply to an [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleReplyToActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity):
        Promise<ResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id the reply is to.
        - id: activity
          type: <xref uid="botbuilder.Activity" />
          description: The [Activity](xref:botframework-schema.Activity) to send.
      return:
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
        type: Promise&lt;<xref uid="botbuilder.ResourceResponse" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleReplyToActivity
  - name: handleSendConversationHistory(string, string, Transcript)
    uid: botbuilder.CloudSkillHandler.handleSendConversationHistory
    package: botbuilder
    summary: Uploads the historic activities of the conversation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleSendConversationHistory(authHeader: string,
        conversationId: string, transcript: Transcript):
        Promise<ResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: transcript
          type: <xref uid="botbuilder.Transcript" />
          description: '[Transcript](xref:botframework-schema.Transcript) of activities.'
      return:
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
        type: Promise&lt;<xref uid="botbuilder.ResourceResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      CloudChannelServiceHandler.handleSendConversationHistory
  - name: handleSendToConversation(string, string, Activity)
    uid: botbuilder.CloudSkillHandler.handleSendToConversation
    package: botbuilder
    summary: >-
      Sends an [Activity](xref:botframework-schema.Activity) to the end of a
      conversation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleSendToConversation(authHeader: string, conversationId:
        string, activity: Activity): Promise<ResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activity
          type: <xref uid="botbuilder.Activity" />
          description: The [Activity](xref:botframework-schema.Activity) to send.
      return:
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
        type: Promise&lt;<xref uid="botbuilder.ResourceResponse" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleSendToConversation
  - name: handleUpdateActivity(string, string, string, Activity)
    uid: botbuilder.CloudSkillHandler.handleUpdateActivity
    package: botbuilder
    summary: >-
      Edits a previously sent existing
      [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleUpdateActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity):
        Promise<ResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id to update.
        - id: activity
          type: <xref uid="botbuilder.Activity" />
          description: The replacement [Activity](xref:botframework-schema.Activity).
      return:
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
        type: Promise&lt;<xref uid="botbuilder.ResourceResponse" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleUpdateActivity
  - name: handleUploadAttachment(string, string, AttachmentData)
    uid: botbuilder.CloudSkillHandler.handleUploadAttachment
    package: botbuilder
    summary: Stores data in a compliant store when dealing with enterprises.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleUploadAttachment(authHeader: string, conversationId:
        string, attachmentUpload: AttachmentData): Promise<ResourceResponse>
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: attachmentUpload
          type: <xref uid="botbuilder.AttachmentData" />
          description: '[AttachmentData](xref:botframework-schema.AttachmentData).'
      return:
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
        type: Promise&lt;<xref uid="botbuilder.ResourceResponse" />&gt;
    inheritanceDescription: <b>Inherited From</b> CloudChannelServiceHandler.handleUploadAttachment
extends: CloudChannelServiceHandler
