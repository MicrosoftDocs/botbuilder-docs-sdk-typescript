### YamlMime:UniversalReference
items:
  - uid: botbuilder.ChannelServiceHandler
    name: ChannelServiceHandler
    fullName: ChannelServiceHandler
    children:
      - botbuilder.ChannelServiceHandler.constructor
      - botbuilder.ChannelServiceHandler.handleCreateConversation
      - botbuilder.ChannelServiceHandler.handleDeleteActivity
      - botbuilder.ChannelServiceHandler.handleDeleteConversationMember
      - botbuilder.ChannelServiceHandler.handleGetActivityMembers
      - botbuilder.ChannelServiceHandler.handleGetConversationMembers
      - botbuilder.ChannelServiceHandler.handleGetConversationPagedMembers
      - botbuilder.ChannelServiceHandler.handleGetConversations
      - botbuilder.ChannelServiceHandler.handleReplyToActivity
      - botbuilder.ChannelServiceHandler.handleSendConversationHistory
      - botbuilder.ChannelServiceHandler.handleSendToConversation
      - botbuilder.ChannelServiceHandler.handleUpdateActivity
      - botbuilder.ChannelServiceHandler.handleUploadAttachment
    langs:
      - typeScript
    type: class
    summary: >-
      The ChannelServiceHandler implements API to forward activity to a skill
      and

      implements routing ChannelAPI calls from the Skill up through the
      bot/adapter.
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.constructor
    name: >-
      ChannelServiceHandler(ICredentialProvider, AuthenticationConfiguration,
      string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Initializes a new instance of the ChannelServiceHandler class, using a
      credential provider.
    syntax:
      content: >-
        new ChannelServiceHandler(credentialProvider: ICredentialProvider,
        authConfig: AuthenticationConfiguration, channelService?: string)
      parameters:
        - id: credentialProvider
          type:
            - ICredentialProvider
          description: The credential provider.
        - id: authConfig
          type:
            - AuthenticationConfiguration
          description: The authentication configuration.
        - id: channelService
          type:
            - string
          description: |
            A string representing the channel provider.
          optional: true
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleCreateConversation
    name: 'handleCreateConversation(string, ConversationParameters)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleCreateConversation(authHeader: string, parameters:
        ConversationParameters)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: parameters
          type:
            - ConversationParameters
          description: ''
      return:
        type:
          - Promise<ConversationResourceResponse>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleDeleteActivity
    name: 'handleDeleteActivity(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleDeleteActivity(authHeader: string, conversationId:
        string, activityId: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleDeleteConversationMember
    name: 'handleDeleteConversationMember(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleDeleteConversationMember(authHeader: string,
        conversationId: string, memberId: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleGetActivityMembers
    name: 'handleGetActivityMembers(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleGetActivityMembers(authHeader: string, conversationId:
        string, activityId: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleGetConversationMembers
    name: 'handleGetConversationMembers(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleGetConversationMembers(authHeader: string,
        conversationId: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<ChannelAccount[]>'
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleGetConversationPagedMembers
    name: 'handleGetConversationPagedMembers(string, string, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleGetConversationPagedMembers(authHeader: string,
        conversationId: string, pageSize?: number, continuationToken?: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: pageSize
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<PagedMembersResult>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleGetConversations
    name: 'handleGetConversations(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleGetConversations(authHeader: string, conversationId:
        string, continuationToken?: string)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<ConversationsResult>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleReplyToActivity
    name: 'handleReplyToActivity(string, string, string, Activity)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleReplyToActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleSendConversationHistory
    name: 'handleSendConversationHistory(string, string, Transcript)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleSendConversationHistory(authHeader: string,
        conversationId: string, transcript: Transcript)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: transcript
          type:
            - Transcript
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleSendToConversation
    name: 'handleSendToConversation(string, string, Activity)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleSendToConversation(authHeader: string, conversationId:
        string, activity: Activity)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleUpdateActivity
    name: 'handleUpdateActivity(string, string, string, Activity)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleUpdateActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: activityId
          type:
            - string
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
        description: ''
    package: botbuilder
  - uid: botbuilder.ChannelServiceHandler.handleUploadAttachment
    name: 'handleUploadAttachment(string, string, AttachmentData)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function handleUploadAttachment(authHeader: string, conversationId:
        string, attachmentUpload: AttachmentData)
      parameters:
        - id: authHeader
          type:
            - string
          description: ''
        - id: conversationId
          type:
            - string
          description: ''
        - id: attachmentUpload
          type:
            - AttachmentData
          description: ''
      return:
        type:
          - Promise<ResourceResponse>
        description: ''
    package: botbuilder
