### YamlMime:TSType
name: BotFrameworkHttpClient
uid: botbuilder.BotFrameworkHttpClient
package: botbuilder
summary: ''
fullName: BotFrameworkHttpClient
remarks: ''
isDeprecated: true
customDeprecatedMessage: >-
  Use `BotFrameworkAuthentication.createBotFrameworkClient()` to obtain a client
  and perform the operations that were accomplished through
  `BotFrameworkHttpClient`.

  HttpClient for calling skills from a Node.js BotBuilder V4 SDK bot.
type: class
constructors:
  - name: BotFrameworkHttpClient(ICredentialProvider, string)
    uid: botbuilder.BotFrameworkHttpClient.constructor
    package: botbuilder
    summary: >-
      Creates a new instance of the
      [BotFrameworkHttpClient](xref:botbuilder.BotFrameworkHttpClient) class
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new BotFrameworkHttpClient(credentialProvider: ICredentialProvider,
        channelService?: string)
      parameters:
        - id: credentialProvider
          type: ICredentialProvider
          description: >-
            An instance of
            [ICredentialProvider](xref:botframework-connector.ICredentialProvider).
        - id: channelService
          type: string
          description: Optional. The channel service.
methods:
  - name: postActivity<T>(string, string, string, string, string, Activity)
    uid: botbuilder.BotFrameworkHttpClient.postActivity
    package: botbuilder
    summary: Forwards an activity to another bot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function postActivity<T>(fromBotId: string, toBotId: string, toUrl:
        string, serviceUrl: string, conversationId: string, activity: Activity):
        Promise<InvokeResponse<T>>
      parameters:
        - id: fromBotId
          type: string
          description: The MicrosoftAppId of the bot sending the activity.
        - id: toBotId
          type: string
          description: The MicrosoftAppId of the bot receiving the activity.
        - id: toUrl
          type: string
          description: The URL of the bot receiving the activity.
        - id: serviceUrl
          type: string
          description: The callback Url for the skill host.
        - id: conversationId
          type: string
          description: A conversation ID to use for the conversation with the skill.
        - id: activity
          type: <xref uid="botbuilder.Activity" />
          description: Activity to forward.
      return:
        description: A promise representing the asynchronous operation.
        type: Promise&lt;<xref uid="botbuilder.InvokeResponse" />&lt;T&gt;&gt;
