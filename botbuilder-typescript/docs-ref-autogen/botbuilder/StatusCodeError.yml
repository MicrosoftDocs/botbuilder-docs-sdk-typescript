### YamlMime:TSType
name: StatusCodeError
uid: botbuilder.StatusCodeError
package: botbuilder
summary: Extends Error to provide specialized error messages.
fullName: StatusCodeError
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: StatusCodeError(StatusCodes, string)
    uid: botbuilder.StatusCodeError.constructor
    package: botbuilder
    summary: >-
      Creates a new instance of the
      [StatusCodeError](xref:botbuilder.StatusCodeError) class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new StatusCodeError(statusCode: StatusCodes, message?: string)'
      parameters:
        - id: statusCode
          type: <xref uid="botbuilder.StatusCodes" />
          description: The status code.
        - id: message
          type: string
          description: Optional. The error message.
properties:
  - name: statusCode
    uid: botbuilder.StatusCodeError.statusCode
    package: botbuilder
    summary: ''
    fullName: statusCode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'statusCode: StatusCodes'
      return:
        description: ''
        type: <xref uid="botbuilder.StatusCodes" />
inheritedProperties:
  - name: message
    uid: botbuilder.StatusCodeError.message
    package: botbuilder
    summary: ''
    fullName: message
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'message: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.message
  - name: name
    uid: botbuilder.StatusCodeError.name
    package: botbuilder
    summary: ''
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.name
  - name: prepareStackTrace
    uid: botbuilder.StatusCodeError.prepareStackTrace
    package: botbuilder
    summary: |-
      Optional override for formatting stack traces

      See https://v8.dev/docs/stack-trace-api#customizing-stack-traces
    fullName: prepareStackTrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static prepareStackTrace?: (err: Error, stackTraces: CallSite[]) => any'
      return:
        description: ''
        type: '(err: Error, stackTraces: CallSite[]) =&gt; any'
    inheritanceDescription: <b>Inherited From</b> Error.prepareStackTrace
  - name: stack
    uid: botbuilder.StatusCodeError.stack
    package: botbuilder
    summary: ''
    fullName: stack
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stack?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.stack
  - name: stackTraceLimit
    uid: botbuilder.StatusCodeError.stackTraceLimit
    package: botbuilder
    summary: ''
    fullName: stackTraceLimit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static stackTraceLimit: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Error.stackTraceLimit
inheritedMethods:
  - name: captureStackTrace(object, Function)
    uid: botbuilder.StatusCodeError.captureStackTrace
    package: botbuilder
    summary: Create .stack property on a target object
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function captureStackTrace(targetObject: object, constructorOpt?:
        Function)
      parameters:
        - id: targetObject
          type: object
          description: ''
        - id: constructorOpt
          type: Function
          description: ''
    inheritanceDescription: <b>Inherited From</b> Error.captureStackTrace
extends: Error
