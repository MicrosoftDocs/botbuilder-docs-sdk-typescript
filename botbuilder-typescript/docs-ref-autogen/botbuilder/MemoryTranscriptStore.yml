### YamlMime:TSType
name: MemoryTranscriptStore
uid: botbuilder.MemoryTranscriptStore
package: botbuilder
summary: The memory transcript store stores transcripts in volatile memory in a Map.
fullName: MemoryTranscriptStore
remarks: >-
  Because this uses an unbounded volatile dictionary this should only be used
  for unit tests or

  non-production environments.
isDeprecated: false
type: class
methods:
  - name: deleteTranscript(string, string)
    uid: botbuilder.MemoryTranscriptStore.deleteTranscript
    package: botbuilder
    summary: Delete a specific conversation and all of it's activities.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteTranscript(channelId: string, conversationId: string):
        Promise<void>
      parameters:
        - id: channelId
          type: string
          description: Channel Id where conversation took place.
        - id: conversationId
          type: string
          description: Id of the conversation to delete.
      return:
        description: A promise representing the async operation.
        type: Promise&lt;void&gt;
  - name: getTranscriptActivities(string, string, string, Date)
    uid: botbuilder.MemoryTranscriptStore.getTranscriptActivities
    package: botbuilder
    summary: Get activities from the memory transcript store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date):
        Promise<PagedResult<Activity>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: conversationId
          type: string
          description: Conversation Id.
        - id: continuationToken
          type: string
          description: Continuation token to page through results.
        - id: startDate
          type: Date
          description: Earliest time to include.
      return:
        description: A page of matching activities.
        type: >-
          Promise&lt;<xref uid="botbuilder.PagedResult" />&lt;<xref
          uid="botbuilder.Activity" />&gt;&gt;
  - name: listTranscripts(string, string)
    uid: botbuilder.MemoryTranscriptStore.listTranscripts
    package: botbuilder
    summary: List conversations in the channelId.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listTranscripts(channelId: string, continuationToken?: string):
        Promise<PagedResult<TranscriptInfo>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: continuationToken
          type: string
          description: Continuation token to page through results.
      return:
        description: A page of conversations for a channel from the store.
        type: >-
          Promise&lt;<xref uid="botbuilder.PagedResult" />&lt;<xref
          uid="botbuilder.TranscriptInfo" />&gt;&gt;
  - name: logActivity(Activity)
    uid: botbuilder.MemoryTranscriptStore.logActivity
    package: botbuilder
    summary: Log an activity to the transcript.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function logActivity(activity: Activity): void | Promise<void>'
      parameters:
        - id: activity
          type: <xref uid="botbuilder.Activity" />
          description: Activity to log.
      return:
        description: A promise representing the async operation.
        type: void | Promise&lt;void&gt;
