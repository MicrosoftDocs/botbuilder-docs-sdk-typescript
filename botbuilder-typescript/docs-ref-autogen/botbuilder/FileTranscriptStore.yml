### YamlMime:TSType
name: FileTranscriptStore
uid: botbuilder.FileTranscriptStore
package: botbuilder
summary: >-
  The file transcript store stores transcripts in file system with each activity
  as a file.
fullName: FileTranscriptStore
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: FileTranscriptStore(string)
    uid: botbuilder.FileTranscriptStore.constructor
    package: botbuilder
    summary: Creates an instance of FileTranscriptStore.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new FileTranscriptStore(folder: string)'
      parameters:
        - id: folder
          type: string
          description: |
            Root folder where transcript will be stored.
methods:
  - name: 'deleteTranscript(string, string)'
    uid: botbuilder.FileTranscriptStore.deleteTranscript
    package: botbuilder
    summary: Delete a conversation and all of it's activities.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteTranscript(channelId: string, conversationId: string)'
      parameters:
        - id: channelId
          type: string
          description: Channel Id where conversation took place.
        - id: conversationId
          type: string
          description: |
            Id of the conversation to delete.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getTranscriptActivities(string, string, string, Date)'
    uid: botbuilder.FileTranscriptStore.getTranscriptActivities
    package: botbuilder
    summary: >-
      Get all activities associated with a conversation id (aka get the
      transcript).
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date)
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: conversationId
          type: string
          description: Conversation Id.
        - id: continuationToken
          type: string
          description: (Optional) Continuation token to page through results.
        - id: startDate
          type: Date
          description: |
            (Optional) Earliest time to include.
      return:
        type: Promise&lt;PagedResult&lt;Activity&gt;&gt;
        description: ''
  - name: 'listTranscripts(string, string)'
    uid: botbuilder.FileTranscriptStore.listTranscripts
    package: botbuilder
    summary: List all the logged conversations for a given channelId.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listTranscripts(channelId: string, continuationToken?: string)'
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: continuationToken
          type: string
          description: |
            (Optional) Continuation token to page through results.
      return:
        type: Promise&lt;PagedResult&lt;TranscriptInfo&gt;&gt;
        description: ''
  - name: logActivity(Activity)
    uid: botbuilder.FileTranscriptStore.logActivity
    package: botbuilder
    summary: Log an activity to the transcript.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function logActivity(activity: Activity)'
      parameters:
        - id: activity
          type: Activity
          description: |
            Activity being logged.
      return:
        type: Promise&lt;void&gt;
        description: ''
