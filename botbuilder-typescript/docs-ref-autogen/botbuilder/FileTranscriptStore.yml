### YamlMime:UniversalReference
items:
  - uid: botbuilder.FileTranscriptStore
    name: FileTranscriptStore
    fullName: FileTranscriptStore
    children:
      - botbuilder.FileTranscriptStore.deleteTranscript
      - botbuilder.FileTranscriptStore.constructor
      - botbuilder.FileTranscriptStore.getTranscriptActivities
      - botbuilder.FileTranscriptStore.listTranscripts
      - botbuilder.FileTranscriptStore.logActivity
    langs:
      - typeScript
    type: class
    summary: >-
      The file transcript store stores transcripts in file system with each
      activity as a file.
    package: botbuilder
    remarks: >-
      This class provides an interface to log all incoming and outgoing
      activities to the filesystem.

      It implements the features necessary to work alongside the
      TranscriptLoggerMiddleware plugin.

      When used in concert, your bot will automatically log all conversations.


      Below is the boilerplate code needed to use this in your app:

      ```javascript

      const { FileTranscriptStore, TranscriptLoggerMiddleware } =
      require('botbuilder');


      adapter.use(new TranscriptLoggerMiddleware(new
      FileTranscriptStore(__dirname + '/transcripts/')));

      ```
  - uid: botbuilder.FileTranscriptStore.deleteTranscript
    name: 'deleteTranscript(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a conversation and all of it's activities.
    syntax:
      content: 'function deleteTranscript(channelId: string, conversationId: string)'
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id where conversation took place.
        - id: conversationId
          type:
            - string
          description: |
            Id of the conversation to delete.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.constructor
    name: FileTranscriptStore(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of FileTranscriptStore.
    syntax:
      content: 'new FileTranscriptStore(folder: string)'
      parameters:
        - id: folder
          type:
            - string
          description: |
            Root folder where transcript will be stored.
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.getTranscriptActivities
    name: 'getTranscriptActivities(string, string, string, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get all activities associated with a conversation id (aka get the
      transcript).
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date)
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id.
        - id: conversationId
          type:
            - string
          description: Conversation Id.
        - id: continuationToken
          type:
            - string
          description: (Optional) Continuation token to page through results.
          optional: true
        - id: startDate
          type:
            - Date
          description: |
            (Optional) Earliest time to include.
          optional: true
      return:
        type:
          - Promise<PagedResult<Activity>>
        description: ''
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.listTranscripts
    name: 'listTranscripts(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all the logged conversations for a given channelId.
    syntax:
      content: 'function listTranscripts(channelId: string, continuationToken?: string)'
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id.
        - id: continuationToken
          type:
            - string
          description: |
            (Optional) Continuation token to page through results.
          optional: true
      return:
        type:
          - Promise<PagedResult<TranscriptInfo>>
        description: ''
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.logActivity
    name: logActivity(Activity)
    children: []
    type: method
    langs:
      - typeScript
    summary: Log an activity to the transcript.
    syntax:
      content: 'function logActivity(activity: Activity)'
      parameters:
        - id: activity
          type:
            - Activity
          description: |
            Activity being logged.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder
