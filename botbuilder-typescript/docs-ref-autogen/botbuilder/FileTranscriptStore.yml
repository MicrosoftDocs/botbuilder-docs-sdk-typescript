### YamlMime:UniversalReference
items:
  - uid: botbuilder.FileTranscriptStore
    name: FileTranscriptStore
    fullName: FileTranscriptStore
    children:
      - botbuilder.FileTranscriptStore.deleteTranscript
      - botbuilder.FileTranscriptStore.constructor
      - botbuilder.FileTranscriptStore.getTranscriptActivities
      - botbuilder.FileTranscriptStore.listTranscripts
      - botbuilder.FileTranscriptStore.logActivity
    langs:
      - typeScript
    type: class
    summary: >-
      The file transcript store stores transcripts in file system with each
      activity as a file.
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.deleteTranscript
    name: deleteTranscript
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a specific conversation and all of it's activities.
    syntax:
      content: 'function deleteTranscript(channelId: string, conversationId: string)'
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id where conversation took place.
        - id: conversationId
          type:
            - string
          description: |
            Id of the conversation to delete.
      return:
        type:
          - Promise<void>
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.constructor
    name: FileTranscriptStore
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of FileTranscriptStore
    syntax:
      content: 'new FileTranscriptStore(folder: string)'
      parameters:
        - id: folder
          type:
            - string
          description: |
            Root folder where transcript will be stored.
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.getTranscriptActivities
    name: getTranscriptActivities
    children: []
    type: method
    langs:
      - typeScript
    summary: Get activities for a conversation (Aka the transcript)
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date)
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id.
        - id: conversationId
          type:
            - string
          description: Conversation Id.
        - id: continuationToken
          type:
            - string
          description: Continuatuation token to page through results.
          optional: true
        - id: startDate
          type:
            - Date
          description: |
            Earliest time to include.
          optional: true
      return:
        type:
          - Promise<PagedResult<Activity>>
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.listTranscripts
    name: listTranscripts
    children: []
    type: method
    langs:
      - typeScript
    summary: List conversations in the channelId.
    syntax:
      content: 'function listTranscripts(channelId: string, continuationToken?: string)'
      parameters:
        - id: channelId
          type:
            - string
          description: Channel Id.
        - id: continuationToken
          type:
            - string
          description: |
            Continuatuation token to page through results.
          optional: true
      return:
        type:
          - Promise<PagedResult<TranscriptInfo>>
    package: botbuilder
  - uid: botbuilder.FileTranscriptStore.logActivity
    name: logActivity
    children: []
    type: method
    langs:
      - typeScript
    summary: Log an activity to the transcript.
    syntax:
      content: 'function logActivity(activity: Activity)'
      parameters:
        - id: activity
          type:
            - Activity
          description: |
            Activity being logged.
      return:
        type:
          - void | Promise<void>
    package: botbuilder
