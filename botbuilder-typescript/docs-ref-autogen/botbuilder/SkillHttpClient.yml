### YamlMime:TSType
name: SkillHttpClient
uid: botbuilder.SkillHttpClient
package: botbuilder
summary: >-
  A BotFrameworkHttpClient specialized for Skills that encapsulates Conversation
  ID generation.
fullName: SkillHttpClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      SkillHttpClient(ICredentialProvider, SkillConversationIdFactoryBase,
      string)
    uid: botbuilder.SkillHttpClient.constructor
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SkillHttpClient(credentialProvider: ICredentialProvider,
        conversationIdFactory: SkillConversationIdFactoryBase, channelService?:
        string)
      parameters:
        - id: credentialProvider
          type: ICredentialProvider
          description: ''
        - id: conversationIdFactory
          type: SkillConversationIdFactoryBase
          description: ''
        - id: channelService
          type: string
          description: ''
methods:
  - name: 'postActivity(string, string, string, string, string, Activity)'
    uid: botbuilder.SkillHttpClient.postActivity_1
    package: botbuilder
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function postActivity(fromBotId: string, toBotId: string, toUrl: string,
        serviceUrl: string, conversationId: string, activity: Activity)
      parameters:
        - id: fromBotId
          type: string
          description: ''
        - id: toBotId
          type: string
          description: ''
        - id: toUrl
          type: string
          description: ''
        - id: serviceUrl
          type: string
          description: ''
        - id: conversationId
          type: string
          description: ''
        - id: activity
          type: Activity
          description: ''
      return:
        type: Promise&lt;InvokeResponse&gt;
        description: ''
  - name: 'postActivity<T>(string, string, string, string, string, Activity)'
    uid: botbuilder.SkillHttpClient.postActivity
    package: botbuilder
    summary: Forwards an activity to a another bot.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function postActivity<T>(fromBotId: string, toBotId: string, toUrl:
        string, serviceUrl: string, conversationId: string, activity: Activity)
      parameters:
        - id: fromBotId
          type: string
          description: The MicrosoftAppId of the bot sending the activity.
        - id: toBotId
          type: string
          description: The MicrosoftAppId of the bot receiving the activity.
        - id: toUrl
          type: string
          description: The URL of the bot receiving the activity.
        - id: serviceUrl
          type: string
          description: The callback Url for the skill host.
        - id: conversationId
          type: string
          description: A conversation ID to use for the conversation with the skill.
        - id: activity
          type: Activity
          description: |
            Activity to forward.
      return:
        type: Promise&lt;InvokeResponse&lt;T&gt;&gt;
        description: ''
  - name: 'postToSkill(string, BotFrameworkSkill, string, Activity)'
    uid: botbuilder.SkillHttpClient.postToSkill_1
    package: botbuilder
    summary: >-
      Uses the SkillConversationIdFactory to create or retrieve a Skill
      Conversation Id, and sends the activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function postToSkill(fromBotId: string, toSkill: BotFrameworkSkill,
        callbackUrl: string, activity: Activity)
      parameters:
        - id: fromBotId
          type: string
          description: The MicrosoftAppId of the bot sending the activity.
        - id: toSkill
          type: BotFrameworkSkill
          description: The skill to create the Conversation Id for.
        - id: callbackUrl
          type: string
          description: The callback Url for the skill host.
        - id: activity
          type: Activity
          description: |
            The activity to send.
      return:
        type: Promise&lt;InvokeResponse&gt;
        description: ''
  - name: 'postToSkill<T>(string, string, BotFrameworkSkill, string, Activity)'
    uid: botbuilder.SkillHttpClient.postToSkill
    package: botbuilder
    summary: >-
      Uses the SkillConversationIdFactory to create or retrieve a Skill
      Conversation Id, and sends the activity.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function postToSkill<T>(originatingAudience: string, fromBotId: string,
        toSkill: BotFrameworkSkill, callbackUrl: string, activity: Activity)
      parameters:
        - id: originatingAudience
          type: string
          description: >-
            The OAuth audience scope, used during token retrieval. (Either
            https://api.botframework.com or bot app id.)
        - id: fromBotId
          type: string
          description: The MicrosoftAppId of the bot sending the activity.
        - id: toSkill
          type: BotFrameworkSkill
          description: The skill to create the Conversation Id for.
        - id: callbackUrl
          type: string
          description: The callback Url for the skill host.
        - id: activity
          type: Activity
          description: |
            The activity to send.
      return:
        type: Promise&lt;InvokeResponse&lt;T&gt;&gt;
        description: ''
extends: <xref uid="botbuilder.BotFrameworkHttpClient" />
