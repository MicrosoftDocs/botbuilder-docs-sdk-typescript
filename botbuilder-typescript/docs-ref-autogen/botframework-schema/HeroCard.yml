### YamlMime:UniversalReference
items:
  - uid: botframework-schema.HeroCard
    name: HeroCard
    fullName: HeroCard
    children:
      - botframework-schema.HeroCard.buttons
      - botframework-schema.HeroCard.images
      - botframework-schema.HeroCard.subtitle
      - botframework-schema.HeroCard.tap
      - botframework-schema.HeroCard.text
      - botframework-schema.HeroCard.title
    langs:
      - typeScript
    type: interface
    summary: 'A Hero card (card with a single, large image)'
    package: botframework-schema
  - uid: botframework-schema.HeroCard.buttons
    name: buttons
    fullName: buttons
    children: []
    langs:
      - typeScript
    type: property
    summary: Set of actions applicable to the current card
    syntax:
      content: 'buttons: CardAction[]'
      return:
        type:
          - 'botframework-schema.CardAction[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.HeroCard.images
    name: images
    fullName: images
    children: []
    langs:
      - typeScript
    type: property
    summary: Array of images for the card
    syntax:
      content: 'images: CardImage[]'
      return:
        type:
          - 'botframework-schema.CardImage[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.HeroCard.subtitle
    name: subtitle
    fullName: subtitle
    children: []
    langs:
      - typeScript
    type: property
    summary: Subtitle of the card
    syntax:
      content: 'subtitle: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.HeroCard.tap
    name: tap
    fullName: tap
    children: []
    langs:
      - typeScript
    type: property
    summary: This action will be activated when user taps on the card itself
    syntax:
      content: 'tap: CardAction'
      return:
        type:
          - botframework-schema.CardAction
        description: ''
    package: botframework-schema
  - uid: botframework-schema.HeroCard.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: Text for the card
    syntax:
      content: 'text: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.HeroCard.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: Title of the card
    syntax:
      content: 'title: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
references:
  - uid: 'botframework-schema.CardAction[]'
    name: 'CardAction[]'
    spec.typeScript:
      - name: CardAction
        fullName: CardAction
        uid: botframework-schema.CardAction
      - name: '[]'
        fullName: '[]'
  - uid: 'botframework-schema.CardImage[]'
    name: 'CardImage[]'
    spec.typeScript:
      - name: CardImage
        fullName: CardImage
        uid: botframework-schema.CardImage
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.CardAction
    name: CardAction
    spec.typeScript:
      - name: CardAction
        fullName: CardAction
        uid: botframework-schema.CardAction
