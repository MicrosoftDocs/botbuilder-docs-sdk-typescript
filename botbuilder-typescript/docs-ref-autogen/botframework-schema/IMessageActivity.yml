### YamlMime:UniversalReference
items:
  - uid: botframework-schema.IMessageActivity
    name: IMessageActivity
    fullName: IMessageActivity
    children:
      - botframework-schema.IMessageActivity.attachmentLayout
      - botframework-schema.IMessageActivity.attachments
      - botframework-schema.IMessageActivity.channelData
      - botframework-schema.IMessageActivity.channelId
      - botframework-schema.IMessageActivity.conversation
      - botframework-schema.IMessageActivity.deliveryMode
      - botframework-schema.IMessageActivity.entities
      - botframework-schema.IMessageActivity.expiration
      - botframework-schema.IMessageActivity.from
      - botframework-schema.IMessageActivity.id
      - botframework-schema.IMessageActivity.importance
      - botframework-schema.IMessageActivity.inputHint
      - botframework-schema.IMessageActivity.locale
      - botframework-schema.IMessageActivity.localTimestamp
      - botframework-schema.IMessageActivity.recipient
      - botframework-schema.IMessageActivity.replyToId
      - botframework-schema.IMessageActivity.serviceUrl
      - botframework-schema.IMessageActivity.speak
      - botframework-schema.IMessageActivity.suggestedActions
      - botframework-schema.IMessageActivity.summary
      - botframework-schema.IMessageActivity.text
      - botframework-schema.IMessageActivity.textFormat
      - botframework-schema.IMessageActivity.timestamp
      - botframework-schema.IMessageActivity.type
      - botframework-schema.IMessageActivity.value
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: botframework-schema.IActivity
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.attachmentLayout
    name: attachmentLayout
    fullName: attachmentLayout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The layout hint for multiple attachments. Default: list. Possible values
      include: 'list',

      'carousel'
    optional: true
    syntax:
      content: 'attachmentLayout?: AttachmentLayoutTypes | string'
      return:
        type:
          - botframework-schema.AttachmentLayoutTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.attachments
    name: attachments
    fullName: attachments
    children: []
    langs:
      - typeScript
    type: property
    summary: Attachments
    optional: true
    syntax:
      content: 'attachments?: Attachment[]'
      return:
        type:
          - 'botframework-schema.Attachment[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.channelData
    name: channelData
    fullName: channelData
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains channel-specific content.
    optional: true
    syntax:
      content: 'channelData?: any'
      return:
        type:
          - any
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.channelId
    name: channelId
    fullName: channelId
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains an ID that uniquely identifies the channel. Set by the channel.
    syntax:
      content: 'channelId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.conversation
    name: conversation
    fullName: conversation
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the conversation to which the activity belongs.
    syntax:
      content: 'conversation: ConversationAccount'
      return:
        type:
          - botframework-schema.ConversationAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.deliveryMode
    name: deliveryMode
    fullName: deliveryMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A delivery hint to signal to the recipient alternate delivery paths for
      the activity.

      The default delivery mode is "default". Possible values include: 'normal',
      'notification'
    optional: true
    syntax:
      content: 'deliveryMode?: DeliveryModes | string'
      return:
        type:
          - botframework-schema.DeliveryModes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.entities
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: Represents the entities that were mentioned in the message.
    optional: true
    syntax:
      content: 'entities?: Entity[]'
      return:
        type:
          - 'botframework-schema.Entity[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.expiration
    name: expiration
    fullName: expiration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The time at which the activity should be considered to be "expired" and
      should not be

      presented to the recipient.
    optional: true
    syntax:
      content: 'expiration?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.from
    name: from
    fullName: from
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the sender of the message.
    syntax:
      content: 'from: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains an ID that uniquely identifies the activity on the channel.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.importance
    name: importance
    fullName: importance
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The importance of the activity. Possible values include: 'low', 'normal',
      'high'
    optional: true
    syntax:
      content: 'importance?: ActivityImportance | string'
      return:
        type:
          - botframework-schema.ActivityImportance | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.inputHint
    name: inputHint
    fullName: inputHint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether your bot is accepting,

      expecting, or ignoring user input after the message is delivered to the
      client. Possible

      values include: 'acceptingInput', 'ignoringInput', 'expectingInput'
    optional: true
    syntax:
      content: 'inputHint?: InputHints | string'
      return:
        type:
          - botframework-schema.InputHints | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.locale
    name: locale
    fullName: locale
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A locale name for the contents of the text field.

      The locale name is a combination of an ISO 639 two- or three-letter
      culture code associated

      with a language

      and an ISO 3166 two-letter subculture code associated with a country or
      region.

      The locale name can also correspond to a valid BCP-47 language tag.
    optional: true
    syntax:
      content: 'locale?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.localTimestamp
    name: localTimestamp
    fullName: localTimestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Contains the local date and time of the message, expressed in ISO-8601
      format.

      For example, 2016-09-23T13:07:49.4714686-07:00.
    optional: true
    syntax:
      content: 'localTimestamp?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.recipient
    name: recipient
    fullName: recipient
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the recipient of the message.
    syntax:
      content: 'recipient: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.replyToId
    name: replyToId
    fullName: replyToId
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains the ID of the message to which this message is a reply.
    optional: true
    syntax:
      content: 'replyToId?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.serviceUrl
    name: serviceUrl
    fullName: serviceUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the URL that specifies the channel's service endpoint. Set by the
      channel.
    syntax:
      content: 'serviceUrl: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.speak
    name: speak
    fullName: speak
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to speak.
    optional: true
    syntax:
      content: 'speak?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.suggestedActions
    name: suggestedActions
    fullName: suggestedActions
    children: []
    langs:
      - typeScript
    type: property
    summary: The suggested actions for the activity.
    optional: true
    syntax:
      content: 'suggestedActions?: SuggestedActions'
      return:
        type:
          - botframework-schema.SuggestedActions
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.summary
    name: summary
    fullName: summary
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to display if the channel cannot render cards.
    optional: true
    syntax:
      content: 'summary?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: The text content of the message.
    syntax:
      content: 'text: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.textFormat
    name: textFormat
    fullName: textFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Format of text fields Default:markdown. Possible values include:
      'markdown', 'plain', 'xml'
    optional: true
    syntax:
      content: 'textFormat?: TextFormatTypes | string'
      return:
        type:
          - botframework-schema.TextFormatTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.timestamp
    name: timestamp
    fullName: timestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the date and time that the message was sent, in UTC, expressed in
      ISO-8601 format.
    optional: true
    syntax:
      content: 'timestamp?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains the activity type 'iActivity'
    syntax:
      content: 'type: ActivityTypes | string'
      return:
        type:
          - botframework-schema.ActivityTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.IMessageActivity.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: A value that is associated with the activity.
    optional: true
    syntax:
      content: 'value?: any'
      return:
        type:
          - any
        description: ''
    package: botframework-schema
references:
  - uid: botframework-schema.IActivity
    name: IActivity
    spec.typeScript:
      - name: IActivity
        fullName: IActivity
        uid: botframework-schema.IActivity
  - uid: botframework-schema.AttachmentLayoutTypes | string
    name: AttachmentLayoutTypes | string
    spec.typeScript:
      - name: AttachmentLayoutTypes
        fullName: AttachmentLayoutTypes
        uid: botframework-schema.AttachmentLayoutTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.Attachment[]'
    name: 'Attachment[]'
    spec.typeScript:
      - name: Attachment
        fullName: Attachment
        uid: botframework-schema.Attachment
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ConversationAccount
    name: ConversationAccount
    spec.typeScript:
      - name: ConversationAccount
        fullName: ConversationAccount
        uid: botframework-schema.ConversationAccount
  - uid: botframework-schema.DeliveryModes | string
    name: DeliveryModes | string
    spec.typeScript:
      - name: DeliveryModes
        fullName: DeliveryModes
        uid: botframework-schema.DeliveryModes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.Entity[]'
    name: 'Entity[]'
    spec.typeScript:
      - name: Entity
        fullName: Entity
        uid: botframework-schema.Entity
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ChannelAccount
    name: ChannelAccount
    spec.typeScript:
      - name: ChannelAccount
        fullName: ChannelAccount
        uid: botframework-schema.ChannelAccount
  - uid: botframework-schema.ActivityImportance | string
    name: ActivityImportance | string
    spec.typeScript:
      - name: ActivityImportance
        fullName: ActivityImportance
        uid: botframework-schema.ActivityImportance
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.InputHints | string
    name: InputHints | string
    spec.typeScript:
      - name: InputHints
        fullName: InputHints
        uid: botframework-schema.InputHints
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.SuggestedActions
    name: SuggestedActions
    spec.typeScript:
      - name: SuggestedActions
        fullName: SuggestedActions
        uid: botframework-schema.SuggestedActions
  - uid: botframework-schema.TextFormatTypes | string
    name: TextFormatTypes | string
    spec.typeScript:
      - name: TextFormatTypes
        fullName: TextFormatTypes
        uid: botframework-schema.TextFormatTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.ActivityTypes | string
    name: ActivityTypes | string
    spec.typeScript:
      - name: ActivityTypes
        fullName: ActivityTypes
        uid: botframework-schema.ActivityTypes
      - name: ' | string'
        fullName: ' | string'
