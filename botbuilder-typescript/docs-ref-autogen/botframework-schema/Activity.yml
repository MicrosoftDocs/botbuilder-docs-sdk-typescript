### YamlMime:UniversalReference
items:
  - uid: botframework-schema.Activity
    name: Activity
    fullName: Activity
    children:
      - botframework-schema.Activity.action
      - botframework-schema.Activity.attachmentLayout
      - botframework-schema.Activity.attachments
      - botframework-schema.Activity.callerId
      - botframework-schema.Activity.channelData
      - botframework-schema.Activity.channelId
      - botframework-schema.Activity.code
      - botframework-schema.Activity.conversation
      - botframework-schema.Activity.deliveryMode
      - botframework-schema.Activity.entities
      - botframework-schema.Activity.expiration
      - botframework-schema.Activity.from
      - botframework-schema.Activity.historyDisclosed
      - botframework-schema.Activity.id
      - botframework-schema.Activity.importance
      - botframework-schema.Activity.inputHint
      - botframework-schema.Activity.label
      - botframework-schema.Activity.listenFor
      - botframework-schema.Activity.locale
      - botframework-schema.Activity.localTimestamp
      - botframework-schema.Activity.localTimezone
      - botframework-schema.Activity.membersAdded
      - botframework-schema.Activity.membersRemoved
      - botframework-schema.Activity.name
      - botframework-schema.Activity.reactionsAdded
      - botframework-schema.Activity.reactionsRemoved
      - botframework-schema.Activity.recipient
      - botframework-schema.Activity.relatesTo
      - botframework-schema.Activity.replyToId
      - botframework-schema.Activity.semanticAction
      - botframework-schema.Activity.serviceUrl
      - botframework-schema.Activity.speak
      - botframework-schema.Activity.suggestedActions
      - botframework-schema.Activity.summary
      - botframework-schema.Activity.text
      - botframework-schema.Activity.textFormat
      - botframework-schema.Activity.textHighlights
      - botframework-schema.Activity.timestamp
      - botframework-schema.Activity.topicName
      - botframework-schema.Activity.type
      - botframework-schema.Activity.value
      - botframework-schema.Activity.valueType
    langs:
      - typeScript
    type: interface
    summary: >-
      An Activity is the basic communication type for the Bot Framework 3.0
      protocol.
    package: botframework-schema
  - uid: botframework-schema.Activity.action
    name: action
    fullName: action
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether the recipient of a contactRelationUpdate was added or
      removed from the

      sender's contact list.
    optional: true
    syntax:
      content: 'action?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.attachmentLayout
    name: attachmentLayout
    fullName: attachmentLayout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The layout hint for multiple attachments. Default: list. Possible values
      include: 'list',

      'carousel'
    optional: true
    syntax:
      content: 'attachmentLayout?: AttachmentLayoutTypes | string'
      return:
        type:
          - botframework-schema.AttachmentLayoutTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.attachments
    name: attachments
    fullName: attachments
    children: []
    langs:
      - typeScript
    type: property
    summary: Attachments
    optional: true
    syntax:
      content: 'attachments?: Attachment[]'
      return:
        type:
          - 'botframework-schema.Attachment[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.callerId
    name: callerId
    fullName: callerId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string containing an IRI identifying the caller of a bot. This field is
      not intended to be transmitted over

      the wire, but is instead populated by bots and clients based on
      cryptographically verifiable data that asserts

      the identity of the callers (e.g. tokens).
    syntax:
      content: 'callerId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.channelData
    name: channelData
    fullName: channelData
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains channel-specific content.
    optional: true
    syntax:
      content: 'channelData?: any'
      return:
        type:
          - any
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.channelId
    name: channelId
    fullName: channelId
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains an ID that uniquely identifies the channel. Set by the channel.
    syntax:
      content: 'channelId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.code
    name: code
    fullName: code
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The a code for endOfConversation activities that indicates why the
      conversation ended.

      Possible values include: 'unknown', 'completedSuccessfully',
      'userCancelled', 'botTimedOut',

      'botIssuedInvalidMessage', 'channelFailed'
    optional: true
    syntax:
      content: 'code?: EndOfConversationCodes | string'
      return:
        type:
          - botframework-schema.EndOfConversationCodes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.conversation
    name: conversation
    fullName: conversation
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the conversation to which the activity belongs.
    syntax:
      content: 'conversation: ConversationAccount'
      return:
        type:
          - botframework-schema.ConversationAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.deliveryMode
    name: deliveryMode
    fullName: deliveryMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A delivery hint to signal to the recipient alternate delivery paths for
      the activity.

      The default delivery mode is "default". Possible values include: 'normal',
      'notification'
    optional: true
    syntax:
      content: 'deliveryMode?: DeliveryModes | string'
      return:
        type:
          - botframework-schema.DeliveryModes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.entities
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: Represents the entities that were mentioned in the message.
    optional: true
    syntax:
      content: 'entities?: Entity[]'
      return:
        type:
          - 'botframework-schema.Entity[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.expiration
    name: expiration
    fullName: expiration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The time at which the activity should be considered to be "expired" and
      should not be

      presented to the recipient.
    optional: true
    syntax:
      content: 'expiration?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.from
    name: from
    fullName: from
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the sender of the message.
    syntax:
      content: 'from: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.historyDisclosed
    name: historyDisclosed
    fullName: historyDisclosed
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates whether the prior history of the channel is disclosed.
    optional: true
    syntax:
      content: 'historyDisclosed?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains an ID that uniquely identifies the activity on the channel.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.importance
    name: importance
    fullName: importance
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The importance of the activity. Possible values include: 'low', 'normal',
      'high'
    optional: true
    syntax:
      content: 'importance?: ActivityImportance | string'
      return:
        type:
          - botframework-schema.ActivityImportance | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.inputHint
    name: inputHint
    fullName: inputHint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether your bot is accepting,

      expecting, or ignoring user input after the message is delivered to the
      client. Possible

      values include: 'acceptingInput', 'ignoringInput', 'expectingInput'
    optional: true
    syntax:
      content: 'inputHint?: InputHints | string'
      return:
        type:
          - botframework-schema.InputHints | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: A descriptive label for the activity.
    syntax:
      content: 'label: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.listenFor
    name: listenFor
    fullName: listenFor
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      List of phrases and references that speech and language priming systems
      should listen for
    syntax:
      content: 'listenFor: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.locale
    name: locale
    fullName: locale
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A locale name for the contents of the text field.

      The locale name is a combination of an ISO 639 two- or three-letter
      culture code associated

      with a language

      and an ISO 3166 two-letter subculture code associated with a country or
      region.

      The locale name can also correspond to a valid BCP-47 language tag.
    optional: true
    syntax:
      content: 'locale?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.localTimestamp
    name: localTimestamp
    fullName: localTimestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the local date and time of the message, expressed in ISO-8601
      format.

      For example, 2016-09-23T13:07:49.4714686-07:00.
    optional: true
    syntax:
      content: 'localTimestamp?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.localTimezone
    name: localTimezone
    fullName: localTimezone
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the name of the local timezone of the message, expressed in IANA
      Time Zone database format.

      For example, America/Los_Angeles.
    syntax:
      content: 'localTimezone: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.membersAdded
    name: membersAdded
    fullName: membersAdded
    children: []
    langs:
      - typeScript
    type: property
    summary: The collection of members added to the conversation.
    optional: true
    syntax:
      content: 'membersAdded?: ChannelAccount[]'
      return:
        type:
          - 'botframework-schema.ChannelAccount[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.membersRemoved
    name: membersRemoved
    fullName: membersRemoved
    children: []
    langs:
      - typeScript
    type: property
    summary: The collection of members removed from the conversation.
    optional: true
    syntax:
      content: 'membersRemoved?: ChannelAccount[]'
      return:
        type:
          - 'botframework-schema.ChannelAccount[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: The name of the operation associated with an invoke or event activity.
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.reactionsAdded
    name: reactionsAdded
    fullName: reactionsAdded
    children: []
    langs:
      - typeScript
    type: property
    summary: The collection of reactions added to the conversation.
    optional: true
    syntax:
      content: 'reactionsAdded?: MessageReaction[]'
      return:
        type:
          - 'botframework-schema.MessageReaction[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.reactionsRemoved
    name: reactionsRemoved
    fullName: reactionsRemoved
    children: []
    langs:
      - typeScript
    type: property
    summary: The collection of reactions removed from the conversation.
    optional: true
    syntax:
      content: 'reactionsRemoved?: MessageReaction[]'
      return:
        type:
          - 'botframework-schema.MessageReaction[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.recipient
    name: recipient
    fullName: recipient
    children: []
    langs:
      - typeScript
    type: property
    summary: Identifies the recipient of the message.
    syntax:
      content: 'recipient: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.relatesTo
    name: relatesTo
    fullName: relatesTo
    children: []
    langs:
      - typeScript
    type: property
    summary: A reference to another conversation or activity.
    optional: true
    syntax:
      content: 'relatesTo?: ConversationReference'
      return:
        type:
          - botframework-schema.ConversationReference
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.replyToId
    name: replyToId
    fullName: replyToId
    children: []
    langs:
      - typeScript
    type: property
    summary: Contains the ID of the message to which this message is a reply.
    optional: true
    syntax:
      content: 'replyToId?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.semanticAction
    name: semanticAction
    fullName: semanticAction
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional programmatic action accompanying this request
    optional: true
    syntax:
      content: 'semanticAction?: SemanticAction'
      return:
        type:
          - botframework-schema.SemanticAction
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.serviceUrl
    name: serviceUrl
    fullName: serviceUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the URL that specifies the channel's service endpoint. Set by the
      channel.
    syntax:
      content: 'serviceUrl: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.speak
    name: speak
    fullName: speak
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to speak.
    optional: true
    syntax:
      content: 'speak?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.suggestedActions
    name: suggestedActions
    fullName: suggestedActions
    children: []
    langs:
      - typeScript
    type: property
    summary: The suggested actions for the activity.
    optional: true
    syntax:
      content: 'suggestedActions?: SuggestedActions'
      return:
        type:
          - botframework-schema.SuggestedActions
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.summary
    name: summary
    fullName: summary
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to display if the channel cannot render cards.
    optional: true
    syntax:
      content: 'summary?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: The text content of the message.
    syntax:
      content: 'text: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.textFormat
    name: textFormat
    fullName: textFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Format of text fields Default:markdown. Possible values include:
      'markdown', 'plain', 'xml'
    optional: true
    syntax:
      content: 'textFormat?: TextFormatTypes | string'
      return:
        type:
          - botframework-schema.TextFormatTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.textHighlights
    name: textHighlights
    fullName: textHighlights
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The collection of text fragments to highlight when the activity contains a
      ReplyToId value.
    optional: true
    syntax:
      content: 'textHighlights?: TextHighlight[]'
      return:
        type:
          - 'botframework-schema.TextHighlight[]'
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.timestamp
    name: timestamp
    fullName: timestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the date and time that the message was sent, in UTC, expressed in
      ISO-8601 format.
    optional: true
    syntax:
      content: 'timestamp?: Date'
      return:
        type:
          - Date
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.topicName
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: The updated topic name of the conversation.
    optional: true
    syntax:
      content: 'topicName?: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Contains the activity type. Possible values include: 'message',
      'contactRelationUpdate',

      'conversationUpdate', 'typing', 'endOfConversation', 'event', 'invoke',
      'deleteUserData',

      'messageUpdate', 'messageDelete', 'installationUpdate', 'messageReaction',
      'suggestion',

      'trace', 'handoff'
    syntax:
      content: 'type: ActivityTypes | string'
      return:
        type:
          - botframework-schema.ActivityTypes | string
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: A value that is associated with the activity.
    optional: true
    syntax:
      content: 'value?: any'
      return:
        type:
          - any
        description: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.valueType
    name: valueType
    fullName: valueType
    children: []
    langs:
      - typeScript
    type: property
    summary: The type of the activity's value object.
    syntax:
      content: 'valueType: string'
      return:
        type:
          - string
        description: ''
    package: botframework-schema
references:
  - uid: botframework-schema.AttachmentLayoutTypes | string
    name: AttachmentLayoutTypes | string
    spec.typeScript:
      - name: AttachmentLayoutTypes
        fullName: AttachmentLayoutTypes
        uid: botframework-schema.AttachmentLayoutTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.Attachment[]'
    name: 'Attachment[]'
    spec.typeScript:
      - name: Attachment
        fullName: Attachment
        uid: botframework-schema.Attachment
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.EndOfConversationCodes | string
    name: EndOfConversationCodes | string
    spec.typeScript:
      - name: EndOfConversationCodes
        fullName: EndOfConversationCodes
        uid: botframework-schema.EndOfConversationCodes
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.ConversationAccount
    name: ConversationAccount
    spec.typeScript:
      - name: ConversationAccount
        fullName: ConversationAccount
        uid: botframework-schema.ConversationAccount
  - uid: botframework-schema.DeliveryModes | string
    name: DeliveryModes | string
    spec.typeScript:
      - name: DeliveryModes
        fullName: DeliveryModes
        uid: botframework-schema.DeliveryModes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.Entity[]'
    name: 'Entity[]'
    spec.typeScript:
      - name: Entity
        fullName: Entity
        uid: botframework-schema.Entity
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ChannelAccount
    name: ChannelAccount
    spec.typeScript:
      - name: ChannelAccount
        fullName: ChannelAccount
        uid: botframework-schema.ChannelAccount
  - uid: botframework-schema.ActivityImportance | string
    name: ActivityImportance | string
    spec.typeScript:
      - name: ActivityImportance
        fullName: ActivityImportance
        uid: botframework-schema.ActivityImportance
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.InputHints | string
    name: InputHints | string
    spec.typeScript:
      - name: InputHints
        fullName: InputHints
        uid: botframework-schema.InputHints
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.ChannelAccount[]'
    name: 'ChannelAccount[]'
    spec.typeScript:
      - name: ChannelAccount
        fullName: ChannelAccount
        uid: botframework-schema.ChannelAccount
      - name: '[]'
        fullName: '[]'
  - uid: 'botframework-schema.MessageReaction[]'
    name: 'MessageReaction[]'
    spec.typeScript:
      - name: MessageReaction
        fullName: MessageReaction
        uid: botframework-schema.MessageReaction
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ConversationReference
    name: ConversationReference
    spec.typeScript:
      - name: ConversationReference
        fullName: ConversationReference
        uid: botframework-schema.ConversationReference
  - uid: botframework-schema.SemanticAction
    name: SemanticAction
    spec.typeScript:
      - name: SemanticAction
        fullName: SemanticAction
        uid: botframework-schema.SemanticAction
  - uid: botframework-schema.SuggestedActions
    name: SuggestedActions
    spec.typeScript:
      - name: SuggestedActions
        fullName: SuggestedActions
        uid: botframework-schema.SuggestedActions
  - uid: botframework-schema.TextFormatTypes | string
    name: TextFormatTypes | string
    spec.typeScript:
      - name: TextFormatTypes
        fullName: TextFormatTypes
        uid: botframework-schema.TextFormatTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.TextHighlight[]'
    name: 'TextHighlight[]'
    spec.typeScript:
      - name: TextHighlight
        fullName: TextHighlight
        uid: botframework-schema.TextHighlight
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ActivityTypes | string
    name: ActivityTypes | string
    spec.typeScript:
      - name: ActivityTypes
        fullName: ActivityTypes
        uid: botframework-schema.ActivityTypes
      - name: ' | string'
        fullName: ' | string'
