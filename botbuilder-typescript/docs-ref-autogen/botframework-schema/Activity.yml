### YamlMime:UniversalReference
items:
  - uid: botframework-schema.Activity
    name: Activity
    fullName: Activity
    children:
      - botframework-schema.Activity.action
      - botframework-schema.Activity.attachmentLayout
      - botframework-schema.Activity.attachments
      - botframework-schema.Activity.channelData
      - botframework-schema.Activity.channelId
      - botframework-schema.Activity.code
      - botframework-schema.Activity.conversation
      - botframework-schema.Activity.deliveryMode
      - botframework-schema.Activity.entities
      - botframework-schema.Activity.expiration
      - botframework-schema.Activity.from
      - botframework-schema.Activity.historyDisclosed
      - botframework-schema.Activity.id
      - botframework-schema.Activity.importance
      - botframework-schema.Activity.inputHint
      - botframework-schema.Activity.label
      - botframework-schema.Activity.locale
      - botframework-schema.Activity.localTimestamp
      - botframework-schema.Activity.membersAdded
      - botframework-schema.Activity.membersRemoved
      - botframework-schema.Activity.name
      - botframework-schema.Activity.reactionsAdded
      - botframework-schema.Activity.reactionsRemoved
      - botframework-schema.Activity.recipient
      - botframework-schema.Activity.relatesTo
      - botframework-schema.Activity.replyToId
      - botframework-schema.Activity.serviceUrl
      - botframework-schema.Activity.speak
      - botframework-schema.Activity.suggestedActions
      - botframework-schema.Activity.summary
      - botframework-schema.Activity.text
      - botframework-schema.Activity.textFormat
      - botframework-schema.Activity.textHighlights
      - botframework-schema.Activity.timestamp
      - botframework-schema.Activity.topicName
      - botframework-schema.Activity.type
      - botframework-schema.Activity.value
      - botframework-schema.Activity.valueType
    langs:
      - typeScript
    type: interface
    summary: ''
    package: botframework-schema
  - uid: botframework-schema.Activity.action
    name: action
    fullName: action
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'action?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.attachmentLayout
    name: attachmentLayout
    fullName: attachmentLayout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'attachmentLayout?: AttachmentLayoutTypes | string'
      return:
        type:
          - botframework-schema.AttachmentLayoutTypes | string
    package: botframework-schema
  - uid: botframework-schema.Activity.attachments
    name: attachments
    fullName: attachments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'attachments?: Attachment[]'
      return:
        type:
          - 'botframework-schema.Attachment[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.channelData
    name: channelData
    fullName: channelData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'channelData?: any'
      return:
        type:
          - any
    package: botframework-schema
  - uid: botframework-schema.Activity.channelId
    name: channelId
    fullName: channelId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'channelId: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.code
    name: code
    fullName: code
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'code?: EndOfConversationCodes | string'
      return:
        type:
          - botframework-schema.EndOfConversationCodes | string
    package: botframework-schema
  - uid: botframework-schema.Activity.conversation
    name: conversation
    fullName: conversation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'conversation: ConversationAccount'
      return:
        type:
          - botframework-schema.ConversationAccount
    package: botframework-schema
  - uid: botframework-schema.Activity.deliveryMode
    name: deliveryMode
    fullName: deliveryMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'deliveryMode?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.entities
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'entities?: Entity[]'
      return:
        type:
          - 'botframework-schema.Entity[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.expiration
    name: expiration
    fullName: expiration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'expiration?: Date'
      return:
        type:
          - Date
    package: botframework-schema
  - uid: botframework-schema.Activity.from
    name: from
    fullName: from
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'from: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
    package: botframework-schema
  - uid: botframework-schema.Activity.historyDisclosed
    name: historyDisclosed
    fullName: historyDisclosed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'historyDisclosed?: boolean'
      return:
        type:
          - boolean
    package: botframework-schema
  - uid: botframework-schema.Activity.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.importance
    name: importance
    fullName: importance
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'importance?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.inputHint
    name: inputHint
    fullName: inputHint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'inputHint?: InputHints | string'
      return:
        type:
          - botframework-schema.InputHints | string
    package: botframework-schema
  - uid: botframework-schema.Activity.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'label: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.locale
    name: locale
    fullName: locale
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'locale?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.localTimestamp
    name: localTimestamp
    fullName: localTimestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'localTimestamp?: Date'
      return:
        type:
          - Date
    package: botframework-schema
  - uid: botframework-schema.Activity.membersAdded
    name: membersAdded
    fullName: membersAdded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'membersAdded?: ChannelAccount[]'
      return:
        type:
          - 'botframework-schema.ChannelAccount[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.membersRemoved
    name: membersRemoved
    fullName: membersRemoved
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'membersRemoved?: ChannelAccount[]'
      return:
        type:
          - 'botframework-schema.ChannelAccount[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.reactionsAdded
    name: reactionsAdded
    fullName: reactionsAdded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'reactionsAdded?: MessageReaction[]'
      return:
        type:
          - 'botframework-schema.MessageReaction[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.reactionsRemoved
    name: reactionsRemoved
    fullName: reactionsRemoved
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'reactionsRemoved?: MessageReaction[]'
      return:
        type:
          - 'botframework-schema.MessageReaction[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.recipient
    name: recipient
    fullName: recipient
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'recipient: ChannelAccount'
      return:
        type:
          - botframework-schema.ChannelAccount
    package: botframework-schema
  - uid: botframework-schema.Activity.relatesTo
    name: relatesTo
    fullName: relatesTo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'relatesTo?: ConversationReference'
      return:
        type:
          - botframework-schema.ConversationReference
    package: botframework-schema
  - uid: botframework-schema.Activity.replyToId
    name: replyToId
    fullName: replyToId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'replyToId?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.serviceUrl
    name: serviceUrl
    fullName: serviceUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'serviceUrl: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.speak
    name: speak
    fullName: speak
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'speak?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.suggestedActions
    name: suggestedActions
    fullName: suggestedActions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'suggestedActions?: SuggestedActions'
      return:
        type:
          - botframework-schema.SuggestedActions
    package: botframework-schema
  - uid: botframework-schema.Activity.summary
    name: summary
    fullName: summary
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'summary?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'text: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.textFormat
    name: textFormat
    fullName: textFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'textFormat?: TextFormatTypes | string'
      return:
        type:
          - botframework-schema.TextFormatTypes | string
    package: botframework-schema
  - uid: botframework-schema.Activity.textHighlights
    name: textHighlights
    fullName: textHighlights
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'textHighlights?: TextHighlight[]'
      return:
        type:
          - 'botframework-schema.TextHighlight[]'
    package: botframework-schema
  - uid: botframework-schema.Activity.timestamp
    name: timestamp
    fullName: timestamp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timestamp?: Date'
      return:
        type:
          - Date
    package: botframework-schema
  - uid: botframework-schema.Activity.topicName
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'topicName?: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.Activity.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'type: ActivityTypes | string'
      return:
        type:
          - botframework-schema.ActivityTypes | string
    package: botframework-schema
  - uid: botframework-schema.Activity.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'value?: any'
      return:
        type:
          - any
    package: botframework-schema
  - uid: botframework-schema.Activity.valueType
    name: valueType
    fullName: valueType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'valueType: string'
      return:
        type:
          - string
    package: botframework-schema
references:
  - uid: botframework-schema.AttachmentLayoutTypes | string
    name: AttachmentLayoutTypes | string
    spec.typeScript:
      - name: AttachmentLayoutTypes
        fullName: AttachmentLayoutTypes
        uid: botframework-schema.AttachmentLayoutTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.Attachment[]'
    name: 'Attachment[]'
    spec.typeScript:
      - name: Attachment
        fullName: Attachment
        uid: botframework-schema.Attachment
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.EndOfConversationCodes | string
    name: EndOfConversationCodes | string
    spec.typeScript:
      - name: EndOfConversationCodes
        fullName: EndOfConversationCodes
        uid: botframework-schema.EndOfConversationCodes
      - name: ' | string'
        fullName: ' | string'
  - uid: botframework-schema.ConversationAccount
    name: ConversationAccount
    spec.typeScript:
      - name: ConversationAccount
        fullName: ConversationAccount
        uid: botframework-schema.ConversationAccount
  - uid: 'botframework-schema.Entity[]'
    name: 'Entity[]'
    spec.typeScript:
      - name: Entity
        fullName: Entity
        uid: botframework-schema.Entity
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ChannelAccount
    name: ChannelAccount
    spec.typeScript:
      - name: ChannelAccount
        fullName: ChannelAccount
        uid: botframework-schema.ChannelAccount
  - uid: botframework-schema.InputHints | string
    name: InputHints | string
    spec.typeScript:
      - name: InputHints
        fullName: InputHints
        uid: botframework-schema.InputHints
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.ChannelAccount[]'
    name: 'ChannelAccount[]'
    spec.typeScript:
      - name: ChannelAccount
        fullName: ChannelAccount
        uid: botframework-schema.ChannelAccount
      - name: '[]'
        fullName: '[]'
  - uid: 'botframework-schema.MessageReaction[]'
    name: 'MessageReaction[]'
    spec.typeScript:
      - name: MessageReaction
        fullName: MessageReaction
        uid: botframework-schema.MessageReaction
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ConversationReference
    name: ConversationReference
    spec.typeScript:
      - name: ConversationReference
        fullName: ConversationReference
        uid: botframework-schema.ConversationReference
  - uid: botframework-schema.SuggestedActions
    name: SuggestedActions
    spec.typeScript:
      - name: SuggestedActions
        fullName: SuggestedActions
        uid: botframework-schema.SuggestedActions
  - uid: botframework-schema.TextFormatTypes | string
    name: TextFormatTypes | string
    spec.typeScript:
      - name: TextFormatTypes
        fullName: TextFormatTypes
        uid: botframework-schema.TextFormatTypes
      - name: ' | string'
        fullName: ' | string'
  - uid: 'botframework-schema.TextHighlight[]'
    name: 'TextHighlight[]'
    spec.typeScript:
      - name: TextHighlight
        fullName: TextHighlight
        uid: botframework-schema.TextHighlight
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.ActivityTypes | string
    name: ActivityTypes | string
    spec.typeScript:
      - name: ActivityTypes
        fullName: ActivityTypes
        uid: botframework-schema.ActivityTypes
      - name: ' | string'
        fullName: ' | string'
