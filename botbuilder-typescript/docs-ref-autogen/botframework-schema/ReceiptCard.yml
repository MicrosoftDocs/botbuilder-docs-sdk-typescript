### YamlMime:UniversalReference
items:
  - uid: botframework-schema.ReceiptCard
    name: ReceiptCard
    fullName: ReceiptCard
    children:
      - botframework-schema.ReceiptCard.buttons
      - botframework-schema.ReceiptCard.facts
      - botframework-schema.ReceiptCard.items
      - botframework-schema.ReceiptCard.tap
      - botframework-schema.ReceiptCard.tax
      - botframework-schema.ReceiptCard.title
      - botframework-schema.ReceiptCard.total
      - botframework-schema.ReceiptCard.vat
    langs:
      - typeScript
    type: interface
    summary: ''
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.buttons
    name: buttons
    fullName: buttons
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'buttons: CardAction[]'
      return:
        type:
          - 'botframework-schema.CardAction[]'
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.facts
    name: facts
    fullName: facts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'facts: Fact[]'
      return:
        type:
          - 'botframework-schema.Fact[]'
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'items: ReceiptItem[]'
      return:
        type:
          - 'botframework-schema.ReceiptItem[]'
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.tap
    name: tap
    fullName: tap
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tap: CardAction'
      return:
        type:
          - botframework-schema.CardAction
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.tax
    name: tax
    fullName: tax
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tax: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'title: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.total
    name: total
    fullName: total
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'total: string'
      return:
        type:
          - string
    package: botframework-schema
  - uid: botframework-schema.ReceiptCard.vat
    name: vat
    fullName: vat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'vat: string'
      return:
        type:
          - string
    package: botframework-schema
references:
  - uid: 'botframework-schema.CardAction[]'
    name: 'CardAction[]'
    spec.typeScript:
      - name: CardAction
        fullName: CardAction
        uid: botframework-schema.CardAction
      - name: '[]'
        fullName: '[]'
  - uid: 'botframework-schema.Fact[]'
    name: 'Fact[]'
    spec.typeScript:
      - name: Fact
        fullName: Fact
        uid: botframework-schema.Fact
      - name: '[]'
        fullName: '[]'
  - uid: 'botframework-schema.ReceiptItem[]'
    name: 'ReceiptItem[]'
    spec.typeScript:
      - name: ReceiptItem
        fullName: ReceiptItem
        uid: botframework-schema.ReceiptItem
      - name: '[]'
        fullName: '[]'
  - uid: botframework-schema.CardAction
    name: CardAction
    spec.typeScript:
      - name: CardAction
        fullName: CardAction
        uid: botframework-schema.CardAction
