### YamlMime:TSType
name: AzureBlobTranscriptStore
uid: botbuilder-azure.AzureBlobTranscriptStore
package: botbuilder-azure
summary: Stores transcripts in an Azure Blob container.
fullName: AzureBlobTranscriptStore
remarks: |-
  Each activity is stored as JSON blob with a structure of
  `container/{channelId]/{conversationId}/{Timestamp.ticks}-{activity.id}.json`.
isPreview: false
isDeprecated: true
customDeprecatedMessage: >-
  This class is deprecated in favor of
  [BlobsTranscriptStore](xref:botbuilder-azure-blobs.BlobsTranscriptStore)
type: class
constructors:
  - name: AzureBlobTranscriptStore(BlobStorageSettings)
    uid: botbuilder-azure.AzureBlobTranscriptStore.constructor
    package: botbuilder-azure
    summary: Creates a new AzureBlobTranscriptStore instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AzureBlobTranscriptStore(settings: BlobStorageSettings)'
      parameters:
        - id: settings
          type: <xref uid="botbuilder-azure.BlobStorageSettings" />
          description: |
            Settings required for configuring an instance of BlobStorage
methods:
  - name: 'deleteTranscript(string, string)'
    uid: botbuilder-azure.AzureBlobTranscriptStore.deleteTranscript
    package: botbuilder-azure
    summary: Delete a specific conversation and all of it's activities.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteTranscript(channelId: string, conversationId: string):
        Promise<void>
      parameters:
        - id: channelId
          type: string
          description: Channel Id where conversation took place.
        - id: conversationId
          type: string
          description: |
            Id of the conversation to delete.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'getTranscriptActivities(string, string, string, Date)'
    uid: botbuilder-azure.AzureBlobTranscriptStore.getTranscriptActivities
    package: botbuilder-azure
    summary: Get activities for a conversation (Aka the transcript)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getTranscriptActivities(channelId: string, conversationId:
        string, continuationToken?: string, startDate?: Date):
        Promise<PagedResult<Activity>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: conversationId
          type: string
          description: Conversation Id.
        - id: continuationToken
          type: string
          description: Continuation token to page through results.
        - id: startDate
          type: Date
          description: Earliest time to include.
      return:
        description: The PagedResult of activities.
        type: Promise&lt;PagedResult&lt;Activity&gt;&gt;
  - name: 'listTranscripts(string, string)'
    uid: botbuilder-azure.AzureBlobTranscriptStore.listTranscripts
    package: botbuilder-azure
    summary: List conversations in the channelId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listTranscripts(channelId: string, continuationToken?: string):
        Promise<PagedResult<TranscriptInfo>>
      parameters:
        - id: channelId
          type: string
          description: Channel Id.
        - id: continuationToken
          type: string
          description: ContinuationToken token to page through results.
      return:
        description: >-
          A promise representation of
          [PagedResult<TranscriptInfo>](xref:botbuilder-core.PagedResult)
        type: Promise&lt;PagedResult&lt;TranscriptInfo&gt;&gt;
  - name: logActivity(Activity)
    uid: botbuilder-azure.AzureBlobTranscriptStore.logActivity
    package: botbuilder-azure
    summary: Log an activity to the transcript.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function logActivity(activity: Activity): Promise<void>'
      parameters:
        - id: activity
          type: Activity
          description: |
            Activity being logged.
      return:
        description: ''
        type: Promise&lt;void&gt;
