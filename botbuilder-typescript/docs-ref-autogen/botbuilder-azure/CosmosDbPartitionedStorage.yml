### YamlMime:TSType
name: CosmosDbPartitionedStorage
uid: botbuilder-azure.CosmosDbPartitionedStorage
package: botbuilder-azure
summary: Implements a CosmosDB based storage provider using partitioning for a bot.
fullName: CosmosDbPartitionedStorage
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CosmosDbPartitionedStorage(CosmosDbPartitionedStorageOptions)
    uid: botbuilder-azure.CosmosDbPartitionedStorage.constructor
    package: botbuilder-azure
    summary: >-
      Initializes a new instance of the <see cref="CosmosDbPartitionedStorage"/>
      class.

      using the provided CosmosDB credentials, database ID, and container ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CosmosDbPartitionedStorage(cosmosDbStorageOptions:
        CosmosDbPartitionedStorageOptions)
      parameters:
        - id: cosmosDbStorageOptions
          type: <xref uid="botbuilder-azure.CosmosDbPartitionedStorageOptions" />
          description: Cosmos DB partitioned storage configuration options.
methods:
  - name: delete(string[])
    uid: botbuilder-azure.CosmosDbPartitionedStorage.delete
    package: botbuilder-azure
    summary: Delete one or more items from the Cosmos DB container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function delete(keys: string[]): Promise<void>'
      parameters:
        - id: keys
          type: string[]
          description: Array of Ids for the items to be deleted.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: initialize()
    uid: botbuilder-azure.CosmosDbPartitionedStorage.initialize
    package: botbuilder-azure
    summary: Connects to the CosmosDB database and creates / gets the container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function initialize(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: read(string[])
    uid: botbuilder-azure.CosmosDbPartitionedStorage.read
    package: botbuilder-azure
    summary: Read one or more items with matching keys from the Cosmos DB container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function read(keys: string[]): Promise<StoreItems>'
      parameters:
        - id: keys
          type: string[]
          description: A collection of Ids for each item to be retrieved.
      return:
        description: The read items.
        type: Promise&lt;StoreItems&gt;
  - name: write(StoreItems)
    uid: botbuilder-azure.CosmosDbPartitionedStorage.write
    package: botbuilder-azure
    summary: Insert or update one or more items into the Cosmos DB container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function write(changes: StoreItems): Promise<void>'
      parameters:
        - id: changes
          type: StoreItems
          description: Dictionary of items to be inserted or updated indexed by key.
      return:
        description: ''
        type: Promise&lt;void&gt;
