### YamlMime:TSType
name: IAzureSqlOptions
uid: botbuilder-azure.IAzureSqlOptions
package: botbuilder-azure
summary: ''
fullName: IAzureSqlOptions
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortTransactionOnError
    uid: botbuilder-azure.IAzureSqlOptions.abortTransactionOnError
    package: botbuilder-azure
    summary: >-
      A boolean determining whether to rollback a transaction automatically if
      any error is encountered

      during the given transaction's execution. This sets the value for SET
      XACT_ABORT during the initial

      SQL phase of a connection (documentation).
    fullName: abortTransactionOnError
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortTransactionOnError?: boolean'
      return:
        type: boolean
        description: ''
  - name: camelCaseColumns
    uid: botbuilder-azure.IAzureSqlOptions.camelCaseColumns
    package: botbuilder-azure
    summary: >-
      A boolean, controlling whether the column names returned will have the
      first letter converted

      to lower case (true) or not. This value is ignored if you provide a
      columnNameReplacer. (default: false).
    fullName: camelCaseColumns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'camelCaseColumns?: boolean'
      return:
        type: boolean
        description: ''
  - name: cancelTimeout
    uid: botbuilder-azure.IAzureSqlOptions.cancelTimeout
    package: botbuilder-azure
    summary: >-
      The number of milliseconds before the cancel (abort) of a request is
      considered failed (default: 5000).
    fullName: cancelTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cancelTimeout?: number'
      return:
        type: number
        description: ''
  - name: columnNameReplacer
    uid: botbuilder-azure.IAzureSqlOptions.columnNameReplacer
    package: botbuilder-azure
    summary: >-
      A function with parameters (columnName, index, columnMetaData) and
      returning a string. If provided,

      this will be called once per column per result-set. The returned value
      will be used instead of the

      SQL-provided column name on row and meta data objects. This allows you to
      dynamically convert between

      naming conventions. (default: null).
    fullName: columnNameReplacer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        columnNameReplacer?: (columnName: string, index: number, columnMetaData:
        ColumnMetaData) => string
      return:
        type: >-
          (columnName: string, index: number, columnMetaData: ColumnMetaData)
          =&gt; string
        description: ''
  - name: connectionIsolationLevel
    uid: botbuilder-azure.IAzureSqlOptions.connectionIsolationLevel
    package: botbuilder-azure
    summary: >-
      The default isolation level for new connections. All out-of-transaction
      queries are executed with this setting. (default: READ_COMMITED)
    fullName: connectionIsolationLevel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectionIsolationLevel?: ISOLATION_LEVEL'
      return:
        type: ISOLATION_LEVEL
        description: ''
  - name: connectTimeout
    uid: botbuilder-azure.IAzureSqlOptions.connectTimeout
    package: botbuilder-azure
    summary: >-
      The number of milliseconds before the attempt to connect is considered
      failed (default: 15000).
    fullName: connectTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectTimeout?: number'
      return:
        type: number
        description: ''
  - name: cryptoCredentialsDetails
    uid: botbuilder-azure.IAzureSqlOptions.cryptoCredentialsDetails
    package: botbuilder-azure
    summary: >-
      When encryption is used, an object may be supplied that will be used for
      the first argument when calling tls.createSecurePair (default: {}).
    fullName: cryptoCredentialsDetails
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cryptoCredentialsDetails?: Object'
      return:
        type: Object
        description: ''
  - name: database
    uid: botbuilder-azure.IAzureSqlOptions.database
    package: botbuilder-azure
    summary: 'Database to connect to (default: dependent on server configuration).'
    fullName: database
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'database?: string'
      return:
        type: string
        description: ''
  - name: debug
    uid: botbuilder-azure.IAzureSqlOptions.debug
    package: botbuilder-azure
    summary: Debug options
    fullName: debug
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'debug?: DebugOptions'
      return:
        type: DebugOptions
        description: ''
  - name: encrypt
    uid: botbuilder-azure.IAzureSqlOptions.encrypt
    package: botbuilder-azure
    summary: '"encrypt" MUST be set to true to work with Azure SQL'
    fullName: encrypt
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'encrypt?: boolean'
      return:
        type: boolean
        description: ''
  - name: fallbackToDefaultDb
    uid: botbuilder-azure.IAzureSqlOptions.fallbackToDefaultDb
    package: botbuilder-azure
    summary: >-
      By default, if the database requestion by options.database cannot be
      accessed,

      the connection will fail with an error. However, if
      options.fallbackToDefaultDb is set to true,

      then the user's default database will be  * used instead (Default: false).
    fullName: fallbackToDefaultDb
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fallbackToDefaultDb?: boolean'
      return:
        type: boolean
        description: ''
  - name: instanceName
    uid: botbuilder-azure.IAzureSqlOptions.instanceName
    package: botbuilder-azure
    summary: >-
      The instance name to connect to. The SQL Server Browser service must be
      running on the database server,

      and UDP port 1444 on the database server must be reachable. (no default)
      Mutually exclusive with options.port.
    fullName: instanceName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'instanceName?: string'
      return:
        type: string
        description: ''
  - name: isolationLevel
    uid: botbuilder-azure.IAzureSqlOptions.isolationLevel
    package: botbuilder-azure
    summary: >-
      The default isolation level that transactions will be run with. (default:
      READ_COMMITED).
    fullName: isolationLevel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isolationLevel?: ISOLATION_LEVEL'
      return:
        type: ISOLATION_LEVEL
        description: ''
  - name: localAddress
    uid: botbuilder-azure.IAzureSqlOptions.localAddress
    package: botbuilder-azure
    summary: >-
      A string indicating which network interface (ip addres) to use when
      connecting to SQL Server.
    fullName: localAddress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localAddress?: string'
      return:
        type: string
        description: ''
  - name: packetSize
    uid: botbuilder-azure.IAzureSqlOptions.packetSize
    package: botbuilder-azure
    summary: >-
      The size of TDS packets (subject to negotiation with the server). Should
      be a power of 2. (default: 4096).
    fullName: packetSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'packetSize?: number'
      return:
        type: number
        description: ''
  - name: port
    uid: botbuilder-azure.IAzureSqlOptions.port
    package: botbuilder-azure
    summary: >-
      Port to connect to (default: 1433). Mutually exclusive with
      options.instanceName.
    fullName: port
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'port?: number'
      return:
        type: number
        description: ''
  - name: readOnlyIntent
    uid: botbuilder-azure.IAzureSqlOptions.readOnlyIntent
    package: botbuilder-azure
    summary: >-
      A boolean, determining whether the connection will request read only
      access from a SQL Server Availability Group. For more information, see
      here. (default: false).
    fullName: readOnlyIntent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readOnlyIntent?: boolean'
      return:
        type: boolean
        description: ''
  - name: requestTimeout
    uid: botbuilder-azure.IAzureSqlOptions.requestTimeout
    package: botbuilder-azure
    summary: >-
      The number of milliseconds before a request is considered failed, or 0 for
      no timeout (default: 15000).
    fullName: requestTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'requestTimeout?: number'
      return:
        type: number
        description: ''
  - name: rowCollectionOnDone
    uid: botbuilder-azure.IAzureSqlOptions.rowCollectionOnDone
    package: botbuilder-azure
    summary: >-
      A boolean, that when true will expose received rows in Requests' done*
      events. See done, doneInProc and doneProc. (default: false)

      Caution: If many row are received, enabling this option could result in
      excessive memory usage.
    fullName: rowCollectionOnDone
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rowCollectionOnDone?: boolean'
      return:
        type: boolean
        description: ''
  - name: rowCollectionOnRequestCompletion
    uid: botbuilder-azure.IAzureSqlOptions.rowCollectionOnRequestCompletion
    package: botbuilder-azure
    summary: >-
      A boolean, that when true will expose received rows in Requests'
      completion callback. See new Request. (default: false)

      Caution: If many row are received, enabling this option could result in
      excessive memory usage.
    fullName: rowCollectionOnRequestCompletion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rowCollectionOnRequestCompletion?: boolean'
      return:
        type: boolean
        description: ''
  - name: table
    uid: botbuilder-azure.IAzureSqlOptions.table
    package: botbuilder-azure
    summary: '"table" name must be included.'
    fullName: table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'table: string'
      return:
        type: string
        description: ''
  - name: tdsVersion
    uid: botbuilder-azure.IAzureSqlOptions.tdsVersion
    package: botbuilder-azure
    summary: >-
      The version of TDS to use. If server doesn't support specified version,
      negotiated version is used instead. (default: 7_4).

      Take this from tedious.TDS_VERSION.7_4 .
    fullName: tdsVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tdsVersion?: number'
      return:
        type: number
        description: ''
  - name: useColumnNames
    uid: botbuilder-azure.IAzureSqlOptions.useColumnNames
    package: botbuilder-azure
    summary: >-
      A boolean determining whether to return rows as arrays or key-value
      collections. (default: false).
    fullName: useColumnNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useColumnNames?: boolean'
      return:
        type: boolean
        description: ''
  - name: useUTC
    uid: botbuilder-azure.IAzureSqlOptions.useUTC
    package: botbuilder-azure
    summary: >-
      A boolean determining whether to pass time values in UTC or local time.
      (default: true).
    fullName: useUTC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useUTC?: boolean'
      return:
        type: boolean
        description: ''
extends: ConnectionOptions
