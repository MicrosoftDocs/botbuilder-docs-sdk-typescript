### YamlMime:TSType
name: IMessage
uid: botbuilder.IMessage
package: botbuilder
summary: >-
  A chat message sent between a User and a Bot. Messages from the bot to the
  user come in two flavors:

  * __reactive messages__ are messages sent from the Bot to the User as a reply
  to an incoming message from the user.

  * __proactive messages__ are messages sent from the Bot to the User in
  response to some external event like an alarm triggering.


  In the reactive case the you should copy the [address](#address) field from
  the incoming message to the outgoing message (if you use the [Message](
  /en-us/node/builder/chat-reference/classes/_botbuilder_d_.message.html)
  builder class and initialize it with the

  [session](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.session.html)
  this will happen automatically) and then set the [text](#text) or
  [attachments](#attachments).  For proactive messages youâ€™ll need save the
  [address](#address) from the incoming message to

  an external storage somewhere. You can then later pass this in to
  [UniversalBot.beginDialog()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.universalbot.html#begindialog)
  or copy it to an outgoing message passed to

  [UniversalBot.send()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.universalbot.html#send).


  Composing a message to the user using the incoming address object will by
  default send a reply to the user in the context of the current conversation.
  Some channels allow for the starting of new conversations with the user. To
  start a new proactive conversation with the user simply delete

  the
  [conversation](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.iaddress.html#conversation)
  field from the address object before composing the outgoing message.
fullName: IMessage
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: address
    uid: botbuilder.IMessage.address
    package: botbuilder
    summary: >-
      Address routing information for the event. Save this field to external
      storage somewhere to later compose a proactive message to the user.
    fullName: address
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'address: IAddress'
      return:
        type: <xref uid="botbuilder.IAddress" />
        description: ''
  - name: agent
    uid: botbuilder.IMessage.agent
    package: botbuilder
    summary: SDK thats processing the event. Will always be 'botbuilder'.
    fullName: agent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'agent: string'
      return:
        type: string
        description: ''
  - name: attachmentLayout
    uid: botbuilder.IMessage.attachmentLayout
    package: botbuilder
    summary: >-
      Hint for how clients should layout multiple attachments. The default value
      is 'list'.
    fullName: attachmentLayout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'attachmentLayout?: string'
      return:
        type: string
        description: ''
  - name: attachments
    uid: botbuilder.IMessage.attachments
    package: botbuilder
    summary: >-
      For incoming messages contains attachments like images sent from the user.
      For outgoing messages contains objects like cards or images to send to the
      user.
    fullName: attachments
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'attachments?: IAttachment[]'
      return:
        type: '<xref uid="botbuilder.IAttachment" />[]'
        description: ''
  - name: code
    uid: botbuilder.IMessage.code
    package: botbuilder
    summary: Code indicating why the conversation has ended.
    fullName: code
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'code?: string'
      return:
        type: string
        description: ''
  - name: deliveryMode
    uid: botbuilder.IMessage.deliveryMode
    package: botbuilder
    summary: >-
      A delivery hint to signal to the recipient alternate delivery paths for
      the activity. The default delivery mode is "default".
    fullName: deliveryMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deliveryMode?: string'
      return:
        type: string
        description: ''
  - name: entities
    uid: botbuilder.IMessage.entities
    package: botbuilder
    summary: Structured objects passed to the bot or user.
    fullName: entities
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'entities?: any[]'
      return:
        type: 'any[]'
        description: ''
  - name: expriation
    uid: botbuilder.IMessage.expriation
    package: botbuilder
    summary: >-
      The time at which the activity should be considered to be "expired" and
      should not be presented to the recipient.
    fullName: expriation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expriation?: string'
      return:
        type: string
        description: ''
  - name: importance
    uid: botbuilder.IMessage.importance
    package: botbuilder
    summary: The importance of the activity.
    fullName: importance
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'importance?: string'
      return:
        type: string
        description: ''
  - name: inputHint
    uid: botbuilder.IMessage.inputHint
    package: botbuilder
    summary: >-
      Hint for clients letting them know if the bot is expecting further input
      or not. The built-in prompts will automatically populate this value for
      outgoing messages.
    fullName: inputHint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inputHint?: string'
      return:
        type: string
        description: ''
  - name: label
    uid: botbuilder.IMessage.label
    package: botbuilder
    summary: A descriptive label for the activity.
    fullName: label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string'
      return:
        type: string
        description: ''
  - name: listenFor
    uid: botbuilder.IMessage.listenFor
    package: botbuilder
    summary: >-
      List of phrases and references that speech and language priming systems
      should listen for.
    fullName: listenFor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'listenFor?: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: localTimestamp
    uid: botbuilder.IMessage.localTimestamp
    package: botbuilder
    summary: >-
      Local time when message was sent (set by client or bot, Ex:
      2016-09-23T13:07:49.4714686-07:00.)
    fullName: localTimestamp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localTimestamp?: string'
      return:
        type: string
        description: ''
  - name: localTimezone
    uid: botbuilder.IMessage.localTimezone
    package: botbuilder
    summary: >-
      Contains the name of the timezone in which the message, in local time,
      expressed in IANA Time Zone database format. For example,
      America/Los_Angeles.
    fullName: localTimezone
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localTimezone?: string'
      return:
        type: string
        description: ''
  - name: name
    uid: botbuilder.IMessage.name
    package: botbuilder
    summary: Name of the operation to invoke or the name of the event.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: string'
      return:
        type: string
        description: ''
  - name: relatesTo
    uid: botbuilder.IMessage.relatesTo
    package: botbuilder
    summary: Reference to another conversation or message.
    fullName: relatesTo
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'relatesTo?: IAddress'
      return:
        type: <xref uid="botbuilder.IAddress" />
        description: ''
  - name: replyToId
    uid: botbuilder.IMessage.replyToId
    package: botbuilder
    summary: The ID of the event this update is related to.
    fullName: replyToId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'replyToId?: string'
      return:
        type: string
        description: ''
  - name: semanticAction
    uid: botbuilder.IMessage.semanticAction
    package: botbuilder
    summary: An optional programmatic action accompanying this request.
    fullName: semanticAction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'semanticAction?: ISemanticAction'
      return:
        type: <xref uid="botbuilder.ISemanticAction" />
        description: ''
  - name: source
    uid: botbuilder.IMessage.source
    package: botbuilder
    summary: 'The original source of the event (i.e. ''facebook'', ''skype'', ''slack'', etc.)'
    fullName: source
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source: string'
      return:
        type: string
        description: ''
  - name: sourceEvent
    uid: botbuilder.IMessage.sourceEvent
    package: botbuilder
    summary: >-
      The original event in the sources native schema. For outgoing messages can
      be used to pass source specific event data like custom attachments.
    fullName: sourceEvent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sourceEvent: any'
      return:
        type: any
        description: ''
  - name: speak
    uid: botbuilder.IMessage.speak
    package: botbuilder
    summary: >-
      Spoken message as [Speech Synthesis Markup
      Language](https://msdn.microsoft.com/en-us/library/hh378377(v=office.14).aspx).
    fullName: speak
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'speak?: string'
      return:
        type: string
        description: ''
  - name: summary
    uid: botbuilder.IMessage.summary
    package: botbuilder
    summary: >-
      Text to be displayed by as fall-back and as short description of the
      message content in e.g. list of recent conversations.
    fullName: summary
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'summary?: string'
      return:
        type: string
        description: ''
  - name: text
    uid: botbuilder.IMessage.text
    package: botbuilder
    summary: Message text.
    fullName: text
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text?: string'
      return:
        type: string
        description: ''
  - name: textFormat
    uid: botbuilder.IMessage.textFormat
    package: botbuilder
    summary: Format of text fields. The default value is 'markdown'.
    fullName: textFormat
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textFormat?: string'
      return:
        type: string
        description: ''
  - name: textHighlights
    uid: botbuilder.IMessage.textHighlights
    package: botbuilder
    summary: >-
      The collection of text fragments to highlight when the activity contains a
      ReplyToId value.
    fullName: textHighlights
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textHighlights?: ITextHighlight[]'
      return:
        type: '<xref uid="botbuilder.ITextHighlight" />[]'
        description: ''
  - name: textLocale
    uid: botbuilder.IMessage.textLocale
    package: botbuilder
    summary: Identified language of the message text if known.
    fullName: textLocale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textLocale?: string'
      return:
        type: string
        description: ''
  - name: timestamp
    uid: botbuilder.IMessage.timestamp
    package: botbuilder
    summary: UTC Time when message was sent (set by service.)
    fullName: timestamp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timestamp?: string'
      return:
        type: string
        description: ''
  - name: type
    uid: botbuilder.IMessage.type
    package: botbuilder
    summary: Defines type of event. Should be 'message' for an IMessage.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        type: string
        description: ''
  - name: user
    uid: botbuilder.IMessage.user
    package: botbuilder
    summary: >-
      For incoming messages this is the user that sent the message. By default
      this is a copy of
      [address.user](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.iaddress.html#user)
      but you can configure your bot with a

      [lookupUser](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.iuniversalbotsettings.html#lookupuser)
      function that lets map the incoming user to an internal user id.
    fullName: user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'user: IIdentity'
      return:
        type: <xref uid="botbuilder.IIdentity" />
        description: ''
  - name: value
    uid: botbuilder.IMessage.value
    package: botbuilder
    summary: Open-ended value.
    fullName: value
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: any'
      return:
        type: any
        description: ''
  - name: valueType
    uid: botbuilder.IMessage.valueType
    package: botbuilder
    summary: The type of the activity's value object.
    fullName: valueType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'valueType?: string'
      return:
        type: string
        description: ''
extends: <xref uid="botbuilder.IEvent" />
