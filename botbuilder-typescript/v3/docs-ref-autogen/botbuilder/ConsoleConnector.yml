### YamlMime:TSType
name: ConsoleConnector
uid: botbuilder.ConsoleConnector
package: botbuilder
summary: Connects a UniversalBot to the command line via a console window.
fullName: ConsoleConnector
isPreview: false
isDeprecated: false
type: class
methods:
  - name: listen()
    uid: botbuilder.ConsoleConnector.listen
    package: botbuilder
    summary: Starts the connector listening to stdIn.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function listen()
      return:
        type: <xref uid="botbuilder.ConsoleConnector" />
        description: ''
  - name: 'onEvent((events: IEvent[], callback?: (err: Error) => void) => void)'
    uid: botbuilder.ConsoleConnector.onEvent
    package: botbuilder
    summary: >-
      Called by the UniversalBot at registration time to register a handler for
      receiving incoming events from a channel.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onEvent(handler: (events: IEvent[], callback?: (err: Error) =>
        void) => void)
      parameters:
        - id: handler
          type: '(events: IEvent[], callback?: (err: Error) =&gt; void) =&gt; void'
          description: ''
  - name: >-
      onInvoke((event: IEvent, cb?: (err: Error, body: any, status?: number) =>
      void) => void)
    uid: botbuilder.ConsoleConnector.onInvoke
    package: botbuilder
    summary: Used to register a handler for receiving incoming invoke events.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function onInvoke(handler: (event: IEvent, cb?: (err: Error, body: any,
        status?: number) => void) => void)
      parameters:
        - id: handler
          type: >-
            (event: IEvent, cb?: (err: Error, body: any, status?: number) =&gt;
            void) =&gt; void
          description: ''
  - name: processEvent(IEvent)
    uid: botbuilder.ConsoleConnector.processEvent
    package: botbuilder
    summary: Sends a event through the connector.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function processEvent(event: IEvent)'
      parameters:
        - id: event
          type: <xref uid="botbuilder.IEvent" />
          description: ''
      return:
        type: <xref uid="botbuilder.ConsoleConnector" />
        description: ''
  - name: processMessage(string)
    uid: botbuilder.ConsoleConnector.processMessage
    package: botbuilder
    summary: Sends a message through the connector.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function processMessage(line: string)'
      parameters:
        - id: line
          type: string
          description: ''
      return:
        type: <xref uid="botbuilder.ConsoleConnector" />
        description: ''
  - name: 'send(IMessage[], (err: Error, addresses?: IAddress[]) => void)'
    uid: botbuilder.ConsoleConnector.send
    package: botbuilder
    summary: Called by the UniversalBot to deliver outgoing messages to a user.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function send(messages: IMessage[], callback: (err: Error, addresses?:
        IAddress[]) => void)
      parameters:
        - id: messages
          type: '<xref uid="botbuilder.IMessage" />[]'
          description: ''
        - id: callback
          type: '(err: Error, addresses?: IAddress[]) =&gt; void'
          description: ''
  - name: 'startConversation(IAddress, (err: Error, address?: IAddress) => void)'
    uid: botbuilder.ConsoleConnector.startConversation
    package: botbuilder
    summary: >-
      Called when a UniversalBot wants to start a new proactive conversation
      with a user. The connector should return a properly formated __address__
      object with a populated __conversation__ field.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function startConversation(address: IAddress, callback: (err: Error,
        address?: IAddress) => void)
      parameters:
        - id: address
          type: <xref uid="botbuilder.IAddress" />
          description: ''
        - id: callback
          type: '(err: Error, address?: IAddress) =&gt; void'
          description: ''
