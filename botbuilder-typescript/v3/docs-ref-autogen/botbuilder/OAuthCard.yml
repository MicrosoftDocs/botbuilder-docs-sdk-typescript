### YamlMime:TSType
name: OAuthCard
uid: botbuilder.OAuthCard
package: botbuilder
summary: Card builder class that simplifies building oauth cards.
fullName: OAuthCard
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: OAuthCard(Session)
    uid: botbuilder.OAuthCard.constructor
    package: botbuilder
    summary: Creates a new OAuthCard.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new OAuthCard(session?: Session)'
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: |
            (Optional) will be used to localize any text.
methods:
  - name: button(TextType)
    uid: botbuilder.OAuthCard.button
    package: botbuilder
    summary: Signin button label.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function button(title: TextType)'
      parameters:
        - id: title
          type: <xref uid="botbuilder.TextType" />
          description: ''
      return:
        type: <xref uid="botbuilder.OAuthCard" />
        description: ''
  - name: connectionName(string)
    uid: botbuilder.OAuthCard.connectionName
    package: botbuilder
    summary: The name of the OAuth connection to use.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function connectionName(name: string)'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        type: <xref uid="botbuilder.OAuthCard" />
        description: ''
  - name: >-
      create(ChatConnector, Session, string, string, string, (err: Error,
      message: Message) => void)
    uid: botbuilder.OAuthCard.create
    package: botbuilder
    summary: Factory method for returning a message with the proper signin attachment
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function create(connector: ChatConnector, session: Session,
        connectionName: string, text: string, buttonTitle: string, done: (err:
        Error, message: Message) => void)
      parameters:
        - id: connector
          type: <xref uid="botbuilder.ChatConnector" />
          description: ''
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: ''
        - id: connectionName
          type: string
          description: ''
        - id: text
          type: string
          description: ''
        - id: buttonTitle
          type: string
          description: ''
        - id: done
          type: '(err: Error, message: Message) =&gt; void'
          description: ''
  - name: 'text(TextType, any[])'
    uid: botbuilder.OAuthCard.text
    package: botbuilder
    summary: Title of the Card.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function text(prompts: TextType, args: any[])'
      parameters:
        - id: prompts
          type: <xref uid="botbuilder.TextType" />
          description: ''
        - id: args
          type: 'any[]'
          description: ''
      return:
        type: <xref uid="botbuilder.OAuthCard" />
        description: ''
  - name: toAttachment()
    uid: botbuilder.OAuthCard.toAttachment
    package: botbuilder
    summary: 'Returns the JSON for the card,'
    isPreview: false
    isDeprecated: false
    syntax:
      content: function toAttachment()
      return:
        type: <xref uid="botbuilder.IAttachment" />
        description: ''
