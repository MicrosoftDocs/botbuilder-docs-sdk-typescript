### YamlMime:TSType
name: ITriggerActionOptions
uid: botbuilder.ITriggerActionOptions
package: botbuilder
summary: Options passed when defining a `triggerAction()`.
fullName: ITriggerActionOptions
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: confirmPrompt
    uid: botbuilder.ITriggerActionOptions.confirmPrompt
    package: botbuilder
    summary: >-
      If specified the user will be asked to confirm that they are ok canceling
      the current

      uncompleted task.
    fullName: confirmPrompt
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'confirmPrompt?: TextOrMessageType'
      return:
        type: <xref uid="botbuilder.TextOrMessageType" />
        description: ''
  - name: dialogArgs
    uid: botbuilder.ITriggerActionOptions.dialogArgs
    package: botbuilder
    summary: >-
      (Optional) arguments to pass to the dialog spawned when the action is
      triggered.
    fullName: dialogArgs
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dialogArgs?: any'
      return:
        type: any
        description: ''
  - name: intentThreshold
    uid: botbuilder.ITriggerActionOptions.intentThreshold
    package: botbuilder
    summary: >-
      (Optional) minimum score needed to trigger the action using the value of
      [matches](#matches). The default value is 0.1.
    fullName: intentThreshold
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'intentThreshold?: number'
      return:
        type: number
        description: ''
  - name: matches
    uid: botbuilder.ITriggerActionOptions.matches
    package: botbuilder
    summary: >
      (Optional) intent(s) used to trigger the action. Either a regular
      expression or a named

      intent can be provided and multiple intents can be specified.  When a
      named intent is

      provided the action will be matched using the recognizers assigned to the
      library/bot using

      [Library.recognizer()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.library#recognizer).

      If a matches option isn't provided then the action can only be matched if
      an [onFindAction](#onfindaction)

      handler is provided.
    fullName: matches
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'matches?: MatchType'
      return:
        type: <xref uid="botbuilder.MatchType" />
        description: ''
  - name: onFindAction
    uid: botbuilder.ITriggerActionOptions.onFindAction
    package: botbuilder
    summary: >-
      (Optional) custom handler that's invoked whenever the action is being
      checked to see if it

      should be triggered. The handler is passed a context object containing the
      received message

      and any intents detected. The handler should return a confidence score for
      0.0 to 1.0 and

      routeData that should be passed in during the `selectActionRoute` call.
    fullName: onFindAction
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onFindAction?: (context: IFindActionRouteContext, callback: (err: Error,
        score: number, routeData?: IActionRouteData) => void) => void
      return:
        type: >-
          (context: IFindActionRouteContext, callback: (err: Error, score:
          number, routeData?: IActionRouteData) =&gt; void) =&gt; void
        description: ''
  - name: onInterrupted
    uid: botbuilder.ITriggerActionOptions.onInterrupted
    package: botbuilder
    summary: >
      (Optional) custom handler called when a root dialog is being interrupted
      by another root

      dialog. This gives the dialog an opportunity to perform custom cleanup
      logic or to prompt

      the user to confirm the interruption was intended.

      It's important to note that this is not a waterfall and you should call
      `next()` if you

      would like the actions default behavior to run.
    fullName: onInterrupted
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onInterrupted?: (session: Session, dialogId: string, dialogArgs?: any,
        next?: Function) => void
      return:
        type: >-
          (session: Session, dialogId: string, dialogArgs?: any, next?:
          Function) =&gt; void
        description: ''
  - name: onSelectAction
    uid: botbuilder.ITriggerActionOptions.onSelectAction
    package: botbuilder
    summary: >
      (Optional) custom handler that's invoked whenever the action is
      triggered.  This lets you

      customize the behavior of an action. For instance you could clear the
      dialog stack before

      the new dialog is started, changing the default behavior which is to just
      push the new

      dialog onto the end of the stack.

      It's important to note that this is not a waterfall and you should call
      `next()` if you

      would like the actions default behavior to run.
    fullName: onSelectAction
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onSelectAction?: (session: Session, args?: IActionRouteData, next?:
        Function) => void
      return:
        type: >-
          (session: Session, args?: IActionRouteData, next?: Function) =&gt;
          void
        description: ''
extends: <xref uid="botbuilder.IBeginDialogActionOptions" />
