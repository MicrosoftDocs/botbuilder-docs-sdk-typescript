### YamlMime:TSType
name: SimpleDialog
uid: botbuilder.SimpleDialog
package: botbuilder
summary: >-
  Allows for the creation of custom dialogs that are based on a simple closure.
  This is useful for

  cases where you want a dynamic conversation flow or you have a situation that
  just doesnâ€™t map

  very well to using a waterfall.  The things to keep in mind:

  * Your dialogs closure is can get called in two different contexts that you
  potentially need to
    test for. It will get called as expected when the user send your dialog a message but if you
    call another prompt or dialog from your closure it will get called a second time with the
    results from the prompt/dialog. You can typically test for this second case by checking for the
    existant of an `args.resumed` property. It's important to avoid getting yourself into an
    infinite loop which can be easy to do.
  * Unlike a waterfall your dialog will not automatically end. It will remain
  the active dialog
    until you call [session.endDialog()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.session.html#enddialog).
fullName: SimpleDialog
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'SimpleDialog((session: Session, args?: any | IDialogResult<any>) => void)'
    uid: botbuilder.SimpleDialog.constructor
    package: botbuilder
    summary: Creates a new custom dialog based on a simple closure.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new SimpleDialog(handler: (session: Session, args?: any |
        IDialogResult<any>) => void)
      parameters:
        - id: handler
          type: '(session: Session, args?: any | IDialogResult&lt;any&gt;) =&gt; void'
          description: The function closure for your dialog.
methods:
  - name: 'addDialogTrigger(ActionSet, string)'
    uid: botbuilder.SimpleDialog.addDialogTrigger
    package: botbuilder
    summary: >-
      Called once for each dialog within a library to give the dialog a chance
      to add its

      `triggerAction()` to the libraries global action set.  These triggers get
      mapped to

      a `beginDialogAction()` that starts the dialog when the trigger condition
      is met.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addDialogTrigger(actions: ActionSet, dialogId: string)'
      parameters:
        - id: actions
          type: <xref uid="botbuilder.ActionSet" />
          description: Libraries global action set.
        - id: dialogId
          type: string
          description: |
            The fully qualified ID of the dialog to trigger.
  - name: 'begin<T>(Session, T)'
    uid: botbuilder.SimpleDialog.begin
    package: botbuilder
    summary: Called when a new dialog session is being started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function begin<T>(session: Session, args?: T)'
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: Session object for the current conversation.
        - id: args
          type: T
          description: |
            (Optional) arguments passed to the dialog by its parent.
  - name: 'beginDialogAction(string, string, IBeginDialogActionOptions)'
    uid: botbuilder.SimpleDialog.beginDialogAction
    package: botbuilder
    summary: >-
      Binds an action to the dialog that will start another dialog anytime it's
      triggered. The new

      dialog will be pushed onto the stack so it does not automatically end the
      current task. The

      current task will be continued once the new dialog ends. The built-in
      prompts will automatically

      re-prompt the user once this happens but that behaviour can be disabled by
      setting the
      [promptAfterAction](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.ipromptoptions#promptafteraction)

      flag when calling a built-in prompt.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDialogAction(name: string, id: string, options?:
        IBeginDialogActionOptions)
      parameters:
        - id: name
          type: string
          description: Unique name to assign the action.
        - id: id
          type: string
          description: ID of the dialog to start.
        - id: options
          type: <xref uid="botbuilder.IBeginDialogActionOptions" />
          description: >
            (Optional) options used to configure the action. If
            [matches](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#matches)
            is specified the action will listen

            for the user to say a word or phrase that triggers the action,
            otherwise the action needs to be bound to a button using
            [CardAction.dialogAction()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.cardaction#dialogaction)

            to trigger the action. You can also use
            [dialogArgs](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#dialogargs)
            to pass additional params to the dialog being started.
      return:
        type: <xref uid="botbuilder.Dialog" />
        description: ''
  - name: 'cancelAction(string, TextOrMessageType, ICancelActionOptions)'
    uid: botbuilder.SimpleDialog.cancelAction
    package: botbuilder
    summary: >-
      Binds an action to the dialog that will cancel the dialog anytime it's
      triggered. When canceled, the

      dialogs parent will be resumed with a
      [resumed](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogresult#resumed)
      code indicating that it was
      [canceled](/en-us/node/builder/chat-reference/enums/_botbuilder_d_.resumereason#canceled).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancelAction(name: string, msg?: TextOrMessageType, options?:
        ICancelActionOptions)
      parameters:
        - id: name
          type: string
          description: Unique name to assign the action.
        - id: msg
          type: <xref uid="botbuilder.TextOrMessageType" />
          description: (Optional) message to send the user prior to canceling the dialog.
        - id: options
          type: <xref uid="botbuilder.ICancelActionOptions" />
          description: >
            (Optional) options used to configure the action. If
            [matches](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#matches)
            is specified the action will listen

            for the user to say a word or phrase that triggers the action,
            otherwise the action needs to be bound to a button using
            [CardAction.dialogAction()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.cardaction#dialogaction)

            to trigger the action.
      return:
        type: <xref uid="botbuilder.Dialog" />
        description: ''
  - name: clone(ActionSet)
    uid: botbuilder.SimpleDialog.clone
    package: botbuilder
    summary: Returns a clone of an existing ActionSet.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function clone(copyTo?: ActionSet)'
      parameters:
        - id: copyTo
          type: <xref uid="botbuilder.ActionSet" />
          description: >
            (Optional) instance to copy the current object to. If missing a new
            instance will be created.
      return:
        type: <xref uid="botbuilder.ActionSet" />
        description: ''
  - name: customAction(IDialogActionOptions)
    uid: botbuilder.SimpleDialog.customAction
    package: botbuilder
    summary: >-
      Binds a custom action to the dialog that will call the passed in
      [onSelectAction](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#onselectaction)

      handler when triggered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function customAction(options: IDialogActionOptions)'
      parameters:
        - id: options
          type: <xref uid="botbuilder.IDialogActionOptions" />
          description: >
            The options used to configure the action. If
            [matches](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#matches)
            is specified the action will listen

            for the user to say a word or phrase that triggers the action.
            Custom matching logic can be provided using
            [onFindAction](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#onfindaction).
      return:
        type: <xref uid="botbuilder.Library" />
        description: ''
  - name: 'dialogInterrupted(Session, string, any)'
    uid: botbuilder.SimpleDialog.dialogInterrupted
    package: botbuilder
    summary: >-
      Called when a root dialog is being interrupted by another dialog. This
      gives the dialog

      that's being interrupted a chance to run custom logic before it's removed
      from the stack.

      The dialog itself is responsible for clearing the dialog stack and
      starting the new dialog.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function dialogInterrupted(session: Session, dialogId: string,
        dialogArgs: any)
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: Session object for the current conversation.
        - id: dialogId
          type: string
          description: ID of the dialog that should be started.
        - id: dialogArgs
          type: any
          description: |
            Arguments that should be passed to the new dialog.
  - name: 'dialogResumed<T>(Session, IDialogResult<T>)'
    uid: botbuilder.SimpleDialog.dialogResumed
    package: botbuilder
    summary: A child dialog has ended and the current one is being resumed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function dialogResumed<T>(session: Session, result: IDialogResult<T>)'
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: Session object for the current conversation.
        - id: result
          type: <xref uid="botbuilder.IDialogResult" />&lt;T&gt;
          description: |
            Result returned by the child dialog.
  - name: 'endConversationAction(string, TextOrMessageType, ICancelActionOptions)'
    uid: botbuilder.SimpleDialog.endConversationAction
    package: botbuilder
    summary: >-
      Binds an action that will end the conversation with the user when
      triggered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endConversationAction(name: string, msg?: TextOrMessageType,
        options?: ICancelActionOptions)
      parameters:
        - id: name
          type: string
          description: Unique name to assign the action.
        - id: msg
          type: <xref uid="botbuilder.TextOrMessageType" />
          description: >-
            (Optional) message to send the user prior to ending the
            conversation.
        - id: options
          type: <xref uid="botbuilder.ICancelActionOptions" />
          description: >
            (Optional) options used to configure the action. If
            [matches](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#matches)
            is specified the action will listen

            for the user to say a word or phrase that triggers the action,
            otherwise the action needs to be bound to a button using
            [CardAction.dialogAction()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.cardaction#dialogaction)

            to trigger the action.
      return:
        type: <xref uid="botbuilder.Dialog" />
        description: ''
  - name: >-
      findActionRoutes(IRecognizeDialogContext, (err: Error, results:
      IRouteResult[]) => void)
    uid: botbuilder.SimpleDialog.findActionRoutes
    package: botbuilder
    summary: >-
      Called during the
      [Library.findRoutes()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.library#findroutes)

      call for each dialog on the stack to determine if any of the dialogs
      actions are triggered

      by the users utterance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function findActionRoutes(context: IRecognizeDialogContext, callback:
        (err: Error, results: IRouteResult[]) => void)
      parameters:
        - id: context
          type: <xref uid="botbuilder.IRecognizeDialogContext" />
          description: >-
            The context of the incoming message as well as the
            [dialogData](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.session#dialogdata)
            for the evaluated dialog.
        - id: callback
          type: '(err: Error, results: IRouteResult[]) =&gt; void'
          description: |
            Function to invoke with the top candidate route(s).
  - name: >-
      recognize(IRecognizeDialogContext, (err: Error, result: IRecognizeResult)
      => void)
    uid: botbuilder.SimpleDialog.recognize
    package: botbuilder
    summary: >-
      Parses the users utterance and assigns a score from 0.0 - 1.0 indicating
      how confident the

      dialog is that it understood the users utterance.  This method is always
      called for the active

      dialog on the stack.  A score of 1.0 will indicate a perfect match and
      terminate any further

      recognition.

      When the score is less than 1.0, every dialog on the stack will have its

      [recognizeAction()](#recognizeaction) method called as well to see if
      there are any named

      actions bound to the dialog that better matches the users utterance.
      Global actions registered

      at the bot level will also be evaluated. If the dialog has a score higher
      then any bound actions,

      the dialogs [replyReceived()](#replyreceived) method will be called with
      the result object

      returned from the recognize() call.  This lets the dialog pass additional
      data collected during

      the recognize phase to the replyReceived() method for handling.


      Should there be an action with a higher score then the dialog the action
      will be invoked instead

      of the dialogs replyReceived() method.  The dialog will stay on the stack
      and may be resumed

      at some point should the action invoke a new dialog so dialogs should
      prepare for unexpected calls

      to [dialogResumed()](#dialogresumed).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(context: IRecognizeDialogContext, callback: (err:
        Error, result: IRecognizeResult) => void)
      parameters:
        - id: context
          type: <xref uid="botbuilder.IRecognizeDialogContext" />
          description: The context of the request.
        - id: callback
          type: '(err: Error, result: IRecognizeResult) =&gt; void'
          description: |
            Function to invoke with the recognition results.
  - name: 'reloadAction(string, TextOrMessageType, IBeginDialogActionOptions)'
    uid: botbuilder.SimpleDialog.reloadAction
    package: botbuilder
    summary: >-
      Binds an action to the dialog that will cause the dialog to be reloaded
      anytime it's triggered. This is

      useful to implement logic that handle user utterances like "start over".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reloadAction(name: string, msg?: TextOrMessageType, options?:
        IBeginDialogActionOptions)
      parameters:
        - id: name
          type: string
          description: Unique name to assign the action.
        - id: msg
          type: <xref uid="botbuilder.TextOrMessageType" />
          description: (Optional) message to send the user prior to reloading the dialog.
        - id: options
          type: <xref uid="botbuilder.IBeginDialogActionOptions" />
          description: >
            (Optional) options used to configure the action. If
            [matches](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#matches)
            is specified the action will listen

            for the user to say a word or phrase that triggers the action,
            otherwise the action needs to be bound to a button using
            [CardAction.dialogAction()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.cardaction#dialogaction)

            to trigger the action. You can also use
            [dialogArgs](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.idialogactionoptions#dialogargs)
            to pass additional params to the dialog when reloaded.
      return:
        type: <xref uid="botbuilder.Dialog" />
        description: ''
  - name: replyReceived(Session)
    uid: botbuilder.SimpleDialog.replyReceived
    package: botbuilder
    summary: Processes messages received from the user. Called by the dialog system.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function replyReceived(session: Session)'
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: |
            Session object for the current conversation.
  - name: 'selectActionRoute(Session, IRouteResult)'
    uid: botbuilder.SimpleDialog.selectActionRoute
    package: botbuilder
    summary: Selects the route that had the highest confidence score for the utterance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function selectActionRoute(session: Session, route: IRouteResult)'
      parameters:
        - id: session
          type: <xref uid="botbuilder.Session" />
          description: Session object for the current conversation.
        - id: route
          type: <xref uid="botbuilder.IRouteResult" />
          description: >
            Results returned from the call to
            [findActionRoutes()](#findactionroute).
  - name: triggerAction(ITriggerActionOptions)
    uid: botbuilder.SimpleDialog.triggerAction
    package: botbuilder
    summary: >-
      Binds an action to the dialog that will make it the active dialog anytime
      it's triggered.

      The default behaviour is to interupt any existing dialog by clearing the
      stack and starting

      the dialog at the root of the stack.  The dialog being interrupted can
      intercept this

      interruption by adding a custom
      [onInterrupted](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.itriggeractionsoptions#oninterrupted)

      handler to their trigger action options.  Additionally, you can customize
      the way the

      triggered dialog is started by providing a custom
      [onSelectAction](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.ibegindialogactionsoptions#onselectaction)

      handler to your trigger action options.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function triggerAction(options: ITriggerActionOptions)'
      parameters:
        - id: options
          type: <xref uid="botbuilder.ITriggerActionOptions" />
          description: |
            Options used to configure the action.
      return:
        type: <xref uid="botbuilder.Dialog" />
        description: ''
extends: <xref uid="botbuilder.Dialog" />
