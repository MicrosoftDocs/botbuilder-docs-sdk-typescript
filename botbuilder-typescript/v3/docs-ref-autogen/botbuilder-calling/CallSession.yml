### YamlMime:TSType
name: CallSession
uid: botbuilder-calling.CallSession
package: botbuilder-calling
summary: Manages the bots conversation with a user.
fullName: CallSession
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: CallSession(ICallSessionOptions)
    uid: botbuilder-calling.CallSession.constructor
    package: botbuilder-calling
    summary: Creates an instance of the session.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CallSession(options: ICallSessionOptions)'
      parameters:
        - id: options
          type: <xref uid="botbuilder-calling.ICallSessionOptions" />
          description: |
            Sessions configuration options.
properties:
  - name: conversationData
    uid: botbuilder-calling.CallSession.conversationData
    package: botbuilder-calling
    summary: >-
      Shared conversation data that's visible to all members of the
      conversation.
    fullName: conversationData
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'conversationData: any'
      return:
        type: any
        description: ''
  - name: dialogData
    uid: botbuilder-calling.CallSession.dialogData
    package: botbuilder-calling
    summary: Data that's only visible to the current dialog.
    fullName: dialogData
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dialogData: any'
      return:
        type: any
        description: ''
  - name: library
    uid: botbuilder-calling.CallSession.library
    package: botbuilder-calling
    summary: The bots root library of dialogs.
    fullName: library
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'library: Library'
      return:
        type: <xref uid="botbuilder-calling.Library" />
        description: ''
  - name: message
    uid: botbuilder-calling.CallSession.message
    package: botbuilder-calling
    summary: >-
      The message recieved from the user. For bot originated messages this may
      only contain the "to" & "from" fields.
    fullName: message
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'message: IEvent'
      return:
        type: <xref uid="botbuilder-calling.IEvent" />
        description: ''
  - name: privateConversationData
    uid: botbuilder-calling.CallSession.privateConversationData
    package: botbuilder-calling
    summary: Private conversation data that's only visible to the user.
    fullName: privateConversationData
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'privateConversationData: any'
      return:
        type: any
        description: ''
  - name: sessionState
    uid: botbuilder-calling.CallSession.sessionState
    package: botbuilder-calling
    summary: Sessions current state information.
    fullName: sessionState
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sessionState: ISessionState'
      return:
        type: <xref uid="botbuilder-calling.ISessionState" />
        description: ''
  - name: userData
    uid: botbuilder-calling.CallSession.userData
    package: botbuilder-calling
    summary: Data for the user that's persisted across all conversations with the bot.
    fullName: userData
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userData: any'
      return:
        type: any
        description: ''
methods:
  - name: answer()
    uid: botbuilder-calling.CallSession.answer
    package: botbuilder-calling
    summary: >-
      Manually answers the call. The call will be automatically answered when
      the bot takes an action.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function answer()
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'beginDialog<T>(string, T)'
    uid: botbuilder-calling.CallSession.beginDialog
    package: botbuilder-calling
    summary: >-
      Passes control of the conversation to a new dialog. The current dialog
      will be suspended

      until the child dialog completes. Once the child ends the current dialog
      will receive a

      call to
      [dialogResumed()](en-us/node/builder/calling-reference/classes/_botbuilder_d_.dialog.html#dialogresumed)

      where it can inspect any results returned from the child.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog<T>(id: string, args?: T)'
      parameters:
        - id: id
          type: string
          description: Unique ID of the dialog to start.
        - id: args
          type: T
          description: >
            (Optional) arguments to pass to the dialogs
            [begin()](en-us/node/builder/calling-reference/classes/_botbuilder_d_.dialog.html#begin)
            method.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'dispatch(ISessionState, IEvent)'
    uid: botbuilder-calling.CallSession.dispatch
    package: botbuilder-calling
    summary: >-
      Dispatches a message for processing. The session will call any installed
      middleware before

      the message to the active dialog for processing.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function dispatch(sessionState: ISessionState, message: IEvent)'
      parameters:
        - id: sessionState
          type: <xref uid="botbuilder-calling.ISessionState" />
          description: >-
            The current session state. If _null_ a new conversation will be
            started beginning with the configured [dialogId](#dialogid).
        - id: message
          type: <xref uid="botbuilder-calling.IEvent" />
          description: |
            The message to dispatch.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'endConversation(string | string[] | IAction | IIsAction, any[])'
    uid: botbuilder-calling.CallSession.endConversation
    package: botbuilder-calling
    summary: >-
      Ends the current conversation and optionally sends a message to the user.
      The call will be automatically hungup or rejected.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endConversation(action?: string | string[] | IAction |
        IIsAction, args: any[])
      parameters:
        - id: action
          type: >-
            string | string[] | <xref uid="botbuilder-calling.IAction" /> |
            <xref uid="botbuilder-calling.IIsAction" />
          description: >-
            (Optional)

            * __action:__ _{string}_ - Text of the message to send. The message
            will be localized using the sessions configured localizer. If
            arguments are passed in the message will be formatted using
            [sprintf-js](https://github.com/alexei/sprintf.js).

            * __action:__ _{string[]}_ - The sent message will be chosen at
            random from the array.

            * __action:__ _{IAction|IIsAction}_ - Action to send.
        - id: args
          type: 'any[]'
          description: >
            (Optional) arguments used to format the final output text when
            __message__ is a _{string|string[]}_.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'endDialog(string | string[] | IAction | IIsAction, any[])'
    uid: botbuilder-calling.CallSession.endDialog
    package: botbuilder-calling
    summary: >-
      Ends the current dialog and optionally sends a message to the user. The
      parent will be resumed with an
      [IDialogResult.resumed](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.idialogresult.html#resumed)

      reason of
      [completed](en-us/node/builder/calling-reference/enums/_botbuilder_d_.resumereason.html#completed).
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(action?: string | string[] | IAction | IIsAction,
        args: any[])
      parameters:
        - id: action
          type: >-
            string | string[] | <xref uid="botbuilder-calling.IAction" /> |
            <xref uid="botbuilder-calling.IIsAction" />
          description: >-
            (Optional)

            * __action:__ _{string}_ - Text of the message to send. The message
            will be localized using the sessions configured localizer. If
            arguments are passed in the message will be formatted using
            [sprintf-js](https://github.com/alexei/sprintf.js).

            * __action:__ _{string[]}_ - The sent message will be chosen at
            random from the array.

            * __action:__ _{IAction|IIsAction}_ - Action to send.
        - id: args
          type: 'any[]'
          description: >
            (Optional) arguments used to format the final output text when
            __message__ is a _{string|string[]}_.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: endDialogWithResult(IDialogResult<any>)
    uid: botbuilder-calling.CallSession.endDialogWithResult
    package: botbuilder-calling
    summary: >-
      Ends the current dialog and optionally returns a result to the dialogs
      parent.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function endDialogWithResult(result?: IDialogResult<any>)'
      parameters:
        - id: result
          type: <xref uid="botbuilder-calling.IDialogResult" />&lt;any&gt;
          description: ''
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: error(Error)
    uid: botbuilder-calling.CallSession.error
    package: botbuilder-calling
    summary: >-
      Signals that an error occured. The bot will signal the error via an
      on('error', err) event.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function error(err: Error)'
      parameters:
        - id: err
          type: Error
          description: |
            Error that occured.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'gettext(string, any[])'
    uid: botbuilder-calling.CallSession.gettext
    package: botbuilder-calling
    summary: >-
      Loads a localized string for the messages language. If arguments are
      passed the localized string

      will be treated as a template and formatted using
      [sprintf-js](https://github.com/alexei/sprintf.js) (see their docs for
      details.)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function gettext(msgid: string, args: any[])'
      parameters:
        - id: msgid
          type: string
          description: >-
            String to use as a key in the localized string table. Typically this
            will just be the english version of the string.
        - id: args
          type: 'any[]'
          description: |
            (Optional) arguments used to format the final output string.
      return:
        type: string
        description: ''
  - name: hangup()
    uid: botbuilder-calling.CallSession.hangup
    package: botbuilder-calling
    summary: >-
      Manually ends an established call. The call will be automatically ended
      when the bot stops prompting the user for input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function hangup()
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: isReset()
    uid: botbuilder-calling.CallSession.isReset
    package: botbuilder-calling
    summary: Returns true if the session has been reset.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function isReset()
      return:
        type: boolean
        description: ''
  - name: messageSent()
    uid: botbuilder-calling.CallSession.messageSent
    package: botbuilder-calling
    summary: Returns true if a message has been sent for this session.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function messageSent()
      return:
        type: boolean
        description: ''
  - name: 'ngettext(string, string, number)'
    uid: botbuilder-calling.CallSession.ngettext
    package: botbuilder-calling
    summary: >-
      Loads the plural form of a localized string for the messages language. The
      output string will be formatted to

      include the count by replacing %d in the string with the count.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function ngettext(msgid: string, msgid_plural: string, count: number)'
      parameters:
        - id: msgid
          type: string
          description: >-
            Singular form of the string to use as a key in the localized string
            table. Use %d to specify where the count should go.
        - id: msgid_plural
          type: string
          description: >-
            Plural form of the string to use as a key in the localized string
            table. Use %d to specify where the count should go.
        - id: count
          type: number
          description: >
            Count to use when determining whether the singular or plural form of
            the string should be used.
      return:
        type: string
        description: ''
  - name: 'on(string, Function)'
    uid: botbuilder-calling.CallSession.on
    package: botbuilder-calling
    summary: Registers an event listener.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: string, listener: Function)'
      parameters:
        - id: event
          type: string
          description: >-
            Name of the event. Event types:

            - __error:__ An error occured.
            [IErrorEvent](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.ierrorevent.html)
        - id: listener
          type: Function
          description: |
            Function to invoke.
  - name: reject()
    uid: botbuilder-calling.CallSession.reject
    package: botbuilder-calling
    summary: Rejects an incoming call.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function reject()
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'replaceDialog<T>(string, T)'
    uid: botbuilder-calling.CallSession.replaceDialog
    package: botbuilder-calling
    summary: >-
      Ends the current dialog and starts a new one its place. The parent dialog
      will not be

      resumed until the new dialog completes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function replaceDialog<T>(id: string, args?: T)'
      parameters:
        - id: id
          type: string
          description: Unique ID of the dialog to start.
        - id: args
          type: T
          description: >
            (Optional) arguments to pass to the dialogs
            [begin()](en-us/node/builder/calling-reference/classes/_botbuilder_d_.dialog.html#begin)
            method.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'reset(string, any)'
    uid: botbuilder-calling.CallSession.reset
    package: botbuilder-calling
    summary: >-
      Clears the sessions callstack and restarts the conversation with the
      configured dialogId.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reset(dialogId?: string, dialogArgs?: any)'
      parameters:
        - id: dialogId
          type: string
          description: (Optional) ID of the dialog to start.
        - id: dialogArgs
          type: any
          description: >
            (Optional) arguments to pass to the dialogs
            [begin()](en-us/node/builder/calling-reference/classes/_botbuilder_d_.dialog.html#begin)
            method.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: save()
    uid: botbuilder-calling.CallSession.save
    package: botbuilder-calling
    summary: >-
      Triggers saving of changes made to [dialogData](#dialogdata),
      [userData](#userdata), [conversationdata](#conversationdata), or
      [privateConversationData'(#privateconversationdata).
    isPreview: false
    isDeprecated: false
    syntax:
      content: function save()
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: 'send(string | string[] | IAction | IIsAction, any[])'
    uid: botbuilder-calling.CallSession.send
    package: botbuilder-calling
    summary: Sends a PlayPrompt action to the user.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function send(action: string | string[] | IAction | IIsAction, args:
        any[])
      parameters:
        - id: action
          type: >-
            string | string[] | <xref uid="botbuilder-calling.IAction" /> |
            <xref uid="botbuilder-calling.IIsAction" />
          description: >-

            * __action:__ _{string}_ - Text of the message to send. The message
            will be localized using the sessions configured localizer. If
            arguments are passed in the message will be formatted using
            [sprintf-js](https://github.com/alexei/sprintf.js).

            * __action:__ _{string[]}_ - The sent message will be chosen at
            random from the array.

            * __action:__ _{IAction|IIsAction}_ - Action to send.
        - id: args
          type: 'any[]'
          description: >
            (Optional) arguments used to format the final output text when
            __action__ is a _{string|string[]}_.
      return:
        type: <xref uid="botbuilder-calling.CallSession" />
        description: ''
  - name: sendBatch()
    uid: botbuilder-calling.CallSession.sendBatch
    package: botbuilder-calling
    summary: Immediately ends the current batch and delivers any queued up messages.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function sendBatch()
