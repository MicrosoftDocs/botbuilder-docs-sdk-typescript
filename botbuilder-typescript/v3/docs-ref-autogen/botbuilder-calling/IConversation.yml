### YamlMime:TSType
name: IConversation
uid: botbuilder-calling.IConversation
package: botbuilder-calling
summary: >-
  IConversation is a JSON body of a first request for new Skype voice call made
  by Skype Bot Platform

  for Calling to a bot. IConversation JSON body is posted on initial HTTPs
  endpoint registered by a bot

  developer in the Bot Framework Portal. IConversation request contains
  information about caller and target

  of the call and some additional information about initial state of a call.
fullName: IConversation
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: address
    uid: botbuilder-calling.IConversation.address
    package: botbuilder-calling
    summary: >-
      Address routing information for the event. Save this field to external
      storage somewhere to later compose a proactive message to the user.
    fullName: address
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'address: IAddress'
      return:
        type: <xref uid="botbuilder-calling.IAddress" />
        description: ''
  - name: agent
    uid: botbuilder-calling.IConversation.agent
    package: botbuilder-calling
    summary: SDK thats processing the event. Will always be 'botbuilder'.
    fullName: agent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'agent: string'
      return:
        type: string
        description: ''
  - name: callState
    uid: botbuilder-calling.IConversation.callState
    package: botbuilder-calling
    summary: Indicates the current state of the call.
    fullName: callState
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'callState: string'
      return:
        type: string
        description: ''
  - name: links
    uid: botbuilder-calling.IConversation.links
    package: botbuilder-calling
    summary: Dictionary containing list of HTTPs links.
    fullName: links
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'links?: any'
      return:
        type: any
        description: ''
  - name: presentedModalityTypes
    uid: botbuilder-calling.IConversation.presentedModalityTypes
    package: botbuilder-calling
    summary: Flag indicates which modalities were presented by Skype user for a call.
    fullName: presentedModalityTypes
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'presentedModalityTypes: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: source
    uid: botbuilder-calling.IConversation.source
    package: botbuilder-calling
    summary: 'The original source of the event (i.e. ''facebook'', ''skype'', ''slack'', etc.)'
    fullName: source
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'source: string'
      return:
        type: string
        description: ''
  - name: sourceEvent
    uid: botbuilder-calling.IConversation.sourceEvent
    package: botbuilder-calling
    summary: >-
      The original event in the sources native schema. For outgoing messages can
      be used to pass source specific event data like custom attachments.
    fullName: sourceEvent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sourceEvent: any'
      return:
        type: any
        description: ''
  - name: type
    uid: botbuilder-calling.IConversation.type
    package: botbuilder-calling
    summary: Defines type of event. Should be 'message' for an IEvent.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        type: string
        description: ''
  - name: user
    uid: botbuilder-calling.IConversation.user
    package: botbuilder-calling
    summary: >-
      For incoming event this is the user that sent the event. By default this
      is a copy of
      [address.user](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iaddress.html#user)
      but you can configure your bot with a

      [lookupUser](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iuniversalcallbotsettings.html#lookupuser)
      function that lets map the incoming user to an internal user id.
    fullName: user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'user: IIdentity'
      return:
        type: <xref uid="botbuilder-calling.IIdentity" />
        description: ''
extends: <xref uid="botbuilder-calling.IEvent" />
